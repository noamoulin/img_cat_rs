// Copyright 2023 StarkWare Industries Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.starkware.co/open-source-license/
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions
// and limitations under the License.

#include <map>
#include <utility>

#include "starkware/math/math.h"
#include "starkware/utils/task_manager.h"

namespace starkware {
namespace cpu {

template <typename FieldElementT>
std::unique_ptr<CompositionPolynomial>
CpuAirDefinition<FieldElementT, 11>::CreateCompositionPolynomial(
    const FieldElement& trace_generator, const ConstFieldElementSpan& random_coefficients) const {
  Builder builder(kNumPeriodicColumns);
  const FieldElementT& gen = trace_generator.As<FieldElementT>();

  const std::vector<uint64_t> point_exponents = {
      uint64_t(
          (((uses_bitwise_builtin) != (0)) ? (SafeDiv((4) * (trace_length_), bitwise__row_ratio))
                                           : 0)),
      uint64_t(
          (((uses_bitwise_builtin) != (0)) ? (SafeDiv(trace_length_, bitwise__row_ratio)) : 0)),
      uint64_t(SafeDiv(trace_length_, cpu_component_step)),
      uint64_t(SafeDiv(trace_length_, (16) * (cpu_component_step))),
      uint64_t(SafeDiv(trace_length_, diluted_units_row_ratio)),
      uint64_t(
          (((uses_ec_op_builtin) != (0))
               ? (SafeDiv((256) * (trace_length_), ec_op_builtin_row_ratio))
               : 0)),
      uint64_t(
          (((uses_ec_op_builtin) != (0)) ? (SafeDiv(trace_length_, ec_op_builtin_row_ratio)) : 0)),
      uint64_t(
          (((uses_ecdsa_builtin) != (0))
               ? (SafeDiv((512) * (trace_length_), ecdsa_builtin_row_ratio))
               : 0)),
      uint64_t(
          (((uses_ecdsa_builtin) != (0))
               ? (SafeDiv((256) * (trace_length_), ecdsa_builtin_row_ratio))
               : 0)),
      uint64_t(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv((2) * (trace_length_), ecdsa_builtin_row_ratio))
                                         : 0)),
      uint64_t(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(trace_length_, ecdsa_builtin_row_ratio)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv((4096) * (trace_length_), keccak__row_ratio))
                                          : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv((128) * (trace_length_), keccak__row_ratio))
                                          : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv((16) * (trace_length_), keccak__row_ratio))
                                          : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv((4) * (trace_length_), keccak__row_ratio))
                                          : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, keccak__row_ratio)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, (16) * (keccak__row_ratio)))
                                          : 0)),
      uint64_t(SafeDiv(trace_length_, memory_units_row_ratio)),
      uint64_t(SafeDiv(trace_length_, (8) * (memory_units_row_ratio))),
      uint64_t(
          (((uses_pedersen_builtin) != (0))
               ? (SafeDiv((512) * (trace_length_), pedersen_builtin_row_ratio))
               : 0)),
      uint64_t(
          (((uses_pedersen_builtin) != (0))
               ? (SafeDiv((2) * (trace_length_), pedersen_builtin_row_ratio))
               : 0)),
      uint64_t(
          (((uses_pedersen_builtin) != (0)) ? (SafeDiv(trace_length_, pedersen_builtin_row_ratio))
                                            : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv((64) * (trace_length_), poseidon__row_ratio))
                                            : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv((32) * (trace_length_), poseidon__row_ratio))
                                            : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv((8) * (trace_length_), poseidon__row_ratio))
                                            : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv((2) * (trace_length_), poseidon__row_ratio))
                                            : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(trace_length_, poseidon__row_ratio)) : 0)),
      uint64_t(
          (((uses_range_check_builtin) != (0))
               ? (SafeDiv(trace_length_, range_check_builtin_row_ratio))
               : 0)),
      uint64_t(SafeDiv(trace_length_, range_check_units_row_ratio))};
  const std::vector<uint64_t> gen_exponents = {
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 4)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv(trace_length_, 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv(trace_length_, 32)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv(trace_length_, 16)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv(trace_length_, 8)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 64)) : 0)),
      uint64_t(SafeDiv((15) * (trace_length_), 16)),
      uint64_t((((uses_ec_op_builtin) != (0)) ? (SafeDiv((255) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_ec_op_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_ecdsa_builtin) != (0)) ? (SafeDiv((255) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_ecdsa_builtin) != (0)) ? (SafeDiv((251) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 16)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 16)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((15) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 8)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((5) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 16)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 16)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 16)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 16)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((7) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 8)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((3) * (trace_length_), 8)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 2)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv(trace_length_, 2)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((17) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 32)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((21) * (trace_length_), 32)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 16)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 256)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 128)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 256)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 64)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 256)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 512)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 1024)) + (SafeDiv((11) * (trace_length_), 16)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 262144)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 131072)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 262144)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 262144)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 131072)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 262144)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 524288)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((33) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((97) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((129) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((161) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((193) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((225) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((257) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((289) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((321) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((353) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((385) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((417) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((449) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((481) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((513) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((545) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((577) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((609) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((641) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((673) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((705) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((737) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((769) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((35) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((33) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((67) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((69) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((35) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((71) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((73) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((75) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((77) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((79) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((81) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((83) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((85) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((87) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((89) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((91) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((93) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((99) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((101) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((103) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((105) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((107) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((109) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((111) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((113) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((115) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((117) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((119) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((121) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((123) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((125) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((131) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((33) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((133) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((67) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((135) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((137) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((69) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((139) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((35) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((141) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((71) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((143) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((145) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((73) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((147) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((149) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((75) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((151) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((153) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((77) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((155) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((157) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((81) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((163) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((165) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((83) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((167) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((169) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((85) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((171) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((173) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((87) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((175) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((177) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((89) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((179) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((181) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((91) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((183) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((185) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((93) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((187) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((189) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((97) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((195) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((197) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((99) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((199) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((201) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((101) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((203) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((205) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((103) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((207) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((209) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((105) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((211) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((213) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((107) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((215) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((217) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((109) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((219) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((221) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((113) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((227) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((229) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((115) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((231) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((233) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((117) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((235) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((237) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((119) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((239) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((241) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((121) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((243) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((245) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((123) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((247) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((249) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((125) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((251) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((253) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((129) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((259) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((261) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((131) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((263) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((33) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((265) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((133) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((267) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((67) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((269) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((135) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((271) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((273) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((137) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((275) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((69) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((277) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((139) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((279) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((35) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((281) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((141) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((283) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((71) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((285) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((145) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((291) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((73) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((293) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((147) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((295) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((297) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((149) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((299) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((75) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((301) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((151) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((303) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((305) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((153) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((307) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((77) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((309) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((155) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((311) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((313) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((157) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((315) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((79) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((317) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((161) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((323) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((81) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((325) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((163) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((327) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((329) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((165) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((331) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((83) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((333) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((167) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((335) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((337) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((169) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((339) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((85) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((341) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((171) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((343) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((345) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((173) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((347) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((87) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((349) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((177) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((355) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((89) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((357) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((179) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((359) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((361) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((181) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((363) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((91) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((365) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((183) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((367) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((369) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((185) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((371) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((93) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((373) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((187) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((375) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((377) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((189) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((379) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((95) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((381) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((193) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((387) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((97) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((389) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((195) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((391) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((393) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((197) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((395) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((99) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((397) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((199) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((399) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((401) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((201) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((403) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((101) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((405) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((203) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((407) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((409) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((205) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((411) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((103) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((413) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((209) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((419) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((105) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((421) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((211) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((423) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((425) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((213) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((427) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((107) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((429) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((215) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((431) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((433) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((217) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((435) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((109) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((437) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((219) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((439) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((441) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((221) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((443) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((111) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((445) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((225) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((451) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((113) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((453) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((227) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((455) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((457) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((229) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((459) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((115) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((461) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((231) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((463) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((465) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((233) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((467) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((117) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((469) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((235) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((471) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((473) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((237) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((475) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((119) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((477) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((241) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((483) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((121) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((485) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((243) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((487) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((489) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((245) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((491) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((123) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((493) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((247) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((495) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((497) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((249) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((499) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((125) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((501) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((251) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((503) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((505) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((253) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((507) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((127) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((509) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((257) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((515) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((129) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((517) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((259) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((519) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((521) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((261) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((523) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((131) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((525) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((263) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((527) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((33) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((529) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((265) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((531) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((133) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((533) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((267) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((535) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((67) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((537) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((269) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((539) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((135) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((541) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((273) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((547) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((137) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((549) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((275) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((551) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((69) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((553) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((277) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((555) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((139) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((557) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((279) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((559) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((35) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((561) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((281) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((563) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((141) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((565) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((283) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((567) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((71) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((569) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((285) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((571) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((143) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((573) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((289) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((579) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((145) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((581) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((291) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((583) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((73) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((585) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((293) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((587) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((147) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((589) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((295) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((591) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((593) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((297) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((595) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((149) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((597) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((299) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((599) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((75) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((601) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((301) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((603) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((151) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((605) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((305) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((611) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((153) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((613) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((307) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((615) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((77) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((617) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((309) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((619) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((155) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((621) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((311) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((623) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((625) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((313) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((627) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((157) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((629) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((315) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((631) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((79) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((633) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((317) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((635) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((159) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((637) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((321) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((643) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((161) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((645) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((323) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((647) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((81) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((649) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((325) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((651) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((163) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((653) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((327) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((655) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((657) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((329) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((659) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((165) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((661) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((331) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((663) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((83) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((665) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((333) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((667) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((167) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((669) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((337) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((675) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((169) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((677) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((339) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((679) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((85) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((681) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((341) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((683) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((171) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((685) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((343) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((687) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((689) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((345) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((691) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((173) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((693) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((347) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((695) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((87) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((697) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((349) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((699) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((175) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((701) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((353) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((707) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((177) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((709) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((355) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((711) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((89) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((713) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((357) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((715) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((179) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((717) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((359) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((719) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((721) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((361) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((723) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((181) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((725) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((363) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((727) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((91) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((729) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((365) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((731) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((183) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((733) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((369) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((739) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((185) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((741) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((371) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((743) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((93) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((745) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((373) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((747) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((187) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((749) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((375) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((751) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((753) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((377) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((755) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((189) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((757) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((379) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((759) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((95) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((761) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((381) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((763) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((191) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((765) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((385) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((771) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((193) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((773) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((387) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((775) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((97) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((777) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((389) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((779) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((195) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((781) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((391) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((783) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((785) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((393) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((787) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((197) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((789) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((395) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((791) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((99) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((793) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((397) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((795) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((199) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((797) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 8)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2017) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1009) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2019) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((505) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2021) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1011) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2023) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((253) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2025) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1013) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2027) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((507) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2029) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1015) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2031) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((127) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2033) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1017) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2035) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((509) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2037) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1019) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2039) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((255) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64513) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((833) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((865) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((897) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((929) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((961) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((993) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64545) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64577) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64609) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64641) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64673) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64705) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64737) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64769) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64801) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64833) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64865) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64897) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64929) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64961) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64993) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65025) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65057) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65089) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65121) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65153) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65185) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65217) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65249) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65281) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2041) * (trace_length_), 2048)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65313) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32257) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64515) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16129) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64517) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32259) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64519) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8065) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64521) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32261) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64523) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16131) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64525) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32263) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64527) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4033) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64529) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32265) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64531) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16133) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64533) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32267) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64535) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((417) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((835) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((209) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((837) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((419) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((839) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((105) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((841) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((421) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((843) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((211) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((845) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((423) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((847) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((849) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((425) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((851) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((213) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((853) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((427) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((855) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((107) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((857) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((429) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((859) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((215) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((861) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((433) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((867) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((217) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((869) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((435) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((871) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((109) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((873) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((437) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((875) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((219) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((877) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((439) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((879) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((881) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((441) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((883) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((221) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((885) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((443) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((887) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((111) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((889) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((445) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((891) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((223) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((893) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((449) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((899) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((225) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((901) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((451) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((903) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((113) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((905) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((453) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((907) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((227) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((909) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((455) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((911) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((913) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((457) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((915) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((229) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((917) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((459) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((919) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((115) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((921) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((461) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((923) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((231) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((925) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((465) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((931) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((233) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((933) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((467) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((935) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((117) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((937) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((469) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((939) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((235) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((941) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((471) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((943) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((945) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((473) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((947) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((237) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((949) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((475) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((951) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((119) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((953) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((477) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((955) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((239) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((957) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((481) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((963) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((241) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((965) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((483) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((967) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((121) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((969) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((485) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((971) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((243) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((973) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((487) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((975) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((977) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((489) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((979) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((245) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((981) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((491) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((983) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((123) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((985) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((493) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((987) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((247) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((989) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((497) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((995) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((249) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((997) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((499) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((999) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((125) * (trace_length_), 128)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1001) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((501) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1003) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((251) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1005) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((503) * (trace_length_), 512)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1007) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1021) * (trace_length_), 1024)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8067) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64537) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32269) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64539) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16135) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64541) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32273) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64547) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16137) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64549) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32275) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64551) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8069) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64553) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32277) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64555) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16139) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64557) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32279) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64559) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4035) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64561) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32281) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64563) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16141) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64565) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32283) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64567) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8071) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64569) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32285) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64571) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16143) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64573) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32289) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64579) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16145) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64581) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32291) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64583) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8073) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64585) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32293) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64587) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16147) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64589) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32295) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64591) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4037) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64593) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32297) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64595) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16149) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64597) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32299) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64599) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8075) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64601) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32301) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64603) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16151) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64605) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32305) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64611) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16153) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64613) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32307) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64615) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8077) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64617) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32309) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64619) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16155) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64621) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32311) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64623) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4039) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64625) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32313) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64627) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16157) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64629) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32315) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64631) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8079) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64633) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32317) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64635) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16159) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64637) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32321) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64643) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16161) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64645) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32323) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64647) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8081) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64649) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32325) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64651) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16163) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64653) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32327) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64655) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4041) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64657) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32329) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64659) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16165) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64661) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32331) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64663) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8083) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64665) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32333) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64667) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16167) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64669) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32337) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64675) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16169) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64677) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32339) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64679) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8085) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64681) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32341) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64683) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16171) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64685) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32343) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64687) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4043) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64689) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32345) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64691) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16173) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64693) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32347) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64695) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8087) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64697) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32349) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64699) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16175) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64701) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32353) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64707) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16177) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64709) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32355) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64711) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8089) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64713) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32357) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64715) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16179) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64717) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32359) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64719) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4045) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64721) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32361) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64723) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16181) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64725) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32363) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64727) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8091) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64729) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32365) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64731) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16183) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64733) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32369) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64739) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16185) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64741) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32371) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64743) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8093) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64745) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32373) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64747) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16187) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64749) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32375) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64751) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4047) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64753) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32377) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64755) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16189) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64757) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32379) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64759) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8095) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64761) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32381) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64763) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16191) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64765) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32385) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64771) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16193) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64773) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32387) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64775) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8097) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64777) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32389) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64779) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16195) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64781) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32391) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64783) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4049) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64785) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32393) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64787) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16197) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64789) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32395) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64791) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8099) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64793) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32397) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64795) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16199) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64797) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32401) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64803) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16201) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64805) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32403) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64807) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8101) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64809) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32405) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64811) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16203) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64813) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32407) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64815) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4051) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64817) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32409) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64819) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16205) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64821) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32411) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64823) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8103) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64825) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32413) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64827) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16207) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64829) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32417) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64835) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16209) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64837) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32419) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64839) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8105) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64841) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32421) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64843) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16211) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64845) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32423) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64847) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4053) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64849) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32425) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64851) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16213) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64853) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32427) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64855) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8107) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64857) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32429) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64859) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16215) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64861) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32433) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64867) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16217) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64869) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32435) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64871) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8109) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64873) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32437) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64875) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16219) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64877) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32439) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64879) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4055) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64881) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32441) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64883) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16221) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64885) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32443) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64887) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8111) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64889) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32445) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64891) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16223) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64893) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32449) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64899) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16225) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64901) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32451) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64903) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8113) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64905) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32453) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64907) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16227) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64909) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32455) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64911) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4057) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64913) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32457) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64915) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16229) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64917) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32459) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64919) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8115) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64921) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32461) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64923) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16231) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64925) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32465) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64931) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16233) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64933) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32467) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64935) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8117) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64937) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32469) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64939) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16235) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64941) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32471) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64943) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4059) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64945) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32473) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64947) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16237) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64949) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32475) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64951) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8119) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64953) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32477) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64955) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16239) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64957) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32481) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64963) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16241) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64965) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32483) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64967) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8121) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64969) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32485) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64971) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16243) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64973) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32487) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64975) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4061) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64977) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32489) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64979) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16245) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64981) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32491) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64983) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8123) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64985) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32493) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64987) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16247) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64989) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32497) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64995) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16249) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64997) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32499) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((64999) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8125) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65001) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32501) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65003) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16251) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65005) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32503) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65007) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4063) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65009) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32505) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65011) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16253) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65013) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32507) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65015) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8127) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65017) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32509) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65019) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16255) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65021) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32513) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65027) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16257) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65029) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32515) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65031) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8129) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65033) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32517) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65035) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16259) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65037) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32519) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65039) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4065) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65041) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32521) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65043) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16261) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65045) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32523) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65047) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8131) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65049) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32525) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65051) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16263) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65053) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32529) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65059) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16265) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65061) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32531) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65063) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8133) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65065) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32533) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65067) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16267) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65069) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32535) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65071) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4067) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65073) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32537) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65075) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16269) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65077) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32539) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65079) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8135) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65081) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32541) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65083) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16271) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65085) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32545) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65091) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16273) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65093) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32547) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65095) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8137) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65097) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32549) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65099) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16275) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65101) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32551) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65103) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4069) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65105) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32553) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65107) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16277) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65109) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32555) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65111) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8139) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65113) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32557) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65115) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16279) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65117) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32561) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65123) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16281) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65125) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32563) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65127) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8141) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65129) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32565) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65131) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16283) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65133) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32567) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65135) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4071) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65137) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32569) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65139) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16285) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65141) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32571) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65143) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8143) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65145) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32573) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65147) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16287) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65149) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32577) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65155) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16289) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65157) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32579) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65159) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8145) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65161) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32581) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65163) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16291) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65165) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32583) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65167) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4073) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65169) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32585) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65171) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16293) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65173) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32587) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65175) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8147) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65177) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32589) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65179) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16295) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65181) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32593) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65187) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16297) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65189) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32595) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65191) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8149) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65193) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32597) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65195) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16299) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65197) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32599) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65199) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4075) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65201) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32601) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65203) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16301) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65205) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32603) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65207) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8151) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65209) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32605) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65211) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16303) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65213) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32609) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65219) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16305) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65221) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32611) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65223) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8153) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65225) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32613) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65227) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16307) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65229) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32615) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65231) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4077) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65233) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32617) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65235) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16309) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65237) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32619) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65239) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8155) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65241) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32621) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65243) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16311) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65245) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32625) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65251) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16313) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65253) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32627) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65255) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8157) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65257) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32629) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65259) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16315) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65261) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32631) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65263) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4079) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65265) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32633) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65267) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16317) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65269) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32635) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65271) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8159) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65273) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32637) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65275) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16319) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65277) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32641) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65283) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16321) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65285) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32643) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65287) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8161) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65289) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32645) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65291) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16323) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65293) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32647) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65295) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4081) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65297) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32649) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65299) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16325) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65301) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32651) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65303) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8163) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65305) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32653) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65307) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16327) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65309) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32657) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65315) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16329) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65317) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32659) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65319) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8165) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65321) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32661) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65323) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16331) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65325) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32663) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65327) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4083) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65329) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32665) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65331) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16333) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65333) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32667) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65335) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8167) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65337) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((32669) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65339) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16335) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65341) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63489) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31745) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63491) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15873) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63493) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31747) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63495) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7937) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63497) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31749) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63499) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15875) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63501) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31751) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63503) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3969) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63505) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31753) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63507) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15877) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63509) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31755) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((63511) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62465) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31233) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62467) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15617) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62469) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31235) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62471) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7809) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62473) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31237) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62475) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15619) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62477) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31239) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62479) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3905) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62481) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31241) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62483) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15621) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62485) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31243) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((62487) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59393) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29697) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59395) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14849) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59397) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29699) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59399) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60417) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30209) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60419) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15105) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60421) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30211) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60423) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61441) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30721) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61443) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15361) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61445) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30723) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61447) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7425) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59401) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29701) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59403) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14851) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59405) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29703) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59407) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3713) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59409) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29705) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59411) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14853) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59413) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29707) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((59415) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7553) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60425) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30213) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60427) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15107) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60429) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30215) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60431) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3777) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60433) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30217) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60435) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15109) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60437) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30219) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((60439) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7681) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61449) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30725) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61451) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15363) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61453) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30727) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61455) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3841) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61457) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30729) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61459) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15365) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61461) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((30731) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((61463) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57345) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28673) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57347) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14337) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57349) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28675) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57351) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58369) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29185) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58371) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14593) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58373) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29187) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58375) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7169) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57353) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28677) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57355) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14339) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57357) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28679) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57359) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3585) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57361) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28681) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57363) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14341) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57365) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28683) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((57367) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7297) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58377) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29189) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58379) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14595) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58381) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29191) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58383) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3649) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58385) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29193) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58387) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14597) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58389) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((29195) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((58391) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56321) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28161) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56323) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14081) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56325) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28163) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56327) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55297) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27649) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55299) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13825) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55301) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27651) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55303) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6913) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55305) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27653) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55307) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13827) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55309) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27655) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55311) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3457) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55313) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27657) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55315) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13829) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55317) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27659) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((55319) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7041) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56329) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28165) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56331) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14083) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56333) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28167) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56335) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3521) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56337) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28169) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56339) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14085) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56341) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((28171) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((56343) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51201) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25601) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51203) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12801) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51205) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25603) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51207) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52225) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26113) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52227) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13057) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52229) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26115) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52231) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53249) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26625) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53251) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13313) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53253) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26627) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53255) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54273) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27137) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54275) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13569) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54277) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27139) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54279) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6401) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51209) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25605) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51211) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12803) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51213) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25607) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51215) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3201) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51217) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25609) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51219) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12805) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51221) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25611) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((51223) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6529) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52233) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26117) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52235) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13059) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52237) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26119) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52239) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3265) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52241) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26121) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52243) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13061) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52245) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26123) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((52247) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6657) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53257) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26629) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53259) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13315) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53261) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26631) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53263) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3329) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53265) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26633) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53267) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13317) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53269) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26635) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((53271) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6785) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54281) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27141) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54283) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13571) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54285) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27143) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54287) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3393) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54289) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27145) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54291) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13573) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54293) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27147) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((54295) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50177) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25089) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50179) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12545) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50181) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25091) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50183) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6273) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50185) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25093) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50187) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12547) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50189) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25095) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50191) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3137) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50193) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25097) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50195) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12549) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50197) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25099) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((50199) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47105) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23553) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47107) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11777) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47109) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23555) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47111) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48129) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24065) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48131) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12033) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48133) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24067) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48135) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 4)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49153) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24577) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49155) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12289) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49157) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24579) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49159) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5889) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47113) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23557) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47115) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11779) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47117) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23559) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47119) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2945) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47121) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23561) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47123) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11781) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47125) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23563) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((47127) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6017) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48137) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24069) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48139) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12035) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48141) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24071) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48143) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3009) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48145) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24073) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48147) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12037) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48149) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24075) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((48151) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6145) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49161) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24581) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49163) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12291) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49165) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24583) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49167) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3073) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49169) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24585) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49171) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12293) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49173) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24587) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((49175) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46081) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23041) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46083) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11521) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46085) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23043) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46087) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5761) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46089) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23045) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46091) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11523) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46093) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23047) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46095) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2881) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46097) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23049) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46099) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11525) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46101) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23051) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((46103) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45057) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22529) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45059) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11265) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45061) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22531) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45063) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5633) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45065) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22533) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45067) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11267) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45069) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22535) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45071) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2817) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45073) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22537) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45075) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11269) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45077) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22539) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((45079) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44033) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22017) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44035) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11009) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44037) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22019) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44039) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5505) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44041) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22021) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44043) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11011) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44045) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22023) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44047) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2753) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44049) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22025) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44051) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11013) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44053) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22027) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((44055) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41985) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20993) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41987) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10497) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41989) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20995) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41991) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43009) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21505) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43011) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10753) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43013) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21507) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43015) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39937) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19969) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39939) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9985) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39941) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19971) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39943) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40961) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20481) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40963) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10241) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40965) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20483) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40967) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4993) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39945) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19973) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39947) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9987) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39949) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19975) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39951) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2497) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39953) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19977) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39955) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9989) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39957) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19979) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((39959) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5121) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40969) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20485) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40971) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10243) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40973) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20487) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40975) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2561) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40977) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20489) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40979) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10245) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40981) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20491) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((40983) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5249) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41993) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20997) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41995) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10499) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41997) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20999) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((41999) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2625) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((42001) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21001) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((42003) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10501) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((42005) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21003) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((42007) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5377) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43017) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21509) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43019) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10755) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43021) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21511) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43023) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2689) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43025) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21513) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43027) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10757) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43029) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21515) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((43031) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37889) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18945) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37891) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9473) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37893) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18947) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37895) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4737) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37897) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18949) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37899) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9475) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37901) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18951) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37903) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2369) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37905) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18953) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37907) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9477) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37909) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18955) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((37911) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38913) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19457) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38915) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9729) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38917) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19459) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38919) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4865) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38921) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19461) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38923) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9731) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38925) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19463) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38927) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2433) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38929) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19465) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38931) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9733) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38933) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19467) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((38935) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36865) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18433) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36867) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9217) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36869) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18435) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36871) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4609) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36873) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18437) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36875) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9219) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36877) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18439) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36879) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2305) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36881) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18441) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36883) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9221) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36885) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18443) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((36887) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1025) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((513) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1027) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((257) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1029) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((515) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1031) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((129) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1033) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((517) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1035) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((259) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1037) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((519) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1039) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((65) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1041) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((521) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1043) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((261) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1045) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((523) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1047) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2049) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1025) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2051) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((513) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2053) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1027) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2055) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3073) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1537) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3075) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((769) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3077) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1539) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3079) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4097) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2049) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4099) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1025) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4101) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2051) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4103) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5121) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2561) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5123) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1281) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5125) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2563) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5127) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((257) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2057) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1029) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2059) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((515) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2061) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1031) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2063) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((129) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2065) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1033) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2067) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((517) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2069) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1035) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2071) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((385) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3081) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1541) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3083) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((771) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3085) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1543) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3087) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((193) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3089) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1545) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3091) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((773) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3093) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1547) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3095) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((513) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4105) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2053) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4107) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1027) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4109) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2055) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4111) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((257) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4113) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2057) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4115) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1029) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4117) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2059) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4119) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((641) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5129) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2565) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5131) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1283) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5133) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2567) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5135) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((321) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5137) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2569) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5139) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1285) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5141) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2571) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5143) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6145) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3073) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6147) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1537) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6149) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3075) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6151) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7169) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3585) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7171) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1793) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7173) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3587) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7175) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 8)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8193) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4097) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8195) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2049) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8197) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4099) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8199) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9217) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4609) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9219) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2305) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9221) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4611) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9223) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((769) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6153) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3077) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6155) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1539) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6157) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3079) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6159) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((385) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6161) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3081) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6163) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1541) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6165) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3083) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6167) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((897) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7177) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3589) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7179) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1795) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7181) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3591) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7183) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((449) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7185) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3593) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7187) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1797) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7189) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3595) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7191) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1025) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8201) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4101) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8203) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2051) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8205) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4103) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8207) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((513) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8209) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4105) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8211) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2053) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8213) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4107) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8215) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1153) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9225) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4613) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9227) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2307) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9229) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4615) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9231) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((577) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9233) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4617) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9235) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2309) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9237) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4619) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9239) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10241) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5121) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10243) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2561) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10245) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5123) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10247) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11265) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5633) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11267) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2817) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11269) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5635) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11271) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12289) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6145) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12291) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3073) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12293) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6147) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12295) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13313) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6657) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13315) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3329) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13317) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6659) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13319) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14337) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7169) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14339) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3585) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14341) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7171) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14343) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15361) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7681) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15363) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3841) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15365) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7683) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15367) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv(trace_length_, 4)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16385) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8193) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16387) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4097) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16389) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8195) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16391) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17409) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8705) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17411) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4353) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17413) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8707) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17415) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18433) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9217) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18435) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4609) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18437) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9219) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18439) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19457) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9729) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19459) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4865) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19461) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9731) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19463) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1281) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10249) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5125) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10251) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2563) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10253) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5127) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10255) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((641) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10257) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5129) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10259) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2565) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10261) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5131) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10263) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1409) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11273) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5637) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11275) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2819) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11277) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5639) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11279) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((705) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11281) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5641) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11283) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2821) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11285) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5643) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11287) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1537) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12297) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6149) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12299) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3075) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12301) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6151) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12303) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((769) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12305) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6153) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12307) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3077) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12309) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6155) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12311) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1665) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13321) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6661) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13323) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3331) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13325) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6663) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13327) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((833) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13329) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6665) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13331) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3333) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13333) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6667) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13335) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1793) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14345) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7173) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14347) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3587) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14349) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7175) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14351) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((897) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14353) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7177) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14355) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3589) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14357) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7179) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((14359) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1921) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15369) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7685) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15371) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3843) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15373) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7687) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15375) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((961) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15377) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7689) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15379) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3845) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15381) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((7691) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((15383) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2049) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16393) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8197) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16395) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4099) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16397) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8199) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16399) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1025) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16401) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8201) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16403) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4101) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16405) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8203) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((16407) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2177) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17417) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8709) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17419) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4355) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17421) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8711) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17423) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1089) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17425) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8713) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17427) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4357) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17429) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((8715) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((17431) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2305) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18441) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9221) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18443) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4611) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18445) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9223) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18447) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1153) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18449) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9225) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18451) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4613) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18453) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9227) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((18455) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2433) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19465) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9733) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19467) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4867) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19469) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9735) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19471) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1217) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19473) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9737) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19475) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((4869) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19477) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((9739) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((19479) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20481) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10241) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20483) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5121) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20485) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10243) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20487) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2561) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20489) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10245) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20491) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5123) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20493) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10247) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20495) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1281) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20497) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10249) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20499) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5125) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20501) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10251) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((20503) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21505) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10753) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21507) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5377) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21509) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10755) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21511) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22529) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11265) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22531) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5633) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22533) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11267) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22535) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23553) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11777) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23555) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5889) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23557) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11779) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23559) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24577) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12289) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24579) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6145) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24581) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12291) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24583) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2689) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21513) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10757) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21515) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5379) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21517) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10759) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21519) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1345) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21521) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10761) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21523) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5381) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21525) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((10763) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((21527) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2817) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22537) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11269) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22539) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5635) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22541) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11271) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22543) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1409) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22545) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11273) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22547) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5637) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22549) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11275) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((22551) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((2945) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23561) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11781) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23563) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5891) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23565) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11783) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23567) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1473) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23569) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11785) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23571) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((5893) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23573) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((11787) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((23575) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3073) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24585) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12293) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24587) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6147) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24589) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12295) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24591) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1537) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24593) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12297) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24595) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6149) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24597) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12299) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((24599) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25601) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12801) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25603) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6401) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25605) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12803) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25607) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3201) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25609) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12805) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25611) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6403) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25613) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12807) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25615) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1601) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25617) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12809) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25619) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6405) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25621) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((12811) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((25623) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26625) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13313) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26627) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6657) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26629) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13315) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26631) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3329) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26633) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13317) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26635) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6659) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26637) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13319) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26639) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1665) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26641) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13321) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26643) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6661) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26645) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13323) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((26647) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27649) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13825) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27651) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6913) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27653) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13827) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27655) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((3457) * (trace_length_), 8192)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27657) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13829) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27659) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6915) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27661) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13831) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27663) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((1729) * (trace_length_), 4096)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27665) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13833) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27667) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((6917) * (trace_length_), 16384)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27669) * (trace_length_), 65536)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((13835) * (trace_length_), 32768)) : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((27671) * (trace_length_), 65536)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv(trace_length_, 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv((3) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv((7) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv((15) * (trace_length_), 64)))
               : 0)),
      uint64_t((((uses_keccak_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 64)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv((31) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 16384)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 8192)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((3) * (trace_length_), 16384)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((13) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((7) * (trace_length_), 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((15) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv(trace_length_, 4096)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((17) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((9) * (trace_length_), 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((19) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((5) * (trace_length_), 16384)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((21) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((11) * (trace_length_), 32768)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0))
               ? ((SafeDiv((23) * (trace_length_), 65536)) + (SafeDiv((63) * (trace_length_), 64)))
               : 0)),
      uint64_t((((uses_pedersen_builtin) != (0)) ? (SafeDiv((255) * (trace_length_), 256)) : 0)),
      uint64_t((((uses_pedersen_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_pedersen_builtin) != (0)) ? (SafeDiv(trace_length_, 2)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((3) * (trace_length_), 4)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((31) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((61) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((63) * (trace_length_), 64)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((11) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((23) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((25) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((13) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((27) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((7) * (trace_length_), 8)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((29) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((15) * (trace_length_), 16)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((19) * (trace_length_), 32)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((5) * (trace_length_), 8)) : 0)),
      uint64_t((((uses_poseidon_builtin) != (0)) ? (SafeDiv((21) * (trace_length_), 32)) : 0)),
      uint64_t((trace_length_) - ((16) * (cpu_component_step))),
      uint64_t((trace_length_) - (memory_units_row_ratio)),
      uint64_t((trace_length_) - (range_check_units_row_ratio)),
      uint64_t((trace_length_) - (diluted_units_row_ratio)),
      uint64_t((
          ((uses_pedersen_builtin) != (0)) ? ((trace_length_) - (pedersen_builtin_row_ratio)) : 0)),
      uint64_t(
          (((uses_range_check_builtin) != (0)) ? ((trace_length_) - (range_check_builtin_row_ratio))
                                               : 0)),
      uint64_t((((uses_ecdsa_builtin) != (0)) ? ((trace_length_) - (ecdsa_builtin_row_ratio)) : 0)),
      uint64_t((((uses_bitwise_builtin) != (0)) ? ((trace_length_) - (bitwise__row_ratio)) : 0)),
      uint64_t((((uses_ec_op_builtin) != (0)) ? ((trace_length_) - (ec_op_builtin_row_ratio)) : 0)),
      uint64_t(
          (((uses_keccak_builtin) != (0)) ? ((trace_length_) - (SafeDiv(keccak__row_ratio, 16)))
                                          : 0)),
      uint64_t(
          (((uses_poseidon_builtin) != (0)) ? ((trace_length_) - (SafeDiv(poseidon__row_ratio, 2)))
                                            : 0))};

  BuildAutoPeriodicColumns(gen, &builder);

  BuildPeriodicColumns(gen, &builder);

  return builder.BuildUniquePtr(
      UseOwned(this), gen, trace_length_, random_coefficients.As<FieldElementT>(), point_exponents,
      BatchPow(gen, gen_exponents));
}

template <typename FieldElementT>
void CpuAirDefinition<FieldElementT, 11>::BuildAutoPeriodicColumns(
    const FieldElementT& gen, Builder* builder) const {
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey0PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey0PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey0PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey1PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey1PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey1PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey3PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey3PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey3PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey7PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey7PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey7PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey15PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey15PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey15PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey31PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey31PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey31PeriodicColumn);
  }
  if ((uses_keccak_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kKeccakKeccakKeccakRoundKey63PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(keccak__row_ratio, 4096)),
        kKeccakKeccakKeccakRoundKey63PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kKeccakKeccakKeccakRoundKey63PeriodicColumn);
  }
  if ((uses_poseidon_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kPoseidonPoseidonFullRoundKey0PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(poseidon__row_ratio, 8)),
        kPoseidonPoseidonFullRoundKey0PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kPoseidonPoseidonFullRoundKey0PeriodicColumn);
  }
  if ((uses_poseidon_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kPoseidonPoseidonFullRoundKey1PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(poseidon__row_ratio, 8)),
        kPoseidonPoseidonFullRoundKey1PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kPoseidonPoseidonFullRoundKey1PeriodicColumn);
  }
  if ((uses_poseidon_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kPoseidonPoseidonFullRoundKey2PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(poseidon__row_ratio, 8)),
        kPoseidonPoseidonFullRoundKey2PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kPoseidonPoseidonFullRoundKey2PeriodicColumn);
  }
  if ((uses_poseidon_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kPoseidonPoseidonPartialRoundKey0PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(poseidon__row_ratio, 64)),
        kPoseidonPoseidonPartialRoundKey0PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kPoseidonPoseidonPartialRoundKey0PeriodicColumn);
  }
  if ((uses_poseidon_builtin) != (0)) {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kPoseidonPoseidonPartialRoundKey1PeriodicColumnData, gen, FieldElementT::One(),
            this->trace_length_, SafeDiv(poseidon__row_ratio, 32)),
        kPoseidonPoseidonPartialRoundKey1PeriodicColumn);

  } else {
    builder->AddPeriodicColumn(
        PeriodicColumn<FieldElementT>(
            kTrivialPeriodicColumnData, gen, FieldElementT::One(), this->trace_length_, 1),
        kPoseidonPoseidonPartialRoundKey1PeriodicColumn);
  }
};

template <typename FieldElementT>
std::vector<std::vector<FieldElementT>>
CpuAirDefinition<FieldElementT, 11>::PrecomputeDomainEvalsOnCoset(
    const FieldElementT& point, const FieldElementT& generator,
    gsl::span<const uint64_t> point_exponents,
    [[maybe_unused]] gsl::span<const FieldElementT> shifts) const {
  const std::vector<FieldElementT> strict_point_powers = BatchPow(point, point_exponents);
  const std::vector<FieldElementT> gen_powers = BatchPow(generator, point_exponents);

  // point_powers[i][j] is the evaluation of the ith power at its jth point.
  // The index j runs until the order of the domain (beyond we'd cycle back to point_powers[i][0]).
  std::vector<std::vector<FieldElementT>> point_powers(point_exponents.size());
  for (size_t i = 0; i < point_exponents.size(); ++i) {
    uint64_t size = point_exponents[i] == 0 ? 0 : SafeDiv(trace_length_, point_exponents[i]);
    auto& vec = point_powers[i];
    auto power = strict_point_powers[i];
    vec.reserve(size);
    if (size > 0) {
      vec.push_back(power);
    }
    for (size_t j = 1; j < size; ++j) {
      power *= gen_powers[i];
      vec.push_back(power);
    }
  }

  [[maybe_unused]] TaskManager& task_manager = TaskManager::GetInstance();
  constexpr size_t kPeriodUpperBound = 4194305;
  constexpr size_t kTaskSize = 1024;
  size_t period;

  std::vector<std::vector<FieldElementT>> precomp_domains = {
      FieldElementT::UninitializedVector(
          (((uses_bitwise_builtin) != (0)) ? (SafeDiv(bitwise__row_ratio, 4)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0)),
      FieldElementT::UninitializedVector(cpu_component_step),
      FieldElementT::UninitializedVector((cpu_component_step)*16),
      FieldElementT::UninitializedVector((cpu_component_step)*16),
      FieldElementT::UninitializedVector(diluted_units_row_ratio),
      FieldElementT::UninitializedVector(
          (((uses_ec_op_builtin) != (0)) ? (SafeDiv(ec_op_builtin_row_ratio, 256)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 512)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 256)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4096)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 128)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 128)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 16)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? (keccak__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0)),
      FieldElementT::UninitializedVector(memory_units_row_ratio),
      FieldElementT::UninitializedVector((memory_units_row_ratio)*8),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 512)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (pedersen_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_pedersen_builtin) != (0)) ? (pedersen_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 64)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 32)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 8)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 2)) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0)),
      FieldElementT::UninitializedVector(
          (((uses_range_check_builtin) != (0)) ? (range_check_builtin_row_ratio) : 0)),
      FieldElementT::UninitializedVector(range_check_units_row_ratio),
  };

  period = (((uses_bitwise_builtin) != (0)) ? (SafeDiv(bitwise__row_ratio, 4)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[0][i] = (point_powers[0][i & ((SafeDiv(bitwise__row_ratio, 4)) - (1))]) -
                                  (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[1][i] = (point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[0]);
        }
      },
      period, kTaskSize);

  period = (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[2][i] =
              (point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_bitwise_builtin) != (0)) ? (bitwise__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[3][i] =
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[1])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[2])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[3])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[4])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[5])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[6])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[7])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[8])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[9])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[10])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[11])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[12])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[13])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[14])) *
              ((point_powers[1][i & ((bitwise__row_ratio) - (1))]) - (shifts[15])) *
              (precomp_domains[2][i & (bitwise__row_ratio - 1)]);
        }
      },
      period, kTaskSize);

  period = cpu_component_step;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[4][i] =
              (point_powers[2][i & ((cpu_component_step) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (cpu_component_step)*16;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[5][i] =
              (point_powers[3][i & (((16) * (cpu_component_step)) - (1))]) - (shifts[16]);
        }
      },
      period, kTaskSize);

  period = (cpu_component_step)*16;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[6][i] =
              (point_powers[3][i & (((16) * (cpu_component_step)) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = diluted_units_row_ratio;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[7][i] =
              (point_powers[4][i & ((diluted_units_row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ec_op_builtin) != (0)) ? (SafeDiv(ec_op_builtin_row_ratio, 256)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[8][i] =
              (point_powers[5][i & ((SafeDiv(ec_op_builtin_row_ratio, 256)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[9][i] =
              (point_powers[6][i & ((ec_op_builtin_row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[10][i] =
              (point_powers[6][i & ((ec_op_builtin_row_ratio) - (1))]) - (shifts[17]);
        }
      },
      period, kTaskSize);

  period = (((uses_ec_op_builtin) != (0)) ? (ec_op_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[11][i] =
              (point_powers[6][i & ((ec_op_builtin_row_ratio) - (1))]) - (shifts[18]);
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 512)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[12][i] =
              (point_powers[7][i & ((SafeDiv(ecdsa_builtin_row_ratio, 512)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 256)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[13][i] =
              (point_powers[8][i & ((SafeDiv(ecdsa_builtin_row_ratio, 256)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[14][i] =
              (point_powers[9][i & ((SafeDiv(ecdsa_builtin_row_ratio, 2)) - (1))]) - (shifts[19]);
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[15][i] =
              (point_powers[9][i & ((SafeDiv(ecdsa_builtin_row_ratio, 2)) - (1))]) - (shifts[20]);
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (SafeDiv(ecdsa_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[16][i] =
              (point_powers[9][i & ((SafeDiv(ecdsa_builtin_row_ratio, 2)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[17][i] =
              (point_powers[10][i & ((ecdsa_builtin_row_ratio) - (1))]) - (shifts[19]);
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[18][i] =
              (point_powers[10][i & ((ecdsa_builtin_row_ratio) - (1))]) - (shifts[20]);
        }
      },
      period, kTaskSize);

  period = (((uses_ecdsa_builtin) != (0)) ? (ecdsa_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[19][i] =
              (point_powers[10][i & ((ecdsa_builtin_row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4096)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[20][i] =
              (point_powers[11][i & ((SafeDiv(keccak__row_ratio, 4096)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 128)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[21][i] =
              (point_powers[12][i & ((SafeDiv(keccak__row_ratio, 128)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 128)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[22][i] =
              ((point_powers[12][i & ((SafeDiv(keccak__row_ratio, 128)) - (1))]) - (shifts[21])) *
              (precomp_domains[21][i & (SafeDiv(keccak__row_ratio, 128) - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 16)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[23][i] =
              (point_powers[13][i & ((SafeDiv(keccak__row_ratio, 16)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[24][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) -
               (FieldElementT::One())) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[22])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[23])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[24])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[25])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[26])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[27])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[28]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[25][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[29])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[30])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[31])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[32])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[33])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[34])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[35])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[36])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[37])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[38])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[39])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[40])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[41])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[42])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[43])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[44])) *
              (precomp_domains[24][i & (SafeDiv(keccak__row_ratio, 4) - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[26][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[45])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[46])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[47])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[48])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[49])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[50])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[51])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[52])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[53])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[54])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[55])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[56])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[57])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[58])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[59])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[60])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[61])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[62])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[63])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[64])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[65])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[66])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[67])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[68])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[69])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[70])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[71])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[72])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[73])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[74])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[75])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[76])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[77])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[78])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[79])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[80])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[81])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[82])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[83])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[84])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[85])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[86])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[87])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[88])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[89])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[90])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[91])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[92])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[93])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[94])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[95])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[96])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[97])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[98])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[99])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[100])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[101])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[102])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[103])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[104])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[105])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[106])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[107])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[108])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[109])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[110])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[111])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[112])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[113])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[114])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[115])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[116])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[117])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[118])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[119])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[120])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[121])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[122])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[123])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[124])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[125])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[126])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[127])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[128])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[129])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[130])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[131])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[132])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[133])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[134])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[135])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[136])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[137])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[138])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[139])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[140])) *
              (precomp_domains[25][i & (SafeDiv(keccak__row_ratio, 4) - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (SafeDiv(keccak__row_ratio, 4)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[27][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[21])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[141])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[142])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[143])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[144])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[145])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[146])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[147])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[148])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[149])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[150])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[151])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[152])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[153])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[154])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[155])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[156])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[157])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[158])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[159])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[160])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[161])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[162])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[163])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[164])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[165])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[166])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[167])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[168])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[169])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[170])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[171])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[172])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[173])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[174])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[175])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[176])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[177])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[178])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[179])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[180])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[181])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[182])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[183])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[184])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[185])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[186])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[187])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[188])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[189])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[190])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[191])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[192])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[193])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[194])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[195])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[196])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[197])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[198])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[199])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[200])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[201])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[202])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[203])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[204])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[205])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[206])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[207])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[208])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[209])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[210])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[211])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[212])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[213])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[214])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[215])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[216])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[217])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[218])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[219])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[220])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[221])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[222])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[223])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[224])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[225])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[226])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[227])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[228])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[229])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[230])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[231])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[232])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[233])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[234])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[235])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[236])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[237])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[238])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[239])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[240])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[241])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[242])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[243])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[244])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[245])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[246])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[247])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[248])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[249])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[250])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[251])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[252])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[253])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[254])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[255])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[256])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[257])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[258])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[259])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[260])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[261])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[262])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[263])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[264])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[265])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[266])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[267])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[268])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[269])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[270])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[271])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[272])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[273])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[274])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[275])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[276])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[277])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[278])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[279])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[280])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[281])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[282])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[283])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[284])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[285])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[286])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[287])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[288])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[289])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[290])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[291])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[292])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[293])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[294])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[295])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[296])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[297])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[298])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[299])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[300])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[301])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[302])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[303])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[304])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[305])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[306])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[307])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[308])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[309])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[310])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[311])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[312])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[313])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[314])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[315])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[316])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[317])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[318])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[319])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[320])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[321])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[322])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[323])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[324])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[325])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[326])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[327])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[328])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[329])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[330])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[331])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[332])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[333])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[334])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[335])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[336])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[337])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[338])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[339])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[340])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[341])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[342])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[343])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[344])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[345])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[346])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[347])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[348])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[349])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[350])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[351])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[352])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[353])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[354])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[355])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[356])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[357])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[358])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[359])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[360])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[361])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[362])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[363])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[364])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[365])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[366])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[367])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[368])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[369])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[370])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[371])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[372])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[373])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[374])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[375])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[376])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[377])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[378])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[379])) *
              (precomp_domains[26][i & (SafeDiv(keccak__row_ratio, 4) - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? (keccak__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[28][i] =
              (point_powers[15][i & ((keccak__row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[29][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[30][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[380])) *
              (precomp_domains[29][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[31][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[381])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[382])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[383])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[384])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[385])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[386])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[387])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[388])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[389])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[390])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[391])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[392])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[393])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[394])) *
              (precomp_domains[30][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[32][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[395])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[396])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[397])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[398])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[399])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[400])) *
              (precomp_domains[30][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[33][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[401])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[402])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[403])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[404])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[405])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[406])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[407])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[408])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[409])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[410])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[411])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[412])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[413])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[414])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[415])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[416])) *
              (precomp_domains[32][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[34][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[417])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[418])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[419])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[420])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[421])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[422])) *
              (precomp_domains[33][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[35][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[423])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[424])) *
              (precomp_domains[34][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[36][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[425])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[22])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[426])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[23])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[427])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[24])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[428])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[25])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[429])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[26])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[430])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[27])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[431])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[28])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[432])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[29])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[433])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[30])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[434])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[31])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[435])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[32])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[436])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[33]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[37][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[437])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[438])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[439])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[440])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[441])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[442])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[443])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[444])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[445])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[446])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[447])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[448])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[449])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[450])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[451])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[452])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[453])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[454])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[455])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[456])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[457])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[458])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[459])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[460])) *
              (precomp_domains[36][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[38][i] = (precomp_domains[30][i & ((keccak__row_ratio)*16 - 1)]) *
                                   (precomp_domains[37][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[39][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[461])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[462])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[463])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[464])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[465])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[466])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[467])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[468])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[469])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[470])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[471])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[472])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[473])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[474])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[475])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[476])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[477])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[478])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[479])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[480])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[481])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[482])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[483])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[484])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[485])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[486])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[487])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[488])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[489])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[490])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[491])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[492])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[493])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[494])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[495])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[496])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[497])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[498])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[499])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[500])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[501])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[502])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[503])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[504])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[505])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[506])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[507])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[508])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[509])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[510])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[511])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[512])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[513])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[514])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[515])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[516])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[517])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[518])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[519])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[520])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[521])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[522])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[523])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[524])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[525])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[526])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[527])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[528])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[529])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[530])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[531])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[532])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[533])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[534])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[535])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[536])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[537])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[538])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[539])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[540])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[541])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[542])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[543])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[544])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[545])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[546])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[547])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[548])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[549])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[550])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[551])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[552])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[553])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[554])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[555])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[556])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[557])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[558])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[559])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[560])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[561])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[562])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[563])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[564])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[565])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[566])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[567])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[568])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[569])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[570])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[571])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[572])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[573])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[574])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[575])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[576])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[577])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[578])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[579])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[580])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[581])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[582])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[583])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[584])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[585])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[586])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[587])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[588])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[589])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[590])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[591])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[592])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[593])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[594])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[595])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[596])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[597])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[598])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[599])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[600])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[601])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[602])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[603])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[604])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[605])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[606])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[607])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[608])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[609])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[610])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[611])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[612])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[613])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[614])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[615])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[616])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[617])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[618])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[619])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[620])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[621])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[622])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[623])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[624])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[625])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[626])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[627])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[628])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[629])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[630])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[631])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[632])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[633])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[634])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[635])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[636])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[637])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[638])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[639])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[640])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[641])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[642])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[643])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[644])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[645])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[646])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[647])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[648])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[649])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[650])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[651])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[652])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[653])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[654])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[655])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[656])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[657])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[658])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[659])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[660])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[661])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[662])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[663])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[664])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[665])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[666])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[667])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[668])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[669])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[670])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[671])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[672])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[673])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[674])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[675])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[676])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[677])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[678])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[679])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[680])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[681])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[682])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[683])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[684])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[685])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[686])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[687])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[688])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[689])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[690])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[691])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[692])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[693])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[694])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[695])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[696])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[697])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[698])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[699])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[700])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[701])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[702])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[703])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[704])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[705])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[706])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[707])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[708])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[709])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[710])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[711])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[712])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[713])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[714])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[715])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[716])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[717])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[718])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[719])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[720])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[721])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[722])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[723])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[724])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[725])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[726])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[727])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[728])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[729])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[730])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[731])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[732])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[733])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[734])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[735])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[736])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[737])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[738])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[739])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[740])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[741])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[742])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[743])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[744])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[745])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[746])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[747])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[748])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[749])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[750])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[751])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[752])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[753])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[754])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[755])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[756])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[757])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[758])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[759])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[760])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[761])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[762])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[763])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[764])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[765])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[766])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[767])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[768])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[769])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[770])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[771])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[772])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[773])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[774])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[775])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[776])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[777])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[778])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[779])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[780])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[781])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[782])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[783])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[784])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[785])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[786])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[787])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[788])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[789])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[790])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[791])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[792])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[793])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[794])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[795])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[796])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[797])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[798])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[799])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[800])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[801])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[802])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[803])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[804])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[805])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[806])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[807])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[808])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[809])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[810])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[811])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[812])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[813])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[814])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[815])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[816])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[817])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[818])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[819])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[820])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[821])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[822])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[823])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[824])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[825])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[826])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[827])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[828])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[829])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[830])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[831])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[832])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[833])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[834])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[835])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[836])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[837])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[838])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[839])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[840])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[841])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[842])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[843])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[844])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[845])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[846])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[847])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[848])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[849])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[850])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[851])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[852])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[853])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[854])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[855])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[856])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[857])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[858])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[859])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[860])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[861])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[862])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[863])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[864])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[865])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[866])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[867])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[868])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[869])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[870])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[871])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[872])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[873])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[874])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[875])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[876])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[877])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[878])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[879])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[880])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[881])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[882])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[883])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[884])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[885])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[886])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[887])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[888])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[889])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[890])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[891])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[892])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[893])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[894])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[895])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[896])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[897])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[898])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[899])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[900])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[901])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[902])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[903])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[904])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[905])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[906])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[907])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[908])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[909])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[910])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[911])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[912])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[913])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[914])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[915])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[916])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[917])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[918])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[919])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[920])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[921])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[922])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[923])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[924])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[925])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[926])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[927])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[928])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[929])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[930])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[931])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[932])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[933])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[934])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[935])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[936])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[937])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[938])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[939])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[940])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[941])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[942])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[943])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[944])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[945])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[946])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[947])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[948])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[949])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[950])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[951])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[952])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[953])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[954])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[955])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[956])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[957])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[958])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[959])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[960])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[961])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[962])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[963])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[964])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[965])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[966])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[967])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[968])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[969])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[970])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[971])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[972])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[973])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[974])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[975])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[976])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[977])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[978])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[979])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[980])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[981])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[982])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[983])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[984])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[985])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[986])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[987])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[988])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[989])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[990])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[991])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[992])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[993])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[994])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[995])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[996])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[997])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[998])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[999])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1000])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1001])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1002])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1003])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1004])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1005])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1006])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1007])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1008])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1009])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1010])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1011])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1012])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1013])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1014])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1015])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1016])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1017])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1018])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1019])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1020])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1021])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1022])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1023])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1024])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1025])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1026])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1027])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1028])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1029])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1030])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1031])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1032])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1033])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1034])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1035])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1036])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1037])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1038])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1039])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1040])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1041])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1042])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1043])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1044])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1045])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1046])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1047])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1048])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1049])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1050])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1051])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1052])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1053])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1054])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1055])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1056])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1057])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1058])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1059])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1060])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1061])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1062])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1063])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1064])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1065])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1066])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1067])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1068])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1069])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1070])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1071])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1072])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1073])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1074])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1075])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1076])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1077])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1078])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1079])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1080])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1081])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1082])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1083])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1084])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1085])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1086])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1087])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1088])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1089])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1090])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1091])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1092])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1093])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1094])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1095])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1096])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1097])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1098])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1099])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1100])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1101])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1102])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1103])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1104])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1105])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1106])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1107])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1108])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1109])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1110])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1111])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1112])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1113])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1114])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1115])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1116])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1117])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1118])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1119])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1120])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1121])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1122])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1123])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1124])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1125])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1126])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1127])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1128])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1129])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1130])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1131])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1132])) *
              (precomp_domains[34][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[37][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[40][i] = (precomp_domains[29][i & ((keccak__row_ratio)*16 - 1)]) *
                                   (precomp_domains[36][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[41][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1133]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[42][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1134])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1135])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1136])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1137])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1138])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1139])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1140])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1141])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1142])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1143])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1144])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1145])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1146])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1147])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1148])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1149])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1150])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1151])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1152])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1153])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1154])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1155])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1156])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1157])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1158])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1159])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1160])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1161])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1162])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1163])) *
              (precomp_domains[41][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[43][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1164]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[44][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1165])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1166])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1167])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1168])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1169])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1170])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1171])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1172])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1173])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1174])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1175])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1176])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1177])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1178])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1179])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1180])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1181])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1182])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1183])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1184])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1185])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1186])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1187])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1188])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1189])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1190])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1191])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1192])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1193])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1194])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1195])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1196])) *
              (precomp_domains[42][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[43][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[45][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1197])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1198])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1199])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1200])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1201])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1202]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[46][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1203])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1204])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1205])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1206])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1207])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1208])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1209])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1210])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1211])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1212])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1213])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1214])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1215])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1216])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1217])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1218])) *
              (precomp_domains[45][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[47][i] =
              ((point_powers[12][i & ((SafeDiv(keccak__row_ratio, 128)) - (1))]) - (shifts[1138])) *
              ((point_powers[12][i & ((SafeDiv(keccak__row_ratio, 128)) - (1))]) - (shifts[1139])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1219])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1220])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1221])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1222])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1223])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1224])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1225])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1226])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1227])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1228])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1229])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1230])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1231])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1232])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1233])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1234])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1235])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1236])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1237])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1238])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1239])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1240])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1241])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1242])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1243])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1244])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1245])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1246])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1247])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1248])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1249])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1250])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1251])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1252])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1253])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1254])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1255])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1256])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1257])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1258])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1259])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1260])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1261])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1262])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1263])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1264])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1265])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1266])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1267])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1268])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1269])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1270])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1271])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1272])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1273])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1274])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1275])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1276])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1277])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1278])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1279])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1280])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1281])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1282])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1283])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1284])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1285])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1286])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1287])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1288])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1289])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1290])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1291])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1292])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1293])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1294])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1295])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1296])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1297])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1298])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1299])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1300])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1301])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1302])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1303])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1304])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1305])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1306])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1307])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1308])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1309])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1310])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1311])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1312])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1313])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1314])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1315])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1316])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1317])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1318])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1319])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1320])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1321])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1322])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1323])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1324])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1325])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1326])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1327])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1328])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1329])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1330])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1331])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1332])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1333])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1334])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1335])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1336])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1337])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1338])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1339])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1340])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1341])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1342])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1343])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1344])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1345])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1346])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1347])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1348])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1349])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1350])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1351])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1352])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1353])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1354])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1355])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1356])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1357])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1358])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1359])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1360])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1361])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1362])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1363])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1364])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1365])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1366])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1367])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1368])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1369])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1370])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1371])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1372])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1133])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1141])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1143])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1145])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1147])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1149])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1151])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1153])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1155])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1157])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1159])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1161])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1163])) *
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[1373])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1374])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1375])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1376])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1377])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1378])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1379])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1380])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1381])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1382])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1383])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1384])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1385])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1386])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1387])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1388])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1389])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1390])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1391])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1392])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1393])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1394])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1395])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1396])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1397])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1398])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1399])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1400])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1401])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1402])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1403])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1404])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1405])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1406])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1407])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1408])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1409])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1410])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1411])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1412])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1413])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1414])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1415])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1416])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1417])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1418])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1419])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1420])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1421])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1422])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1423])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1424])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1425])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1426])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1427])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1428])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1429])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1430])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1431])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1432])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1433])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1434])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1435])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1436])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1437])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1438])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1439])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1440])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1441])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1442])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1443])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1444])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1445])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1446])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1447])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1448])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1449])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1450])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1451])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1452])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1453])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1454])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1455])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1456])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1457])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1458])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1459])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1460])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1461])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1462])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1463])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1464])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1465])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1466])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1467])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1468])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1469])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1470])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1471])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1472])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1473])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1474])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1475])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1476])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1477])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1478])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1479])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1480])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1481])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1482])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1483])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1484])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1485])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1486])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1487])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1488])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1489])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1490])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1491])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1492])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1493])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1494])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1495])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1496])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1497])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1498])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1499])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1500])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1501])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1502])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1503])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1504])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1505])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1506])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1507])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1508])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1509])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1510])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1511])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1512])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1513])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1514])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1515])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1516])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1517])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1518])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1519])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1520])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1521])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1522])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1523])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1524])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1525])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1526])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1527])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1528])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1529])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1530])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1531])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1532])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1533])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1534])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1535])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1536])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1537])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1538])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1539])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1540])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1541])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1542])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1543])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1544])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1545])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1546])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1547])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1548])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1549])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1550])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1551])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1552])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1553])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1554])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1555])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1556])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1557])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1558])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1559])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1560])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1561])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1562])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1563])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1564])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1565])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1566])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1567])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1568])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1569])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1570])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1571])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1572])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1573])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1574])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1575])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1576])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1577])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1578])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1579])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1580])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1581])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1582])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1583])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1584])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1585])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1586])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1587])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1588])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1589])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1590])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1591])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1592])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1593])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1594])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1595])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1596])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1597])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1598])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1599])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1600])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1601])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1602])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1603])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1604])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1605])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1606])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1607])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1608])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1609])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1610])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1611])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1612])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1613])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1614])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1615])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1616])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1617])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1618])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1619])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1620])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1621])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1622])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1623])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1624])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1625])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1626])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1627])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1628])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1629])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1630])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1631])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1632])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1633])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1634])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1635])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1636])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1637])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1638])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1639])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1640])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1641])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1642])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1643])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1644])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1645])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1646])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1647])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1648])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1649])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1650])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1651])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1652])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1653])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1654])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1655])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1656])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1657])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1658])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1659])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1660])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1661])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1662])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1663])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1664])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1665])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1666])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1667])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1668])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1669])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1670])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1671])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1672])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1673])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1674])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1675])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1676])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1677])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1678])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1679])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1680])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1681])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1682])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1683])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1684])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1685])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1686])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1687])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1688])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1689])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1690])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1691])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1692])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1693])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1694])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1695])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1696])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1697])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1698])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1699])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1700])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1701])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1702])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1703])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1704])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1705])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1706])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1707])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1708])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1709])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1710])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1711])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1712])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1713])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1714])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1715])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1716])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1717])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1718])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1719])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1720])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1721])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1722])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1723])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1724])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1725])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1726])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1727])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1728])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1729])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1730])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1731])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1732])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1733])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1734])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1735])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1736])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1737])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1738])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1739])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1740])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1741])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1742])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1743])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1744])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1745])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1746])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1747])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1748])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1749])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1750])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1751])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1752])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1753])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1754])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1755])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1756])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1757])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1758])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1759])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1760])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1761])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1762])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1763])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1764])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1765])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1766])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1767])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1768])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1769])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1770])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1771])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1772])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1773])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1774])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1775])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1776])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1777])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1778])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1779])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1780])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1781])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1782])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1783])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1784])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1785])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1786])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1787])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1788])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1789])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1790])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1791])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1792])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1793])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1794])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1795])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1796])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1797])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1798])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1799])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1800])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1801])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1802])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1803])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1804])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1805])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1806])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1807])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1808])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1809])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1810])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1811])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1812])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1813])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1814])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1815])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1816])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1817])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1818])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1819])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1820])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1821])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1822])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1823])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1824])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1825])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1826])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1827])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1828])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1829])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1830])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1831])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1832])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1833])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1834])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1835])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1836])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1837])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1838])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1839])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1840])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1841])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1842])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1843])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1844])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1845])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1846])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1847])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1848])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1849])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1850])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1851])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1852])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1853])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1854])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1855])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1856])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1857])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1858])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1859])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1860])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1861])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1862])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1863])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1864])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1865])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1866])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1867])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1868])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1869])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1870])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1871])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1872])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1873])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1874])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1875])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1876])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1877])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1878])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1879])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1880])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1881])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1882])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1883])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1884])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1885])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1886])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1887])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1888])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1889])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1890])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1891])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1892])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1893])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1894])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1895])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1896])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1897])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1898])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1899])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1900])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1901])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1902])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1903])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1904])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1905])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1906])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1907])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1908])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1909])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1910])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1911])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1912])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1913])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1914])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1915])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1916])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1917])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1918])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1919])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1920])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1921])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1922])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1923])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1924])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1925])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1926])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1927])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1928])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1929])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1930])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1931])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1932])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1933])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1934])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1935])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1936])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1937])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1938])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1939])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1940])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1941])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1942])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1943])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1944])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1945])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1946])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1947])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1948])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1949])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1950])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1951])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1952])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1953])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1954])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1955])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1956])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1957])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1958])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1959])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1960])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1961])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1962])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1963])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1964])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1965])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1966])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1967])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1968])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1969])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1970])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1971])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1972])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1973])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1974])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1975])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1976])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1977])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1978])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1979])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1980])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1981])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1982])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1983])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1984])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1985])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1986])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1987])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1988])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1989])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1990])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1991])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1992])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1993])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1994])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1995])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1996])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1997])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1998])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1999])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2000])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2001])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2002])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2003])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2004])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2005])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2006])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2007])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2008])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2009])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2010])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2011])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2012])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2013])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2014])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2015])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2016])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2017])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2018])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2019])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2020])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2021])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2022])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2023])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2024])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2025])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2026])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2027])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2028])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2029])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2030])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2031])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2032])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2033])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2034])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2035])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2036])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2037])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2038])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2039])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2040])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2041])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2042])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2043])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2044])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2045])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2046])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2047])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2048])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2049])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2050])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2051])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2052])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2053])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2054])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2055])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2056])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2057])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2058])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2059])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2060])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2061])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2062])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2063])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2064])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2065])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2066])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2067])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2068])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2069])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2070])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2071])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2072])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2073])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2074])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2075])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2076])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2077])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2078])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2079])) *
              (precomp_domains[44][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[46][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[48][i] =
              ((point_powers[14][i & ((SafeDiv(keccak__row_ratio, 4)) - (1))]) - (shifts[2080])) *
              (precomp_domains[42][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[49][i] = (precomp_domains[41][i & ((keccak__row_ratio)*16 - 1)]) *
                                   (precomp_domains[43][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[50][i] = (precomp_domains[46][i & ((keccak__row_ratio)*16 - 1)]) *
                                   (precomp_domains[49][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[51][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1139])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2081])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2082])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2083])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2084])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2085])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2086])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2087]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[52][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2088])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2089])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2090])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2091])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2092])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2093])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2094])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2095])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2096])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2097])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2098])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2099])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2100])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2101])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2102])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2103])) *
              (precomp_domains[50][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[51][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[53][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1345])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2104])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2105])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2106])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2107])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2108])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2109])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2110]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[54][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2111])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2112])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2113])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2114])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2115])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2116])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2117])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2118])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2119])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2120])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2121])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2122])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2123])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2124])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2125])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2126])) *
              (precomp_domains[52][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[53][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[55][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1137])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2127])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2128])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2129])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2130])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2131])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2132])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2133])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1317])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2134])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2135])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2136])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2137])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2138])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2139])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2140])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1138])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2141])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2142])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2143])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2144])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2145])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2146])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2147]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[56][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2148])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2149])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2150])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2151])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2152])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2153])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2154])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2155])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2156])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2157])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2158])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2159])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2160])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2161])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2162])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2163])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2164])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2165])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2166])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2167])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2168])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2169])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2170])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2171])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2172])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2173])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2174])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2175])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2176])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2177])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2178])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2179])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2180])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2181])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2182])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2183])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2184])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2185])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2186])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2187])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2188])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2189])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2190])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2191])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2192])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2193])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2194])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2195])) *
              (precomp_domains[54][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[55][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[57][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1136])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2196])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2197])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2198])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2199])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2200])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2201])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2202])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1289])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2203])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2204])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2205])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2206])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2207])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2208])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2209]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[58][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2210])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2211])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2212])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2213])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2214])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2215])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2216])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2217])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2218])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2219])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2220])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2221])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2222])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2223])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2224])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2225])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2226])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2227])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2228])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2229])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2230])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2231])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2232])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2233])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2234])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2235])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2236])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2237])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2238])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2239])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2240])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2241])) *
              (precomp_domains[56][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[57][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[59][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1261])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2242])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2243])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2244])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2245])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2246])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2247])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2248]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[60][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1135])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2249])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2250])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2251])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2252])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2253])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2254])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2255])) *
              (precomp_domains[59][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[61][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2256])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2257])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2258])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2259])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2260])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2261])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2262])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2263])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2264])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2265])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2266])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2267])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2268])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2269])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2270])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2271])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2272])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2273])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2274])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2275])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2276])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2277])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2278])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2279])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2280])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2281])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2282])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2283])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2284])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2285])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2286])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2287])) *
              (precomp_domains[58][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[60][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[62][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2080])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2288])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2289])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2290])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2291])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2292])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2293])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2294])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2295])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2296])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2297])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2298])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2299])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2300])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2301])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2302])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1134])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2303])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2304])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2305])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2306])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2307])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2308])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2309])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[1233])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2310])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2311])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2312])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2313])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2314])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2315])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2316]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[63][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2317])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2318])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2319])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2320])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2321])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2322])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2323])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2324])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2325])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2326])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2327])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2328])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2329])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2330])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2331])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2332])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2333])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2334])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2335])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2336])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2337])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2338])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2339])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2340])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2341])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2342])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2343])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2344])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2345])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2346])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2347])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2348])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2349])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2350])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2351])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2352])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2353])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2354])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2355])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2356])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2357])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2358])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2359])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2360])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2361])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2362])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2363])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2364])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2365])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2366])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2367])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2368])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2369])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2370])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2371])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2372])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2373])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2374])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2375])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2376])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2377])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2378])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2379])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2380])) *
              (precomp_domains[61][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[62][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[64][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2381])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2382])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2383])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2384])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2385])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2386])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2387])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2388]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[65][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2389])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2390])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2391])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2392])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2393])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2394])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2395])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2396])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2397])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2398])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2399])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2400])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2401])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2402])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2403])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2404])) *
              (precomp_domains[63][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[64][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[66][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2405])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2406])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2407])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2408])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2409])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2410])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2411])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2412])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2413])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2414])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2415])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2416])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2417])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2418])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2419])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2420])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2421])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2422])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2423])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2424])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2425])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2426])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2427])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2428]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[67][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2429])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2430])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2431])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2432])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2433])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2434])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2435])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2436])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2437])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2438])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2439])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2440])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2441])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2442])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2443])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2444])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2445])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2446])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2447])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2448])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2449])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2450])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2451])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2452])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2453])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2454])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2455])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2456])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2457])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2458])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2459])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2460])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2461])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2462])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2463])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2464])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2465])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2466])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2467])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2468])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2469])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2470])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2471])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2472])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2473])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2474])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2475])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2476])) *
              (precomp_domains[65][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[66][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[68][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2477])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2478])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2479])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2480])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2481])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2482])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2483])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2484]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[69][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2485])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2486])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2487])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2488])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2489])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2490])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2491])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2492])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2493])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2494])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2495])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2496])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2497])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2498])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2499])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2500])) *
              (precomp_domains[67][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[68][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[70][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[356])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2501])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2502])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2503])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2504])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2505])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2506])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2507]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[71][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2508])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2509])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2510])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2511])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2512])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2513])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2514])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2515])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2516])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2517])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2518])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2519])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2520])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2521])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2522])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2523])) *
              (precomp_domains[69][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[70][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[72][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2524])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2525])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2526])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2527])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2528])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2529])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2530])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2531]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[73][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2532])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2533])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2534])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2535])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2536])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2537])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2538])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2539])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2540])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2541])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2542])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2543])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2544])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2545])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2546])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2547])) *
              (precomp_domains[71][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[72][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[74][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2548])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2549])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2550])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2551])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2552])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2553])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2554])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2555])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[332])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2556])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2557])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2558])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2559])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2560])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2561])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2562]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[75][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2563])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2564])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2565])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2566])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2567])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2568])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2569])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2570])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[117])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2571])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2572])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2573])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2574])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2575])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2576])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2577])) *
              (precomp_domains[74][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[76][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2578])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2579])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2580])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2581])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2582])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2583])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2584])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2585])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2586])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2587])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2588])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2589])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2590])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2591])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2592])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2593])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2594])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2595])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2596])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2597])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2598])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2599])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2600])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2601])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2602])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2603])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2604])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2605])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2606])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2607])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2608])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2609])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2610])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2611])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2612])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2613])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2614])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2615])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2616])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2617])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2618])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2619])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2620])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2621])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2622])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2623])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2624])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2625])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2626])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2627])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2628])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2629])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2630])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2631])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2632])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2633])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2634])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2635])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2636])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2637])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2638])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2639])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2640])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2641])) *
              (precomp_domains[73][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[75][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[77][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2642])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2643])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2644])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2645])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2646])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2647])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2648])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2649])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2650])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2651])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2652])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2653])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2654])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2655])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2656])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2657])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2658])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2659])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2660])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2661])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2662])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2663])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2664])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2665])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2666])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2667])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2668])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2669])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2670])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2671])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2672])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2673])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2674])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2675])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2676])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2677])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2678])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2679])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2680])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2681])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2682])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2683])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2684])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2685])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2686])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2687])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2688])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2689])) *
              (precomp_domains[76][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[78][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2690])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2691])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2692])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2693])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2694])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2695])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2696])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2697])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2698])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2699])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2700])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2701])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2702])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2703])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2704])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2705])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2706])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2707])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2708])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2709])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2710])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2711])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2712])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2713])) *
              (precomp_domains[77][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[79][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[37]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[80][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2714])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2715])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2716])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2717])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2718])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2719])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2720])) *
              (precomp_domains[79][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[81][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2721])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2722])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2723])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2724])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2725])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2726])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2727])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2728])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2729])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2730])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2731])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2732])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2733])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2734])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2735])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2736])) *
              (precomp_domains[33][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[80][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[82][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[21])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2737])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2738])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2739])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2740])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2741])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2742])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2743]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[83][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2744]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[84][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2745])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2746])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2747])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2748])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2749])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2750])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2751])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[164])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2752])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2753])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2754])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2755])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2756])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2757])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2758])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2759])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2760])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2761])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2762])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2763])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2764])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2765])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2766])) *
              (precomp_domains[82][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[83][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[85][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2767])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2768])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2769])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2770])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2771])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2772])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2773])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2774])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2775])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2776])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2777])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2778])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2779])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2780])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2781])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2782])) *
              (precomp_domains[81][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[86][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2783])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2784])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2785])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2786])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2787])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2788])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2789])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2790])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2791])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2792])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2793])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2794])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2795])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2796])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2797])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2798])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2799])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2800])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2801])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2802])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2803])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2804])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2805])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2806])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2807])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2808])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2809])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2810])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2811])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2812])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2813])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2814])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2815])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2816])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2817])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2818])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2819])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2820])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2821])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2822])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2823])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2824])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2825])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2826])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2827])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2828])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2829])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2830])) *
              (precomp_domains[84][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[85][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[87][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2831]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[88][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2832])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2833])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2834])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2835])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2836])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2837])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2838])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2839])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2840])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2841])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2842])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2843])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2844])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2845])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2846])) *
              (precomp_domains[87][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[89][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2847])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2848])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2849])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2850])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2851])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2852])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2853])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2854])) *
              (precomp_domains[88][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[90][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2855])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2856])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2857])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2858])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2859])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2860])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2861])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2862])) *
              (precomp_domains[89][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[91][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2863])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2864])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2865])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2866])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2867])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2868])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2869])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2870])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2871])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2872])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2873])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2874])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2875])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2876])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2877])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2878])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2879])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2880])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2881])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2882])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2883])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2884])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2885])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2886])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2887])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2888])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2889])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2890])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2891])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2892])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2893])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2894])) *
              (precomp_domains[86][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[92][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2895])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2896])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2897])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2898])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2899])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2900])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2901])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2902])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2903])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2904])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2905])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2906])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2907])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2908])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2909])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2910])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2911])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2912])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2913])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2914])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2915])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2916])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2917])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2918])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2919])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2920])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2921])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2922])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2923])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2924])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2925])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2926])) *
              (precomp_domains[90][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[91][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[93][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[45])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2927])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2928])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2929])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2930])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2931])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2932])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2933])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2934])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2935])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2936])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2937])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2938])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2939])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2940])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2941])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[188])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2942])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2943])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2944])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2945])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2946])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2947])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2948])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2949])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2950])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2951])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2952])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2953])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2954])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2955])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2956]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[94][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[212])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2957])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2958])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2959])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2960])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2961])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2962])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2963])) *
              (precomp_domains[93][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[95][i] =
              (point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2964]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[96][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2965])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2966])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2967])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2968])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2969])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2970])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2971])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2972])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2973])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2974])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2975])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2976])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2977])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2978])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2979])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2980])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2981])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2982])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2983])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2984])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2985])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2986])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2987])) *
              (precomp_domains[94][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[95][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[97][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2988])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2989])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2990])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2991])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2992])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2993])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2994])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2995])) *
              (precomp_domains[96][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[98][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2996])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2997])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2998])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[2999])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3000])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3001])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3002])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3003])) *
              (precomp_domains[97][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[99][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3004])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3005])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3006])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3007])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3008])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3009])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3010])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3011])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3012])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3013])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3014])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3015])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3016])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3017])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3018])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3019])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3020])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3021])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3022])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3023])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3024])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3025])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3026])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3027])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3028])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3029])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3030])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3031])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3032])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3033])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3034])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3035])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3036])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3037])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3038])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3039])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3040])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3041])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3042])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3043])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3044])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3045])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3046])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3047])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3048])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3049])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3050])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3051])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3052])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3053])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3054])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3055])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3056])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3057])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3058])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3059])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3060])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3061])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3062])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3063])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3064])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3065])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3066])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3067])) *
              (precomp_domains[92][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[100][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3068])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3069])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3070])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3071])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3072])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3073])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3074])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3075])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3076])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3077])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3078])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3079])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3080])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3081])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3082])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3083])) *
              (precomp_domains[99][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[101][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3084])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3085])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3086])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3087])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3088])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3089])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3090])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3091])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3092])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3093])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3094])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3095])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3096])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3097])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3098])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3099])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3100])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3101])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3102])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3103])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3104])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3105])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3106])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3107])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3108])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3109])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3110])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3111])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3112])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3113])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3114])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3115])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3116])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3117])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3118])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3119])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3120])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3121])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3122])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3123])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3124])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3125])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3126])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3127])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3128])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3129])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3130])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3131])) *
              (precomp_domains[100][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[102][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3132])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3133])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3134])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3135])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3136])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3137])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3138])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3139])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3140])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3141])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3142])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3143])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3144])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3145])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3146])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3147])) *
              (precomp_domains[101][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[103][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3148])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3149])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3150])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3151])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3152])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3153])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3154])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3155])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3156])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3157])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3158])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3159])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3160])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3161])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3162])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3163])) *
              (precomp_domains[98][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[102][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[104][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[69])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3164])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3165])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3166])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3167])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3168])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3169])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3170]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[105][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3171])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3172])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3173])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3174])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3175])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3176])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3177])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3178])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3179])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3180])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3181])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3182])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3183])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3184])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3185])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3186])) *
              (precomp_domains[103][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[104][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[106][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3187])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3188])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3189])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3190])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3191])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3192])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3193])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3194])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[236])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3195])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3196])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3197])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3198])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3199])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3200])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3201]));
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[107][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3202])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3203])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3204])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3205])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3206])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3207])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3208])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3209])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[260])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3210])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3211])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3212])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3213])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3214])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3215])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3216])) *
              (precomp_domains[106][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[108][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3217])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3218])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3219])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3220])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3221])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3222])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3223])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3224])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3225])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3226])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3227])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3228])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3229])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3230])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3231])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3232])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3233])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3234])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3235])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3236])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3237])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3238])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3239])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3240])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3241])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3242])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3243])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3244])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3245])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3246])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3247])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3248])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3249])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3250])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3251])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3252])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3253])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3254])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3255])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3256])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3257])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3258])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3259])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3260])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3261])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3262])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3263])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3264])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3265])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3266])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3267])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3268])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3269])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3270])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3271])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3272])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3273])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3274])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3275])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3276])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3277])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3278])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3279])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3280])) *
              (precomp_domains[105][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[107][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[109][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3281])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3282])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3283])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3284])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3285])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3286])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3287])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3288])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3289])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3290])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3291])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3292])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3293])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3294])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3295])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3296])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3297])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3298])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3299])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3300])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3301])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3302])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3303])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3304])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3305])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3306])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3307])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3308])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3309])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3310])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3311])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3312])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3313])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3314])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3315])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3316])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3317])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3318])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3319])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3320])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3321])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3322])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3323])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3324])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3325])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3326])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3327])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3328])) *
              (precomp_domains[108][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[110][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3329])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3330])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3331])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3332])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3333])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3334])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3335])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3336])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3337])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3338])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3339])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3340])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3341])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3342])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3343])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3344])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3345])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3346])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3347])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3348])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3349])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3350])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3351])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3352])) *
              (precomp_domains[109][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[111][i] = (precomp_domains[32][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[80][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[112][i] = (precomp_domains[84][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[111][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[113][i] = (precomp_domains[89][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[112][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[114][i] = (precomp_domains[45][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[49][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[51][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[115][i] = (precomp_domains[53][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[55][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[57][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[114][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[116][i] = (precomp_domains[59][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[115][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[117][i] = (precomp_domains[60][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[62][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[64][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[66][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[68][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[70][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[72][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[115][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[118][i] = (precomp_domains[75][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[117][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[119][i] = (precomp_domains[74][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[117][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[120][i] = (precomp_domains[82][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[85][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[121][i] = (precomp_domains[90][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[98][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[104][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[112][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[122][i] = (precomp_domains[107][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[121][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[123][i] = (precomp_domains[106][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[121][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[124][i] = (precomp_domains[97][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[102][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[125][i] = (precomp_domains[94][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[100][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[126][i] = (precomp_domains[88][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[91][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[127][i] = (precomp_domains[96][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[101][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[128][i] = (precomp_domains[93][i & ((keccak__row_ratio)*16 - 1)]) *
                                    (precomp_domains[99][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_keccak_builtin) != (0)) ? ((keccak__row_ratio)*16) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[129][i] =
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3353])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3354])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3355])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3356])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3357])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3358])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3359])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3360])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3361])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3362])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3363])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3364])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3365])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3366])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3367])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3368])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3369])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3370])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3371])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3372])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3373])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3374])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3375])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3376])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3377])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3378])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3379])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3380])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3381])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3382])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3383])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3384])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3385])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3386])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3387])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3388])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3389])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3390])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3391])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3392])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3393])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3394])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3395])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3396])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3397])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3398])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3399])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3400])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3401])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3402])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3403])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3404])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3405])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3406])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3407])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3408])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3409])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3410])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3411])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3412])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3413])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3414])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3415])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3416])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3417])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3418])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3419])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3420])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3421])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3422])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3423])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3424])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3425])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3426])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3427])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3428])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3429])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3430])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3431])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3432])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3433])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3434])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3435])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3436])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3437])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3438])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3439])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3440])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3441])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3442])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3443])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3444])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3445])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3446])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3447])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3448])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3449])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3450])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3451])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3452])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3453])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3454])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3455])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3456])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3457])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3458])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3459])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3460])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3461])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3462])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3463])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3464])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3465])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3466])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3467])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3468])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3469])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3470])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3471])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3472])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3473])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3474])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3475])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3476])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3477])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3478])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3479])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3480])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3481])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3482])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3483])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3484])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3485])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3486])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3487])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3488])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3489])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3490])) *
              ((point_powers[16][i & (((16) * (keccak__row_ratio)) - (1))]) - (shifts[3491])) *
              (precomp_domains[33][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[41][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[79][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[83][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[87][i & ((keccak__row_ratio)*16 - 1)]) *
              (precomp_domains[95][i & ((keccak__row_ratio)*16 - 1)]);
        }
      },
      period, kTaskSize);

  period = memory_units_row_ratio;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[130][i] =
              (point_powers[17][i & ((memory_units_row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (memory_units_row_ratio)*8;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[131][i] =
              (point_powers[18][i & (((8) * (memory_units_row_ratio)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 512)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[132][i] =
              (point_powers[19][i & ((SafeDiv(pedersen_builtin_row_ratio, 512)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[133][i] =
              (point_powers[20][i & ((SafeDiv(pedersen_builtin_row_ratio, 2)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[134][i] =
              (point_powers[20][i & ((SafeDiv(pedersen_builtin_row_ratio, 2)) - (1))]) -
              (shifts[3492]);
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (SafeDiv(pedersen_builtin_row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[135][i] =
              (point_powers[20][i & ((SafeDiv(pedersen_builtin_row_ratio, 2)) - (1))]) -
              (shifts[3493]);
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (pedersen_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[136][i] =
              (point_powers[21][i & ((pedersen_builtin_row_ratio) - (1))]) - (shifts[3494]);
        }
      },
      period, kTaskSize);

  period = (((uses_pedersen_builtin) != (0)) ? (pedersen_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[137][i] =
              (point_powers[21][i & ((pedersen_builtin_row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 64)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[138][i] =
              (point_powers[22][i & ((SafeDiv(poseidon__row_ratio, 64)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 32)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[139][i] =
              (point_powers[23][i & ((SafeDiv(poseidon__row_ratio, 32)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 8)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[140][i] =
              (point_powers[24][i & ((SafeDiv(poseidon__row_ratio, 8)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[141][i] =
              (point_powers[25][i & ((SafeDiv(poseidon__row_ratio, 2)) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (SafeDiv(poseidon__row_ratio, 2)) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[142][i] =
              (point_powers[25][i & ((SafeDiv(poseidon__row_ratio, 2)) - (1))]) - (shifts[3495]);
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[143][i] =
              (point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3496]);
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[144][i] =
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3497])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3498])) *
              (precomp_domains[143][i & (poseidon__row_ratio - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[145][i] =
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3499])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3500])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3495])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3501])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3502])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3503])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3504])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3505])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3506])) *
              (precomp_domains[143][i & (poseidon__row_ratio - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[146][i] =
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3507])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3508])) *
              ((point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (shifts[3509])) *
              (precomp_domains[145][i & (poseidon__row_ratio - 1)]);
        }
      },
      period, kTaskSize);

  period = (((uses_poseidon_builtin) != (0)) ? (poseidon__row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[147][i] =
              (point_powers[26][i & ((poseidon__row_ratio) - (1))]) - (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = (((uses_range_check_builtin) != (0)) ? (range_check_builtin_row_ratio) : 0);
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[148][i] =
              (point_powers[27][i & ((range_check_builtin_row_ratio) - (1))]) -
              (FieldElementT::One());
        }
      },
      period, kTaskSize);

  period = range_check_units_row_ratio;
  ASSERT_RELEASE(period < kPeriodUpperBound, "Precomp evals: large dynamic size.");
  task_manager.ParallelFor(
      period,
      [&](const TaskInfo& task_info) {
        for (size_t i = task_info.start_idx; i < task_info.end_idx; ++i) {
          precomp_domains[149][i] = (point_powers[28][i & ((range_check_units_row_ratio) - (1))]) -
                                    (FieldElementT::One());
        }
      },
      period, kTaskSize);
  return precomp_domains;
}

template <typename FieldElementT>
FractionFieldElement<FieldElementT> CpuAirDefinition<FieldElementT, 11>::ConstraintsEval(
    gsl::span<const FieldElementT> neighbors, gsl::span<const FieldElementT> periodic_columns,
    gsl::span<const FieldElementT> random_coefficients, [[maybe_unused]] const FieldElementT& point,
    gsl::span<const FieldElementT> shifts, gsl::span<const FieldElementT> precomp_domains) const {
  ASSERT_VERIFIER(shifts.size() == 3521, "shifts should contain 3521 elements.");

  // domain0 = point^(4 * trace_length / bitwise__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain0 = precomp_domains[0];
  // domain1 = point^(trace_length / bitwise__row_ratio) - gen^(3 * trace_length / 4).
  [[maybe_unused]] const FieldElementT& domain1 = precomp_domains[1];
  // domain2 = point^(trace_length / bitwise__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain2 = precomp_domains[2];
  // domain3 = (point^(trace_length / bitwise__row_ratio) - gen^(trace_length / 64)) *
  // (point^(trace_length / bitwise__row_ratio) - gen^(trace_length / 32)) * (point^(trace_length /
  // bitwise__row_ratio) - gen^(3 * trace_length / 64)) * (point^(trace_length / bitwise__row_ratio)
  // - gen^(trace_length / 16)) * (point^(trace_length / bitwise__row_ratio) - gen^(5 * trace_length
  // / 64)) * (point^(trace_length / bitwise__row_ratio) - gen^(3 * trace_length / 32)) *
  // (point^(trace_length / bitwise__row_ratio) - gen^(7 * trace_length / 64)) *
  // (point^(trace_length / bitwise__row_ratio) - gen^(trace_length / 8)) * (point^(trace_length /
  // bitwise__row_ratio) - gen^(9 * trace_length / 64)) * (point^(trace_length / bitwise__row_ratio)
  // - gen^(5 * trace_length / 32)) * (point^(trace_length / bitwise__row_ratio) - gen^(11 *
  // trace_length / 64)) * (point^(trace_length / bitwise__row_ratio) - gen^(3 * trace_length / 16))
  // * (point^(trace_length / bitwise__row_ratio) - gen^(13 * trace_length / 64)) *
  // (point^(trace_length / bitwise__row_ratio) - gen^(7 * trace_length / 32)) *
  // (point^(trace_length / bitwise__row_ratio) - gen^(15 * trace_length / 64)) * domain2.
  [[maybe_unused]] const FieldElementT& domain3 = precomp_domains[3];
  // domain4 = point^(trace_length / cpu_component_step) - 1.
  [[maybe_unused]] const FieldElementT& domain4 = precomp_domains[4];
  // domain5 = point^(trace_length / (16 * cpu_component_step)) - gen^(15 * trace_length / 16).
  [[maybe_unused]] const FieldElementT& domain5 = precomp_domains[5];
  // domain6 = point^(trace_length / (16 * cpu_component_step)) - 1.
  [[maybe_unused]] const FieldElementT& domain6 = precomp_domains[6];
  // domain7 = point^(trace_length / diluted_units_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain7 = precomp_domains[7];
  // domain8 = point^(256 * trace_length / ec_op_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain8 = precomp_domains[8];
  // domain9 = point^(trace_length / ec_op_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain9 = precomp_domains[9];
  // domain10 = point^(trace_length / ec_op_builtin_row_ratio) - gen^(255 * trace_length / 256).
  [[maybe_unused]] const FieldElementT& domain10 = precomp_domains[10];
  // domain11 = point^(trace_length / ec_op_builtin_row_ratio) - gen^(63 * trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain11 = precomp_domains[11];
  // domain12 = point^(512 * trace_length / ecdsa_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain12 = precomp_domains[12];
  // domain13 = point^(256 * trace_length / ecdsa_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain13 = precomp_domains[13];
  // domain14 = point^(2 * trace_length / ecdsa_builtin_row_ratio) - gen^(255 * trace_length / 256).
  [[maybe_unused]] const FieldElementT& domain14 = precomp_domains[14];
  // domain15 = point^(2 * trace_length / ecdsa_builtin_row_ratio) - gen^(251 * trace_length / 256).
  [[maybe_unused]] const FieldElementT& domain15 = precomp_domains[15];
  // domain16 = point^(2 * trace_length / ecdsa_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain16 = precomp_domains[16];
  // domain17 = point^(trace_length / ecdsa_builtin_row_ratio) - gen^(255 * trace_length / 256).
  [[maybe_unused]] const FieldElementT& domain17 = precomp_domains[17];
  // domain18 = point^(trace_length / ecdsa_builtin_row_ratio) - gen^(251 * trace_length / 256).
  [[maybe_unused]] const FieldElementT& domain18 = precomp_domains[18];
  // domain19 = point^(trace_length / ecdsa_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain19 = precomp_domains[19];
  // domain20 = point^(4096 * trace_length / keccak__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain20 = precomp_domains[20];
  // domain21 = point^(128 * trace_length / keccak__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain21 = precomp_domains[21];
  // domain22 = (point^(128 * trace_length / keccak__row_ratio) - gen^(trace_length / 32)) *
  // domain21.
  [[maybe_unused]] const FieldElementT& domain22 = precomp_domains[22];
  // domain23 = point^(16 * trace_length / keccak__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain23 = precomp_domains[23];
  // domain24 = (point^(4 * trace_length / keccak__row_ratio) - 1) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 1024)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 512)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 1024)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length /
  // 256)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024)).
  [[maybe_unused]] const FieldElementT& domain24 = precomp_domains[24];
  // domain25 = (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length / 1024)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(11 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(3 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(13 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(7 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 64)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(17 * trace_length / 1024)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 *
  // trace_length / 512)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 * trace_length /
  // 1024)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(23 * trace_length / 1024)) * domain24.
  [[maybe_unused]] const FieldElementT& domain25 = precomp_domains[25];
  // domain26 = (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 5 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 + 5 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 1024 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 256 + 5 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 1024 + 5 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512 + 5 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + 5 * trace_length
  // / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 + 5 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 1024 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 *
  // trace_length / 512 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(11 * trace_length / 1024 + 5 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(3 * trace_length / 256 + 5 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 + 5 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 512 + 5 * trace_length
  // / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 * trace_length / 1024 + 5 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 64 +
  // 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(17 *
  // trace_length / 1024 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(9 * trace_length / 512 + 5 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(19 * trace_length / 1024 + 5 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256 + 5 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 + 5 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 512 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 *
  // trace_length / 1024 + 5 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 512 + 5 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 5 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + 5 * trace_length /
  // 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024 + 5 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 512 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 *
  // trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 128 + 5 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(9 * trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 + 5 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + 5 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 256 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 *
  // trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(7 * trace_length / 512 + 5 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 5 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + 5 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 512 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 *
  // trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(5 * trace_length / 256 + 5 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(21 * trace_length / 1024 + 5 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512 + 5 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + 5 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 15 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 +
  // 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 256 + 15 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512 + 15 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + 15 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 +
  // 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 *
  // trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(5 * trace_length / 512 + 15 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(11 * trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 256 + 15 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 + 15 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length /
  // 512 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 *
  // trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 64 + 15 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(17 * trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(9 * trace_length / 512 + 15 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(19 * trace_length / 1024 + 15 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length /
  // 256 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 *
  // trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(11 * trace_length / 512 + 15 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(23 * trace_length / 1024 + 15 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 1024 + 5 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 512 + 5 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 5 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + 5 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length /
  // 1024 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 512 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(7 * trace_length / 1024 + 5 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 128 + 5 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(9 * trace_length / 1024 + 5 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 + 5 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + 5 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 256 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 *
  // trace_length / 1024 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(7 * trace_length / 512 + 5 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024 + 5 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 5 * trace_length / 8)) * (point^(4
  // * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + 5 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length / 512 + 5 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 * trace_length / 1024 + 5 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length /
  // 256 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 *
  // trace_length / 1024 + 5 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(11 * trace_length / 512 + 5 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(23 * trace_length / 1024 + 5 * trace_length / 8)) * domain25.
  [[maybe_unused]] const FieldElementT& domain26 = precomp_domains[26];
  // domain27 = (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 32)) * (point^(4
  // * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 + trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024 +
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 512 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 *
  // trace_length / 1024 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 128 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(9 * trace_length / 1024 + trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 512 + trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 256 + trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 +
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length /
  // 512 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 *
  // trace_length / 1024 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 64 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(17 * trace_length / 1024 + trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(9 * trace_length / 512 + trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(19 * trace_length / 1024 + trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256 + trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 +
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 512 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 *
  // trace_length / 1024 + trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length /
  // 1024 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length
  // / 512 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 1024 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 256 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(5 * trace_length / 1024 + trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(3 * trace_length / 512 + trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 + trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length / 1024 + trace_length /
  // 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 +
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 1024 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 256 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(13 * trace_length / 1024 + trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(7 * trace_length / 512 + trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(15 * trace_length / 1024 + trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 64 + trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + trace_length /
  // 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length / 512 +
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 * trace_length /
  // 1024 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 *
  // trace_length / 256 + trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(21 * trace_length / 1024 + trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(11 * trace_length / 512 + trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 3 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 + 3 * trace_length /
  // 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 3 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 +
  // 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length
  // / 1024 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 512 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(7 * trace_length / 1024 + 3 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 128 + 3 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(9 * trace_length / 1024 + 3 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 + 3 * trace_length
  // / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + 3 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 256 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 *
  // trace_length / 1024 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(7 * trace_length / 512 + 3 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024 + 3 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 3 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + 3 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 512 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 *
  // trace_length / 1024 + 3 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(5 * trace_length / 256 + 3 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(21 * trace_length / 1024 + 3 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512 + 3 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + 3 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 7 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 +
  // 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length
  // / 1024 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 256 + 7 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 1024 + 7 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512 + 7 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + 7 * trace_length
  // / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 + 7 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 1024 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 *
  // trace_length / 512 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(11 * trace_length / 1024 + 7 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(3 * trace_length / 256 + 7 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 + 7 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 512 + 7 * trace_length
  // / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 * trace_length / 1024 + 7 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 64 +
  // 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(17 *
  // trace_length / 1024 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(9 * trace_length / 512 + 7 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(19 * trace_length / 1024 + 7 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256 + 7 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 + 7 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 512 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 *
  // trace_length / 1024 + 7 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 512 + 11 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 11 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + 11 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024 + 11 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 512 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 *
  // trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 128 + 11 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(9 * trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 + 11 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + 11 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 256 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 *
  // trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(7 * trace_length / 512 + 11 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 11 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + 11 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 512 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 *
  // trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(5 * trace_length / 256 + 11 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(21 * trace_length / 1024 + 11 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512 + 11 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + 11 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 3 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 +
  // 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length
  // / 1024 + 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 256 + 3 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 1024 + 3 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512 + 3 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + 3 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 + 3 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 1024 + 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 *
  // trace_length / 512 + 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(11 * trace_length / 1024 + 3 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(3 * trace_length / 256 + 3 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 + 3 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 512 + 3 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 * trace_length / 1024 + 3 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 3
  // * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length /
  // 1024 + 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 *
  // trace_length / 512 + 3 * trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(19 * trace_length / 1024 + 3 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 256 + 3 * trace_length / 8)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 + 3 * trace_length / 8)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512 + 3 * trace_length
  // / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + 3 *
  // trace_length / 8)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 2)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + trace_length / 2)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 + trace_length / 2)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + trace_length /
  // 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + trace_length /
  // 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024 +
  // trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 512 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 *
  // trace_length / 1024 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 128 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(9 * trace_length / 1024 + trace_length / 2)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 512 + trace_length / 2)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + trace_length / 2)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 256 + trace_length /
  // 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 +
  // trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length /
  // 512 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 *
  // trace_length / 1024 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 64 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(17 * trace_length / 1024 + trace_length / 2)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(9 * trace_length / 512 + trace_length / 2)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(19 * trace_length / 1024 + trace_length / 2)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256 + trace_length /
  // 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 +
  // trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 512 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 *
  // trace_length / 1024 + trace_length / 2)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) -
  // gen^(trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 512 + 17 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 17 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 + 17 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length / 1024 + 17 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 512 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 *
  // trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 128 + 17 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(9 * trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 512 + 17 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length / 1024 + 17 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length /
  // 256 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(13 *
  // trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(7 * trace_length / 512 + 17 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 64 + 17 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(17 * trace_length / 1024 + 17 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length /
  // 512 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(19 *
  // trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(5 * trace_length / 256 + 17 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(21 * trace_length / 1024 + 17 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 512 + 17 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(23 * trace_length / 1024 + 17 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length /
  // 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 1024 + 21 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 512 +
  // 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(3 *
  // trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 256 + 21 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(5 * trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 512 + 21 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length / 1024 + 21 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 128 +
  // 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(9 *
  // trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(5 * trace_length / 512 + 21 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(11 * trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(3 * trace_length / 256 + 21 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(13 * trace_length / 1024 + 21 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(7 * trace_length /
  // 512 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(15 *
  // trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(trace_length / 64 + 21 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(17 * trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(9 * trace_length / 512 + 21 * trace_length / 32)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(19 * trace_length / 1024 + 21 *
  // trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length /
  // 256 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(21 *
  // trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(11 * trace_length / 512 + 21 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(23 * trace_length / 1024 + 21 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(11 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 512 + 11 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(3 * trace_length / 1024 + 11 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 256 +
  // 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 *
  // trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(3 * trace_length / 512 + 11 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(7 * trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(trace_length / 128 + 11 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(9 * trace_length / 1024 + 11 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(5 * trace_length /
  // 512 + 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 *
  // trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(3 * trace_length / 256 + 11 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(13 * trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(7 * trace_length / 512 + 11 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(15 * trace_length / 1024 + 11 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(trace_length / 64 +
  // 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(17 *
  // trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio)
  // - gen^(9 * trace_length / 512 + 11 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(19 * trace_length / 1024 + 11 * trace_length / 16)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(5 * trace_length / 256 + 11 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(21 * trace_length / 1024 + 11 *
  // trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(11 * trace_length /
  // 512 + 11 * trace_length / 16)) * (point^(4 * trace_length / keccak__row_ratio) - gen^(23 *
  // trace_length / 1024 + 11 * trace_length / 16)) * domain26.
  [[maybe_unused]] const FieldElementT& domain27 = precomp_domains[27];
  // domain28 = point^(trace_length / keccak__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain28 = precomp_domains[28];
  // domain29 = point^(trace_length / (16 * keccak__row_ratio)) - 1.
  [[maybe_unused]] const FieldElementT& domain29 = precomp_domains[29];
  // domain30 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 65536)) *
  // domain29.
  [[maybe_unused]] const FieldElementT& domain30 = precomp_domains[30];
  // domain31 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 262144)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 131072)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 262144)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 262144)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 131072)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 524288)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 262144)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 524288)) *
  // domain30.
  [[maybe_unused]] const FieldElementT& domain31 = precomp_domains[31];
  // domain32 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 65536)) * domain30.
  [[maybe_unused]] const FieldElementT& domain32 = precomp_domains[32];
  // domain33 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 65536)) * domain32.
  [[maybe_unused]] const FieldElementT& domain33 = precomp_domains[33];
  // domain34 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 65536)) * domain33.
  [[maybe_unused]] const FieldElementT& domain34 = precomp_domains[34];
  // domain35 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 32768))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 65536)) *
  // domain34.
  [[maybe_unused]] const FieldElementT& domain35 = precomp_domains[35];
  // domain36 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 512)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 256)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 512)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 128)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 512)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 1024)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 2048)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 256)).
  [[maybe_unused]] const FieldElementT& domain36 = precomp_domains[36];
  // domain37 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(33 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(65 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(97 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(129 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(161 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(193 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(225 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(257 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(289 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(321 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(353 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(385 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(417 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(449 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(481 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(513 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(545 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(577 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(609 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(641 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(673 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(705 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(737 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(769 * trace_length / 65536)) *
  // domain36.
  [[maybe_unused]] const FieldElementT& domain37 = precomp_domains[37];
  // domain38 = domain30 * domain37.
  [[maybe_unused]] const FieldElementT& domain38 = precomp_domains[38];
  // domain39 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 32768))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(35 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(33 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(67 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(69 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(35 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(71 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(73 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(75 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(77 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(79 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(81 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(83 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(85 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(87 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(89 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(91 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(93 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(99 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(101 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(103 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(105 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(107 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(109 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(111 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(113 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(115 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(117 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(119 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(121 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(123 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(125 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(65 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(131 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(33 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(133 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(67 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(135 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(137 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(69 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(139 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(35 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(141 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(71 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(143 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(145 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(73 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(147 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(149 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(75 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(151 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(153 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(77 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(155 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(157 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(81 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(163 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(165 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(83 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(167 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(169 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(85 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(171 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(173 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(87 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(175 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(177 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(89 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(179 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(181 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(91 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(183 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(185 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(93 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(187 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(189 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(97 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(195 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(197 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(99 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(199 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(201 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(101 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(203 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(205 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(103 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(207 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(209 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(105 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(211 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(213 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(107 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(215 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(217 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(109 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(219 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(221 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(113 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(227 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(229 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(115 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(231 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(233 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(117 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(235 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(237 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(119 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(239 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(241 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(121 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(243 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(245 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(123 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(247 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(249 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(125 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(251 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(253 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(129 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(259 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(65 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(261 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(131 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(263 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(33 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(265 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(133 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(267 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(67 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(269 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(135 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(271 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(273 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(137 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(275 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(69 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(277 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(139 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(279 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(35 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(281 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(141 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(283 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(71 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(285 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(145 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(291 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(73 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(293 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(147 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(295 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(297 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(149 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(299 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(75 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(301 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(151 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(303 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(305 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(153 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(307 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(77 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(309 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(155 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(311 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(313 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(157 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(315 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(79 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(317 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(161 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(323 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(81 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(325 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(163 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(327 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(329 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(165 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(331 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(83 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(333 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(167 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(335 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(337 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(169 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(339 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(85 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(341 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(171 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(343 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(345 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(173 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(347 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(87 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(349 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(177 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(355 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(89 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(357 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(179 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(359 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(361 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(181 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(363 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(91 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(365 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(183 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(367 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(369 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(185 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(371 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(93 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(373 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(187 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(375 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(377 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(189 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(379 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(95 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(381 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(193 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(387 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(97 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(389 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(195 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(391 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(393 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(197 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(395 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(99 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(397 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(199 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(399 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(401 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(201 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(403 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(101 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(405 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(203 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(407 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(409 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(205 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(411 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(103 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(413 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(209 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(419 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(105 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(421 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(211 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(423 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(425 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(213 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(427 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(107 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(429 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(215 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(431 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(433 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(217 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(435 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(109 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(437 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(219 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(439 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(441 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(221 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(443 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(111 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(445 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(225 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(451 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(113 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(453 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(227 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(455 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(457 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(229 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(459 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(115 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(461 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(231 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(463 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(465 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(233 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(467 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(117 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(469 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(235 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(471 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(473 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(237 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(475 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(119 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(477 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(241 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(483 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(121 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(485 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(243 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(487 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(489 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(245 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(491 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(123 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(493 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(247 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(495 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(497 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(249 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(499 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(125 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(501 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(251 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(503 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(505 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(253 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(507 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(127 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(509 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(257 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(515 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(129 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(517 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(259 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(519 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(65 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(521 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(261 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(523 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(131 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(525 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(263 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(527 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(33 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(529 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(265 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(531 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(133 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(533 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(267 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(535 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(67 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(537 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(269 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(539 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(135 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(541 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(273 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(547 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(137 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(549 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(275 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(551 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(69 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(553 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(277 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(555 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(139 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(557 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(279 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(559 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(35 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(561 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(281 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(563 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(141 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(565 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(283 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(567 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(71 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(569 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(285 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(571 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(143 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(573 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(289 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(579 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(145 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(581 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(291 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(583 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(73 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(585 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(293 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(587 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(147 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(589 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(295 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(591 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(593 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(297 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(595 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(149 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(597 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(299 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(599 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(75 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(601 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(301 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(603 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(151 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(605 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(305 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(611 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(153 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(613 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(307 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(615 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(77 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(617 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(309 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(619 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(155 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(621 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(311 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(623 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(625 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(313 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(627 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(157 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(629 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(315 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(631 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(79 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(633 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(317 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(635 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(159 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(637 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(321 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(643 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(161 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(645 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(323 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(647 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(81 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(649 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(325 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(651 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(163 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(653 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(327 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(655 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(657 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(329 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(659 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(165 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(661 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(331 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(663 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(83 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(665 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(333 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(667 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(167 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(669 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(337 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(675 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(169 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(677 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(339 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(679 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(85 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(681 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(341 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(683 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(171 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(685 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(343 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(687 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(689 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(345 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(691 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(173 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(693 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(347 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(695 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(87 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(697 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(349 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(699 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(175 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(701 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(353 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(707 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(177 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(709 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(355 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(711 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(89 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(713 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(357 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(715 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(179 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(717 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(359 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(719 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(721 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(361 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(723 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(181 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(725 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(363 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(727 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(91 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(729 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(365 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(731 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(183 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(733 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(369 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(739 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(185 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(741 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(371 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(743 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(93 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(745 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(373 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(747 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(187 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(749 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(375 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(751 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(753 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(377 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(755 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(189 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(757 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(379 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(759 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(95 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(761 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(381 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(763 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(191 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(765 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(385 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(771 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(193 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(773 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(387 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(775 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(97 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(777 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(389 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(779 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(195 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(781 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(391 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(783 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(785 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(393 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(787 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(197 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(789 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(395 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(791 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(99 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(793 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(397 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(795 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(199 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(797 * trace_length / 65536)) * domain34
  // * domain37.
  [[maybe_unused]] const FieldElementT& domain39 = precomp_domains[39];
  // domain40 = domain29 * domain36.
  [[maybe_unused]] const FieldElementT& domain40 = precomp_domains[40];
  // domain41 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(63 * trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain41 = precomp_domains[41];
  // domain42 = (point^(4 * trace_length / keccak__row_ratio) - gen^(13 * trace_length / 16)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(27 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(7 * trace_length / 8)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(29 * trace_length / 32)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(15 * trace_length / 16)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(31 * trace_length / 32)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2017 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1009 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2019 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(505 * trace_length / 512)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2021 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1011 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2023 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(253 * trace_length / 256)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2025 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1013 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2027 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(507 * trace_length / 512)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2029 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1015 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2031 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(127 * trace_length / 128)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2033 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1017 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2035 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(509 * trace_length / 512)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2037 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(1019 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2039 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(255 * trace_length / 256)) * domain41.
  [[maybe_unused]] const FieldElementT& domain42 = precomp_domains[42];
  // domain43 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(64513 * trace_length /
  // 65536).
  [[maybe_unused]] const FieldElementT& domain43 = precomp_domains[43];
  // domain44 = (point^(4 * trace_length / keccak__row_ratio) - gen^(833 * trace_length / 1024)) *
  // (point^(4 * trace_length / keccak__row_ratio) - gen^(865 * trace_length / 1024)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(897 * trace_length / 1024)) * (point^(4 * trace_length
  // / keccak__row_ratio) - gen^(929 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(961 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(993 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64545 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64577 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64609 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64641 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64673 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64705 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64737 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64769 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64801 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64833 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64865 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64897 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64929 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64961 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64993 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65025 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65057 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65089 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65121 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65153 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65185 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65217 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65249 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65281 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(2041 * trace_length / 2048)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65313 * trace_length / 65536)) * domain42 * domain43.
  [[maybe_unused]] const FieldElementT& domain44 = precomp_domains[44];
  // domain45 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32257 * trace_length /
  // 32768)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64515 * trace_length /
  // 65536)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16129 * trace_length /
  // 16384)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64517 * trace_length /
  // 65536)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32259 * trace_length /
  // 32768)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64519 * trace_length /
  // 65536)).
  [[maybe_unused]] const FieldElementT& domain45 = precomp_domains[45];
  // domain46 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8065 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64521 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32261 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64523 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16131 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64525 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32263 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64527 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4033 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64529 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32265 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64531 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16133 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64533 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(32267 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(64535 * trace_length / 65536)) *
  // domain45.
  [[maybe_unused]] const FieldElementT& domain46 = precomp_domains[46];
  // domain47 = (point^(128 * trace_length / keccak__row_ratio) - gen^(15 * trace_length / 16)) *
  // (point^(128 * trace_length / keccak__row_ratio) - gen^(31 * trace_length / 32)) * (point^(4 *
  // trace_length / keccak__row_ratio) - gen^(417 * trace_length / 512)) * (point^(4 * trace_length
  // / keccak__row_ratio) - gen^(835 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(209 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(837 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(419 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(839 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(105 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(841 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(421 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(843 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(211 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(845 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(423 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(847 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(53 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(849 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(425 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(851 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(213 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(853 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(427 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(855 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(107 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(857 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(429 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(859 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(215 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(861 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(433 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(867 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(217 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(869 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(435 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(871 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(109 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(873 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(437 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(875 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(219 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(877 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(439 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(879 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(55 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(881 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(441 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(883 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(221 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(885 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(443 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(887 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(111 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(889 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(445 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(891 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(223 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(893 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(449 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(899 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(225 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(901 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(451 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(903 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(113 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(905 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(453 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(907 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(227 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(909 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(455 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(911 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(57 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(913 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(457 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(915 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(229 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(917 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(459 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(919 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(115 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(921 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(461 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(923 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(231 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(925 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(465 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(931 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(233 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(933 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(467 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(935 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(117 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(937 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(469 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(939 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(235 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(941 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(471 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(943 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(59 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(945 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(473 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(947 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(237 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(949 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(475 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(951 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(119 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(953 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(477 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(955 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(239 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(957 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(481 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(963 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(241 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(965 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(483 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(967 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(121 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(969 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(485 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(971 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(243 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(973 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(487 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(975 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(61 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(977 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(489 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(979 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(245 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(981 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(491 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(983 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(123 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(985 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(493 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(987 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(247 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(989 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(497 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(995 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(249 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(997 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(499 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(999 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(125 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1001 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(501 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1003 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(251 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1005 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(503 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1007 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(63 * trace_length / 64)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1009 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(505 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1011 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(253 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1013 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(507 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1015 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(127 * trace_length / 128)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1017 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(509 * trace_length / 512)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1019 * trace_length / 1024)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(255 * trace_length / 256)) * (point^(4 * trace_length /
  // keccak__row_ratio) - gen^(1021 * trace_length / 1024)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8067 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64537 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32269 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64539 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16135 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64541 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32273 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64547 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16137 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64549 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32275 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64551 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8069 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64553 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32277 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64555 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16139 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64557 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32279 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64559 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4035 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64561 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32281 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64563 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16141 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64565 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32283 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64567 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8071 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64569 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32285 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64571 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16143 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64573 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32289 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64579 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16145 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64581 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32291 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64583 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8073 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64585 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32293 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64587 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16147 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64589 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32295 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64591 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4037 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64593 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32297 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64595 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16149 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64597 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32299 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64599 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8075 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64601 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32301 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64603 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16151 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64605 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32305 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64611 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16153 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64613 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32307 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64615 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8077 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64617 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32309 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64619 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16155 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64621 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32311 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64623 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4039 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64625 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32313 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64627 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16157 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64629 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32315 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64631 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8079 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64633 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32317 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64635 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16159 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64637 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32321 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64643 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16161 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64645 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32323 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64647 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8081 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64649 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32325 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64651 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16163 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64653 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32327 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64655 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4041 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64657 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32329 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64659 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16165 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64661 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32331 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64663 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8083 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64665 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32333 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64667 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16167 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64669 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32337 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64675 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16169 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64677 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32339 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64679 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8085 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64681 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32341 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64683 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16171 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64685 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32343 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64687 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4043 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64689 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32345 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64691 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16173 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64693 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32347 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64695 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8087 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64697 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32349 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64699 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16175 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64701 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32353 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64707 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16177 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64709 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32355 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64711 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8089 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64713 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32357 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64715 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16179 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64717 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32359 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64719 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4045 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64721 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32361 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64723 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16181 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64725 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32363 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64727 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8091 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64729 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32365 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64731 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16183 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64733 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32369 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64739 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16185 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64741 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32371 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64743 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8093 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64745 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32373 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64747 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16187 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64749 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32375 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64751 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4047 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64753 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32377 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64755 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16189 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64757 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32379 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64759 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8095 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64761 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32381 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64763 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16191 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64765 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32385 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64771 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16193 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64773 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32387 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64775 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8097 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64777 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32389 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64779 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16195 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64781 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32391 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64783 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4049 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64785 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32393 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64787 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16197 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64789 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32395 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64791 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8099 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64793 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32397 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64795 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16199 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64797 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32401 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64803 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16201 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64805 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32403 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64807 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8101 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64809 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32405 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64811 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16203 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64813 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32407 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64815 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4051 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64817 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32409 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64819 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16205 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64821 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32411 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64823 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8103 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64825 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32413 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64827 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16207 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64829 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32417 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64835 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16209 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64837 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32419 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64839 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8105 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64841 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32421 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64843 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16211 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64845 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32423 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64847 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4053 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64849 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32425 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64851 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16213 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64853 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32427 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64855 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8107 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64857 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32429 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64859 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16215 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64861 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32433 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64867 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16217 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64869 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32435 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64871 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8109 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64873 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32437 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64875 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16219 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64877 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32439 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64879 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4055 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64881 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32441 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64883 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16221 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64885 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32443 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64887 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8111 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64889 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32445 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64891 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16223 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64893 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32449 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64899 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16225 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64901 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32451 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64903 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8113 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64905 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32453 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64907 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16227 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64909 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32455 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64911 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4057 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64913 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32457 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64915 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16229 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64917 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32459 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64919 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8115 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64921 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32461 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64923 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16231 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64925 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32465 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64931 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16233 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64933 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32467 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64935 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8117 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64937 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32469 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64939 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16235 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64941 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32471 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64943 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4059 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64945 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32473 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64947 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16237 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64949 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32475 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64951 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8119 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64953 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32477 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64955 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16239 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64957 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32481 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64963 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16241 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64965 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32483 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64967 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8121 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64969 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32485 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64971 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16243 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64973 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32487 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64975 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4061 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64977 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32489 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64979 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16245 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64981 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32491 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64983 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8123 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64985 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32493 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64987 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16247 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64989 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32497 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64995 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16249 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64997 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32499 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(64999 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8125 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65001 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32501 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65003 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16251 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65005 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32503 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65007 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4063 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65009 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32505 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65011 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16253 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65013 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32507 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65015 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8127 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65017 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32509 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65019 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16255 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65021 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32513 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65027 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16257 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65029 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32515 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65031 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8129 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65033 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32517 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65035 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16259 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65037 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32519 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65039 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4065 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65041 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32521 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65043 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16261 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65045 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32523 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65047 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8131 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65049 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32525 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65051 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16263 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65053 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32529 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65059 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16265 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65061 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32531 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65063 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8133 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65065 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32533 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65067 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16267 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65069 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32535 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65071 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4067 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65073 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32537 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65075 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16269 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65077 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32539 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65079 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8135 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65081 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32541 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65083 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16271 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65085 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32545 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65091 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16273 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65093 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32547 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65095 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8137 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65097 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32549 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65099 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16275 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65101 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32551 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65103 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4069 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65105 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32553 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65107 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16277 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65109 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32555 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65111 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8139 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65113 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32557 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65115 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16279 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65117 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32561 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65123 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16281 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65125 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32563 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65127 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8141 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65129 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32565 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65131 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16283 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65133 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32567 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65135 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4071 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65137 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32569 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65139 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16285 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65141 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32571 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65143 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8143 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65145 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32573 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65147 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16287 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65149 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32577 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65155 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16289 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65157 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32579 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65159 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8145 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65161 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32581 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65163 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16291 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65165 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32583 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65167 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4073 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65169 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32585 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65171 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16293 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65173 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32587 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65175 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8147 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65177 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32589 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65179 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16295 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65181 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32593 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65187 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16297 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65189 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32595 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65191 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8149 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65193 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32597 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65195 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16299 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65197 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32599 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65199 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4075 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65201 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32601 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65203 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16301 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65205 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32603 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65207 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8151 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65209 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32605 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65211 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16303 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65213 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32609 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65219 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16305 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65221 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32611 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65223 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8153 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65225 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32613 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65227 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16307 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65229 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32615 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65231 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4077 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65233 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32617 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65235 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16309 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65237 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32619 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65239 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8155 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65241 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32621 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65243 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16311 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65245 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32625 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65251 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16313 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65253 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32627 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65255 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8157 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65257 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32629 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65259 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16315 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65261 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32631 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65263 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4079 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65265 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32633 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65267 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16317 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65269 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32635 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65271 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8159 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65273 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32637 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65275 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16319 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65277 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32641 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65283 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16321 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65285 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32643 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65287 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8161 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65289 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32645 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65291 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16323 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65293 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32647 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65295 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4081 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65297 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32649 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65299 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16325 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65301 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32651 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65303 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8163 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65305 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32653 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65307 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16327 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65309 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32657 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65315 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16329 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65317 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32659 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65319 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8165 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65321 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32661 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65323 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16331 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65325 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32663 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65327 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(4083 * trace_length / 4096)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65329 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32665 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65331 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16333 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65333 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32667 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65335 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(8167 * trace_length / 8192)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65337 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(32669 * trace_length / 32768)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65339 * trace_length / 65536)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(16335 * trace_length / 16384)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(65341 * trace_length / 65536)) * domain44 * domain46.
  [[maybe_unused]] const FieldElementT& domain47 = precomp_domains[47];
  // domain48 = (point^(4 * trace_length / keccak__row_ratio) - gen^(25 * trace_length / 32)) *
  // domain42.
  [[maybe_unused]] const FieldElementT& domain48 = precomp_domains[48];
  // domain49 = domain41 * domain43.
  [[maybe_unused]] const FieldElementT& domain49 = precomp_domains[49];
  // domain50 = domain46 * domain49.
  [[maybe_unused]] const FieldElementT& domain50 = precomp_domains[50];
  // domain51 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63489 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31745 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63491 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15873 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63493 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31747 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63495 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain51 = precomp_domains[51];
  // domain52 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7937 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63497 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31749 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63499 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15875 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63501 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31751 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63503 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3969 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63505 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31753 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63507 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15877 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63509 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31755 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(63511 * trace_length / 65536)) *
  // domain50 * domain51.
  [[maybe_unused]] const FieldElementT& domain52 = precomp_domains[52];
  // domain53 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62465 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31233 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62467 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15617 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62469 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31235 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62471 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain53 = precomp_domains[53];
  // domain54 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7809 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62473 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31237 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62475 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15619 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62477 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31239 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62479 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3905 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62481 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31241 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62483 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15621 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62485 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31243 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(62487 * trace_length / 65536)) *
  // domain52 * domain53.
  [[maybe_unused]] const FieldElementT& domain54 = precomp_domains[54];
  // domain55 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59393 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29697 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59395 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14849 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59397 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29699 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59399 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60417 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30209 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60419 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15105 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60421 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30211 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60423 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61441 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30721 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61443 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15361 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61445 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30723 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61447 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain55 = precomp_domains[55];
  // domain56 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7425 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59401 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29701 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59403 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14851 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59405 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29703 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59407 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3713 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59409 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29705 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59411 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14853 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59413 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29707 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(59415 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7553 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60425 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30213 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60427 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15107 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60429 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30215 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60431 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3777 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60433 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30217 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60435 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15109 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60437 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30219 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(60439 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7681 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61449 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30725 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61451 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15363 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61453 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30727 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61455 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3841 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61457 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30729 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61459 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15365 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61461 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(30731 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(61463 * trace_length / 65536)) *
  // domain54 * domain55.
  [[maybe_unused]] const FieldElementT& domain56 = precomp_domains[56];
  // domain57 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 8)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57345 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28673 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57347 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14337 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57349 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28675 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57351 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58369 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29185 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58371 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14593 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58373 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29187 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58375 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain57 = precomp_domains[57];
  // domain58 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7169 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57353 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28677 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57355 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14339 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57357 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28679 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57359 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3585 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57361 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28681 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57363 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14341 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57365 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28683 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(57367 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7297 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58377 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29189 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58379 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14595 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58381 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29191 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58383 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3649 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58385 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29193 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58387 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14597 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58389 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(29195 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(58391 * trace_length / 65536)) *
  // domain56 * domain57.
  [[maybe_unused]] const FieldElementT& domain58 = precomp_domains[58];
  // domain59 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56321 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28161 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56323 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14081 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56325 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28163 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56327 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain59 = precomp_domains[59];
  // domain60 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55297 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27649 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55299 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13825 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55301 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27651 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55303 * trace_length / 65536)) *
  // domain59.
  [[maybe_unused]] const FieldElementT& domain60 = precomp_domains[60];
  // domain61 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6913 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55305 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27653 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55307 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13827 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55309 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27655 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55311 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3457 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55313 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27657 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55315 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13829 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55317 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27659 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(55319 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7041 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56329 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28165 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56331 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14083 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56333 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28167 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56335 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3521 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56337 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28169 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56339 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14085 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56341 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(28171 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(56343 * trace_length / 65536)) *
  // domain58 * domain60.
  [[maybe_unused]] const FieldElementT& domain61 = precomp_domains[61];
  // domain62 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51201 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25601 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51203 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12801 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51205 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25603 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51207 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52225 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26113 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52227 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13057 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52229 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26115 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52231 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53249 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26625 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53251 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13313 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53253 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26627 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53255 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54273 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27137 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54275 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13569 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54277 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27139 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54279 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain62 = precomp_domains[62];
  // domain63 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6401 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51209 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25605 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51211 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12803 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51213 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25607 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51215 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3201 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51217 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25609 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51219 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12805 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51221 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25611 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(51223 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6529 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52233 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26117 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52235 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13059 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52237 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26119 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52239 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3265 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52241 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26121 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52243 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13061 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52245 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26123 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(52247 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6657 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53257 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26629 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53259 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13315 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53261 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26631 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53263 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3329 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53265 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26633 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53267 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13317 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53269 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26635 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(53271 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6785 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54281 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27141 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54283 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13571 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54285 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27143 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54287 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3393 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54289 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27145 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54291 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13573 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54293 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27147 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(54295 * trace_length / 65536)) *
  // domain61 * domain62.
  [[maybe_unused]] const FieldElementT& domain63 = precomp_domains[63];
  // domain64 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50177 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25089 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50179 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12545 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50181 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25091 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50183 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain64 = precomp_domains[64];
  // domain65 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6273 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50185 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25093 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50187 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12547 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50189 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25095 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50191 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3137 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50193 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25097 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50195 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12549 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50197 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25099 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(50199 * trace_length / 65536)) *
  // domain63 * domain64.
  [[maybe_unused]] const FieldElementT& domain65 = precomp_domains[65];
  // domain66 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47105 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23553 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47107 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11777 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47109 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23555 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47111 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48129 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24065 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48131 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12033 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48133 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24067 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48135 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 4)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49153 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24577 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49155 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12289 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49157 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24579 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49159 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain66 = precomp_domains[66];
  // domain67 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5889 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47113 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23557 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47115 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11779 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47117 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23559 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47119 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2945 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47121 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23561 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47123 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11781 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47125 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23563 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(47127 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6017 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48137 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24069 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48139 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12035 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48141 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24071 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48143 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3009 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48145 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24073 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48147 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12037 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48149 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24075 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(48151 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6145 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49161 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24581 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49163 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12291 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49165 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24583 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49167 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3073 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49169 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24585 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49171 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12293 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49173 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24587 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(49175 * trace_length / 65536)) *
  // domain65 * domain66.
  [[maybe_unused]] const FieldElementT& domain67 = precomp_domains[67];
  // domain68 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46081 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23041 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46083 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11521 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46085 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23043 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46087 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain68 = precomp_domains[68];
  // domain69 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5761 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46089 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23045 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46091 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11523 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46093 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23047 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46095 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2881 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46097 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23049 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46099 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11525 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46101 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23051 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(46103 * trace_length / 65536)) *
  // domain67 * domain68.
  [[maybe_unused]] const FieldElementT& domain69 = precomp_domains[69];
  // domain70 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45057 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22529 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45059 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11265 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45061 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22531 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45063 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain70 = precomp_domains[70];
  // domain71 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5633 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45065 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22533 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45067 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11267 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45069 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22535 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45071 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2817 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45073 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22537 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45075 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11269 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45077 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22539 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(45079 * trace_length / 65536)) *
  // domain69 * domain70.
  [[maybe_unused]] const FieldElementT& domain71 = precomp_domains[71];
  // domain72 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44033 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22017 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44035 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11009 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44037 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22019 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44039 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain72 = precomp_domains[72];
  // domain73 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5505 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44041 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22021 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44043 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11011 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44045 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22023 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44047 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2753 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44049 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22025 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44051 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11013 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44053 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22027 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(44055 * trace_length / 65536)) *
  // domain71 * domain72.
  [[maybe_unused]] const FieldElementT& domain73 = precomp_domains[73];
  // domain74 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41985 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20993 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41987 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10497 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41989 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20995 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41991 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43009 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21505 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43011 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10753 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43013 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21507 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43015 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain74 = precomp_domains[74];
  // domain75 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39937 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19969 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39939 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9985 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39941 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19971 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39943 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 8)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40961 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20481 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40963 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10241 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40965 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20483 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40967 * trace_length / 65536)) *
  // domain74.
  [[maybe_unused]] const FieldElementT& domain75 = precomp_domains[75];
  // domain76 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4993 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39945 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19973 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39947 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9987 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39949 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19975 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39951 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2497 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39953 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19977 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39955 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9989 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39957 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19979 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(39959 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5121 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40969 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20485 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40971 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10243 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40973 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20487 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40975 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2561 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40977 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20489 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40979 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10245 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40981 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20491 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(40983 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5249 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41993 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20997 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41995 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10499 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41997 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20999 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(41999 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2625 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(42001 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21001 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(42003 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10501 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(42005 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21003 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(42007 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5377 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43017 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21509 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43019 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10755 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43021 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21511 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43023 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2689 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43025 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21513 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43027 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10757 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43029 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21515 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(43031 * trace_length / 65536)) *
  // domain73 * domain75.
  [[maybe_unused]] const FieldElementT& domain76 = precomp_domains[76];
  // domain77 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37889 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18945 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37891 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9473 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37893 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18947 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37895 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4737 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37897 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18949 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37899 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9475 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37901 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18951 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37903 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2369 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37905 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18953 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37907 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9477 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37909 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18955 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(37911 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38913 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19457 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38915 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9729 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38917 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19459 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38919 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4865 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38921 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19461 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38923 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9731 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38925 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19463 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38927 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2433 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38929 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19465 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38931 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9733 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38933 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19467 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(38935 * trace_length / 65536)) *
  // domain76.
  [[maybe_unused]] const FieldElementT& domain77 = precomp_domains[77];
  // domain78 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36865 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18433 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36867 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9217 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36869 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18435 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36871 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4609 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36873 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18437 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36875 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9219 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36877 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18439 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36879 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2305 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36881 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18441 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36883 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9221 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36885 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18443 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(36887 * trace_length / 65536)) *
  // domain77.
  [[maybe_unused]] const FieldElementT& domain78 = precomp_domains[78];
  // domain79 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain79 = precomp_domains[79];
  // domain80 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1025 * trace_length /
  // 65536)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(513 * trace_length / 32768))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1027 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(257 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1029 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(515 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1031 * trace_length / 65536)) *
  // domain79.
  [[maybe_unused]] const FieldElementT& domain80 = precomp_domains[80];
  // domain81 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(129 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1033 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(517 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1035 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(259 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1037 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(519 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1039 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(65 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1041 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(521 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1043 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(261 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1045 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(523 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1047 * trace_length / 65536)) *
  // domain33 * domain80.
  [[maybe_unused]] const FieldElementT& domain81 = precomp_domains[81];
  // domain82 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2049 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1025 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2051 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(513 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2053 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1027 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2055 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain82 = precomp_domains[82];
  // domain83 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain83 = precomp_domains[83];
  // domain84 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3073 * trace_length /
  // 65536)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1537 * trace_length / 32768))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3075 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(769 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3077 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1539 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3079 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4097 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2049 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4099 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1025 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4101 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2051 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4103 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5121 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2561 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5123 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1281 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5125 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2563 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5127 * trace_length / 65536)) *
  // domain82 * domain83.
  [[maybe_unused]] const FieldElementT& domain84 = precomp_domains[84];
  // domain85 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(257 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2057 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1029 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2059 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(515 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2061 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1031 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2063 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(129 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2065 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1033 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2067 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(517 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2069 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1035 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2071 * trace_length / 65536)) *
  // domain81.
  [[maybe_unused]] const FieldElementT& domain85 = precomp_domains[85];
  // domain86 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(385 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3081 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1541 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3083 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(771 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3085 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1543 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3087 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(193 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3089 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1545 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3091 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(773 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3093 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1547 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3095 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(513 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4105 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2053 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4107 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1027 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4109 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2055 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4111 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(257 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4113 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2057 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4115 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1029 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4117 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2059 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4119 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(641 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5129 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2565 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5131 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1283 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5133 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2567 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5135 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(321 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5137 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2569 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5139 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1285 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5141 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2571 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5143 * trace_length / 65536)) *
  // domain84 * domain85.
  [[maybe_unused]] const FieldElementT& domain86 = precomp_domains[86];
  // domain87 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain87 = precomp_domains[87];
  // domain88 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6145 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3073 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6147 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1537 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6149 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3075 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6151 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7169 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3585 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7171 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1793 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7173 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3587 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7175 * trace_length / 65536)) *
  // domain87.
  [[maybe_unused]] const FieldElementT& domain88 = precomp_domains[88];
  // domain89 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 8)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8193 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4097 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8195 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2049 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8197 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4099 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8199 * trace_length / 65536)) *
  // domain88.
  [[maybe_unused]] const FieldElementT& domain89 = precomp_domains[89];
  // domain90 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9217 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4609 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9219 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2305 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9221 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4611 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9223 * trace_length / 65536)) *
  // domain89.
  [[maybe_unused]] const FieldElementT& domain90 = precomp_domains[90];
  // domain91 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(769 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6153 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3077 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6155 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1539 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6157 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3079 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6159 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(385 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6161 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3081 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6163 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1541 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6165 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3083 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6167 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(897 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7177 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3589 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7179 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1795 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7181 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3591 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7183 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(449 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7185 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3593 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7187 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1797 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7189 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3595 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7191 * trace_length / 65536)) *
  // domain86.
  [[maybe_unused]] const FieldElementT& domain91 = precomp_domains[91];
  // domain92 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1025 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8201 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4101 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8203 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2051 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8205 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4103 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8207 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(513 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8209 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4105 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8211 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2053 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8213 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4107 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8215 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1153 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9225 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4613 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9227 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2307 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9229 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4615 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9231 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(577 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9233 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4617 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9235 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2309 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9237 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4619 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9239 * trace_length / 65536)) *
  // domain90 * domain91.
  [[maybe_unused]] const FieldElementT& domain92 = precomp_domains[92];
  // domain93 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10241 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5121 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10243 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2561 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10245 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5123 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10247 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11265 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5633 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11267 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2817 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11269 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5635 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11271 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12289 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6145 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12291 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3073 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12293 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6147 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12295 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13313 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6657 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13315 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3329 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13317 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6659 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13319 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain93 = precomp_domains[93];
  // domain94 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14337 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7169 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14339 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3585 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14341 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7171 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14343 * trace_length / 65536)) *
  // domain93.
  [[maybe_unused]] const FieldElementT& domain94 = precomp_domains[94];
  // domain95 = point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 64).
  [[maybe_unused]] const FieldElementT& domain95 = precomp_domains[95];
  // domain96 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15361 * trace_length /
  // 65536)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7681 * trace_length / 32768))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15363 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3841 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15365 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7683 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15367 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 4)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16385 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8193 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16387 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4097 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16389 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8195 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16391 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17409 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8705 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17411 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4353 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17413 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8707 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17415 * trace_length / 65536)) *
  // domain94 * domain95.
  [[maybe_unused]] const FieldElementT& domain96 = precomp_domains[96];
  // domain97 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18433 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9217 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18435 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4609 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18437 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9219 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18439 * trace_length / 65536)) *
  // domain96.
  [[maybe_unused]] const FieldElementT& domain97 = precomp_domains[97];
  // domain98 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19457 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9729 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19459 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4865 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19461 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9731 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19463 * trace_length / 65536)) *
  // domain97.
  [[maybe_unused]] const FieldElementT& domain98 = precomp_domains[98];
  // domain99 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1281 * trace_length / 8192))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10249 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5125 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10251 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2563 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10253 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5127 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10255 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(641 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10257 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5129 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10259 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2565 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10261 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5131 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10263 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1409 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11273 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5637 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11275 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2819 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11277 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5639 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11279 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(705 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11281 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5641 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11283 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2821 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11285 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5643 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11287 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1537 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12297 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6149 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12299 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3075 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12301 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6151 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12303 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(769 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12305 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6153 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12307 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3077 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12309 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6155 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12311 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1665 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13321 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6661 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13323 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3331 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13325 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6663 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13327 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(833 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13329 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6665 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13331 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3333 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13333 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6667 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13335 * trace_length / 65536)) *
  // domain92.
  [[maybe_unused]] const FieldElementT& domain99 = precomp_domains[99];
  // domain100 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1793 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14345 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7173 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14347 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3587 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14349 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7175 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14351 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(897 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14353 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7177 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14355 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3589 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14357 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7179 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(14359 * trace_length / 65536)) *
  // domain99.
  [[maybe_unused]] const FieldElementT& domain100 = precomp_domains[100];
  // domain101 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1921 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15369 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7685 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15371 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3843 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15373 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7687 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15375 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(961 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15377 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7689 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15379 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3845 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15381 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7691 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15383 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2049 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16393 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8197 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16395 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4099 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16397 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8199 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16399 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1025 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16401 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8201 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16403 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4101 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16405 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8203 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(16407 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2177 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17417 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8709 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17419 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4355 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17421 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8711 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17423 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1089 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17425 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8713 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17427 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4357 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17429 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(8715 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17431 * trace_length / 65536)) *
  // domain100.
  [[maybe_unused]] const FieldElementT& domain101 = precomp_domains[101];
  // domain102 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2305 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18441 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9221 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18443 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4611 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18445 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9223 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18447 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1153 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18449 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9225 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18451 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4613 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18453 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9227 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(18455 * trace_length / 65536)) *
  // domain101.
  [[maybe_unused]] const FieldElementT& domain102 = precomp_domains[102];
  // domain103 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2433 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19465 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9733 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19467 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4867 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19469 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9735 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19471 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1217 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19473 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9737 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19475 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(4869 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19477 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9739 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19479 * trace_length / 65536)) *
  // domain98 * domain102.
  [[maybe_unused]] const FieldElementT& domain103 = precomp_domains[103];
  // domain104 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 16)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20481 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10241 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20483 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5121 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20485 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10243 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20487 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain104 = precomp_domains[104];
  // domain105 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2561 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20489 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10245 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20491 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5123 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20493 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10247 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20495 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1281 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20497 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10249 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20499 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5125 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20501 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10251 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(20503 * trace_length / 65536)) *
  // domain103 * domain104.
  [[maybe_unused]] const FieldElementT& domain105 = precomp_domains[105];
  // domain106 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21505 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10753 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21507 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5377 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21509 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10755 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21511 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22529 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11265 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22531 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5633 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22533 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11267 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22535 * trace_length / 65536)).
  [[maybe_unused]] const FieldElementT& domain106 = precomp_domains[106];
  // domain107 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23553 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11777 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23555 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5889 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23557 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11779 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23559 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 8)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24577 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12289 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24579 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6145 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24581 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12291 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24583 * trace_length / 65536)) *
  // domain106.
  [[maybe_unused]] const FieldElementT& domain107 = precomp_domains[107];
  // domain108 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2689 * trace_length /
  // 8192)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21513 * trace_length / 65536))
  // * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10757 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21515 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5379 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21517 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10759 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21519 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1345 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21521 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10761 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21523 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5381 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21525 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(10763 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21527 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2817 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22537 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11269 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22539 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5635 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22541 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11271 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22543 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1409 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22545 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11273 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22547 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5637 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22549 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11275 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(22551 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(2945 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23561 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11781 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23563 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5891 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23565 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11783 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23567 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1473 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23569 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11785 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23571 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5893 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23573 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11787 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23575 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3073 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24585 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12293 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24587 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6147 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24589 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12295 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24591 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1537 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24593 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12297 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24595 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6149 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24597 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12299 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(24599 * trace_length / 65536)) *
  // domain105 * domain107.
  [[maybe_unused]] const FieldElementT& domain108 = precomp_domains[108];
  // domain109 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25601 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12801 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25603 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6401 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25605 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12803 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25607 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3201 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25609 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12805 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25611 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6403 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25613 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12807 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25615 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1601 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25617 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12809 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25619 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6405 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25621 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(12811 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(25623 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 32)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26625 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13313 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26627 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6657 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26629 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13315 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26631 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3329 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26633 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13317 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26635 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6659 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26637 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13319 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26639 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1665 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26641 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13321 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26643 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6661 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26645 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13323 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(26647 * trace_length / 65536)) *
  // domain108.
  [[maybe_unused]] const FieldElementT& domain109 = precomp_domains[109];
  // domain110 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27649 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13825 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27651 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6913 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27653 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13827 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27655 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3457 * trace_length / 8192)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27657 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13829 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27659 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6915 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27661 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13831 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27663 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(1729 * trace_length / 4096)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27665 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13833 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27667 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(6917 * trace_length / 16384)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27669 * trace_length / 65536)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13835 * trace_length / 32768)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(27671 * trace_length / 65536)) *
  // domain109.
  [[maybe_unused]] const FieldElementT& domain110 = precomp_domains[110];
  // domain111 = domain32 * domain80.
  [[maybe_unused]] const FieldElementT& domain111 = precomp_domains[111];
  // domain112 = domain84 * domain111.
  [[maybe_unused]] const FieldElementT& domain112 = precomp_domains[112];
  // domain113 = domain89 * domain112.
  [[maybe_unused]] const FieldElementT& domain113 = precomp_domains[113];
  // domain114 = domain45 * domain49 * domain51.
  [[maybe_unused]] const FieldElementT& domain114 = precomp_domains[114];
  // domain115 = domain53 * domain55 * domain57 * domain114.
  [[maybe_unused]] const FieldElementT& domain115 = precomp_domains[115];
  // domain116 = domain59 * domain115.
  [[maybe_unused]] const FieldElementT& domain116 = precomp_domains[116];
  // domain117 = domain60 * domain62 * domain64 * domain66 * domain68 * domain70 * domain72 *
  // domain115.
  [[maybe_unused]] const FieldElementT& domain117 = precomp_domains[117];
  // domain118 = domain75 * domain117.
  [[maybe_unused]] const FieldElementT& domain118 = precomp_domains[118];
  // domain119 = domain74 * domain117.
  [[maybe_unused]] const FieldElementT& domain119 = precomp_domains[119];
  // domain120 = domain82 * domain85.
  [[maybe_unused]] const FieldElementT& domain120 = precomp_domains[120];
  // domain121 = domain90 * domain98 * domain104 * domain112.
  [[maybe_unused]] const FieldElementT& domain121 = precomp_domains[121];
  // domain122 = domain107 * domain121.
  [[maybe_unused]] const FieldElementT& domain122 = precomp_domains[122];
  // domain123 = domain106 * domain121.
  [[maybe_unused]] const FieldElementT& domain123 = precomp_domains[123];
  // domain124 = domain97 * domain102.
  [[maybe_unused]] const FieldElementT& domain124 = precomp_domains[124];
  // domain125 = domain94 * domain100.
  [[maybe_unused]] const FieldElementT& domain125 = precomp_domains[125];
  // domain126 = domain88 * domain91.
  [[maybe_unused]] const FieldElementT& domain126 = precomp_domains[126];
  // domain127 = domain96 * domain101.
  [[maybe_unused]] const FieldElementT& domain127 = precomp_domains[127];
  // domain128 = domain93 * domain99.
  [[maybe_unused]] const FieldElementT& domain128 = precomp_domains[128];
  // domain129 = (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 65536 +
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 32768 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 *
  // trace_length / 65536 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 16384 + trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(5 * trace_length / 65536 + trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 32768 + trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 65536 +
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 8192 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 *
  // trace_length / 65536 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(5 * trace_length / 32768 + trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(11 * trace_length / 65536 + trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 16384 + trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 65536 +
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length
  // / 32768 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 *
  // trace_length / 65536 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 4096 + trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(17 * trace_length / 65536 + trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 32768 + trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 65536 +
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length
  // / 16384 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 *
  // trace_length / 65536 + trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(11 * trace_length / 32768 + trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(23 * trace_length / 65536 + trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 65536 + 3 * trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 16384 + 3 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(5 * trace_length / 65536 + 3 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 8192 + 3 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(9 * trace_length / 65536 + 3 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 *
  // trace_length / 16384 + 3 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(13 * trace_length / 65536 + 3 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 4096 + 3 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(17 * trace_length / 65536 + 3 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 *
  // trace_length / 16384 + 3 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(21 * trace_length / 65536 + 3 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 32768 + 3 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length
  // / 65536 + 3 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 16384 + 7 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 *
  // trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(3 * trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 8192 + 7 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 *
  // trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(5 * trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length
  // / 16384 + 7 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13
  // * trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(7 * trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 4096 + 7 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 *
  // trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(9 * trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length
  // / 16384 + 7 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21
  // * trace_length / 65536 + 7 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(11 * trace_length / 32768 + 7 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length / 65536 + 7 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 65536 + 15 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(3 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 16384 + 15 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length
  // / 65536 + 15 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3
  // * trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(7 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 8192 + 15 * trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 65536 + 15
  // * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 *
  // trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(11 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 16384 + 15 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length
  // / 65536 + 15 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7
  // * trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(15 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 4096 + 15 * trace_length
  // / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 65536 + 15
  // * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 *
  // trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(19 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 16384 + 15 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length
  // / 65536 + 15 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11
  // * trace_length / 32768 + 15 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(23 * trace_length / 65536 + 15 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length /
  // 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 *
  // trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(trace_length / 16384 + 31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length
  // / 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7
  // * trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(trace_length / 8192 + 31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length
  // / 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11
  // * trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(3 * trace_length / 16384 + 31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(13 * trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length
  // / 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15
  // * trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(trace_length / 4096 + 31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(17 * trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length
  // / 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19
  // * trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(5 * trace_length / 16384 + 31 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(21 * trace_length / 65536 + 31 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length
  // / 32768 + 31 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23
  // * trace_length / 65536 + 31 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length
  // / 65536 + 63 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 16384 + 63 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(5 * trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3 * trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length
  // / 65536 + 63 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 8192 + 63 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(9 * trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5 * trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length
  // / 65536 + 63 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(3
  // * trace_length / 16384 + 63 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(13 * trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(7 * trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(15 * trace_length
  // / 65536 + 63 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) -
  // gen^(trace_length / 4096 + 63 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(17 * trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(9 * trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(19 * trace_length
  // / 65536 + 63 * trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(5
  // * trace_length / 16384 + 63 * trace_length / 64)) * (point^(trace_length / (16 *
  // keccak__row_ratio)) - gen^(21 * trace_length / 65536 + 63 * trace_length / 64)) *
  // (point^(trace_length / (16 * keccak__row_ratio)) - gen^(11 * trace_length / 32768 + 63 *
  // trace_length / 64)) * (point^(trace_length / (16 * keccak__row_ratio)) - gen^(23 * trace_length
  // / 65536 + 63 * trace_length / 64)) * domain33 * domain41 * domain79 * domain83 * domain87 *
  // domain95.
  [[maybe_unused]] const FieldElementT& domain129 = precomp_domains[129];
  // domain130 = point^(trace_length / memory_units_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain130 = precomp_domains[130];
  // domain131 = point^(trace_length / (8 * memory_units_row_ratio)) - 1.
  [[maybe_unused]] const FieldElementT& domain131 = precomp_domains[131];
  // domain132 = point^(512 * trace_length / pedersen_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain132 = precomp_domains[132];
  // domain133 = point^(2 * trace_length / pedersen_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain133 = precomp_domains[133];
  // domain134 = point^(2 * trace_length / pedersen_builtin_row_ratio) - gen^(255 * trace_length /
  // 256).
  [[maybe_unused]] const FieldElementT& domain134 = precomp_domains[134];
  // domain135 = point^(2 * trace_length / pedersen_builtin_row_ratio) - gen^(63 * trace_length /
  // 64).
  [[maybe_unused]] const FieldElementT& domain135 = precomp_domains[135];
  // domain136 = point^(trace_length / pedersen_builtin_row_ratio) - gen^(trace_length / 2).
  [[maybe_unused]] const FieldElementT& domain136 = precomp_domains[136];
  // domain137 = point^(trace_length / pedersen_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain137 = precomp_domains[137];
  // domain138 = point^(64 * trace_length / poseidon__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain138 = precomp_domains[138];
  // domain139 = point^(32 * trace_length / poseidon__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain139 = precomp_domains[139];
  // domain140 = point^(8 * trace_length / poseidon__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain140 = precomp_domains[140];
  // domain141 = point^(2 * trace_length / poseidon__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain141 = precomp_domains[141];
  // domain142 = point^(2 * trace_length / poseidon__row_ratio) - gen^(3 * trace_length / 4).
  [[maybe_unused]] const FieldElementT& domain142 = precomp_domains[142];
  // domain143 = point^(trace_length / poseidon__row_ratio) - gen^(31 * trace_length / 32).
  [[maybe_unused]] const FieldElementT& domain143 = precomp_domains[143];
  // domain144 = (point^(trace_length / poseidon__row_ratio) - gen^(61 * trace_length / 64)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(63 * trace_length / 64)) * domain143.
  [[maybe_unused]] const FieldElementT& domain144 = precomp_domains[144];
  // domain145 = (point^(trace_length / poseidon__row_ratio) - gen^(11 * trace_length / 16)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(23 * trace_length / 32)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(3 * trace_length / 4)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(25 * trace_length / 32)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(13 * trace_length / 16)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(27 * trace_length / 32)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(7 * trace_length / 8)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(29 * trace_length / 32)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(15 * trace_length / 16)) * domain143.
  [[maybe_unused]] const FieldElementT& domain145 = precomp_domains[145];
  // domain146 = (point^(trace_length / poseidon__row_ratio) - gen^(19 * trace_length / 32)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(5 * trace_length / 8)) *
  // (point^(trace_length / poseidon__row_ratio) - gen^(21 * trace_length / 32)) * domain145.
  [[maybe_unused]] const FieldElementT& domain146 = precomp_domains[146];
  // domain147 = point^(trace_length / poseidon__row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain147 = precomp_domains[147];
  // domain148 = point^(trace_length / range_check_builtin_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain148 = precomp_domains[148];
  // domain149 = point^(trace_length / range_check_units_row_ratio) - 1.
  [[maybe_unused]] const FieldElementT& domain149 = precomp_domains[149];
  // domain150 = point - gen^(trace_length - 16 * cpu_component_step).
  const FieldElementT& domain150 = (point) - (shifts[3510]);
  // domain151 = point - 1.
  const FieldElementT& domain151 = (point) - (FieldElementT::One());
  // domain152 = point - gen^(trace_length - memory_units_row_ratio).
  const FieldElementT& domain152 = (point) - (shifts[3511]);
  // domain153 = point - gen^(trace_length - range_check_units_row_ratio).
  const FieldElementT& domain153 = (point) - (shifts[3512]);
  // domain154 = point - gen^(trace_length - diluted_units_row_ratio).
  const FieldElementT& domain154 = (point) - (shifts[3513]);
  // domain155 = point - gen^(trace_length - pedersen_builtin_row_ratio).
  const FieldElementT& domain155 = (point) - (shifts[3514]);
  // domain156 = point - 1.
  const FieldElementT& domain156 = (point) - (FieldElementT::One());
  // domain157 = point - gen^(trace_length - range_check_builtin_row_ratio).
  const FieldElementT& domain157 = (point) - (shifts[3515]);
  // domain158 = point - 1.
  const FieldElementT& domain158 = (point) - (FieldElementT::One());
  // domain159 = point - gen^(trace_length - ecdsa_builtin_row_ratio).
  const FieldElementT& domain159 = (point) - (shifts[3516]);
  // domain160 = point - 1.
  const FieldElementT& domain160 = (point) - (FieldElementT::One());
  // domain161 = point - 1.
  const FieldElementT& domain161 = (point) - (FieldElementT::One());
  // domain162 = point - gen^(trace_length - bitwise__row_ratio).
  const FieldElementT& domain162 = (point) - (shifts[3517]);
  // domain163 = point - 1.
  const FieldElementT& domain163 = (point) - (FieldElementT::One());
  // domain164 = point - gen^(trace_length - ec_op_builtin_row_ratio).
  const FieldElementT& domain164 = (point) - (shifts[3518]);
  // domain165 = point - 1.
  const FieldElementT& domain165 = (point) - (FieldElementT::One());
  // domain166 = point - gen^(trace_length - keccak__row_ratio / 16).
  const FieldElementT& domain166 = (point) - (shifts[3519]);
  // domain167 = point - 1.
  const FieldElementT& domain167 = (point) - (FieldElementT::One());
  // domain168 = point - gen^(trace_length - poseidon__row_ratio / 2).
  const FieldElementT& domain168 = (point) - (shifts[3520]);

  ASSERT_VERIFIER(neighbors.size() == 755, "neighbors should contain 755 elements.");

  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr0 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr0Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr1 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr1Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr2 =
      neighbors[kMemPool_ValueColumnRowExpr2Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr3 =
      neighbors[kRangeCheck16PoolColumnRowExpr3Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr4 =
      neighbors[kRangeCheck16PoolColumnRowExpr4Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr5 =
      neighbors[kRangeCheck16PoolColumnRowExpr5Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr6 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr6Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr7 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr7Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr8 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr8Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr9 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr9Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr10 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr10Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr11 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr11Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr12 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr12Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr13 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr13Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr14 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr14Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr15 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr15Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr16 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr16Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr17 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr17Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr18 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr18Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr19 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr19Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr20 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr20Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr21 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr21Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr22 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr22Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr23 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr23Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr24 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr24Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr25 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr25Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr26 =
      neighbors[kMemPool_AddrColumnRowExpr26Neighbor];
  const FieldElementT& cpu__registers__fp_column_row_expr27 =
      neighbors[kCpu_Registers_FpColumnRowExpr27Neighbor];
  const FieldElementT& cpu__registers__ap_column_row_expr28 =
      neighbors[kCpu_Registers_ApColumnRowExpr28Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr29 =
      neighbors[kMemPool_AddrColumnRowExpr29Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr30 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr30Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr31 =
      neighbors[kMemPool_AddrColumnRowExpr31Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr32 =
      neighbors[kMemPool_AddrColumnRowExpr32Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr33 =
      neighbors[kMemPool_ValueColumnRowExpr33Neighbor];
  const FieldElementT& cpu__operands__ops_mul_column_row_expr34 =
      neighbors[kCpu_Operands_OpsMulColumnRowExpr34Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr35 =
      neighbors[kMemPool_ValueColumnRowExpr35Neighbor];
  const FieldElementT& cpu__operands__res_column_row_expr36 =
      neighbors[kCpu_Operands_ResColumnRowExpr36Neighbor];
  const FieldElementT& cpu__update_registers__update_pc__tmp0_column_row_expr37 =
      neighbors[kCpu_UpdateRegisters_UpdatePc_Tmp0ColumnRowExpr37Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr38 =
      neighbors[kMemPool_ValueColumnRowExpr38Neighbor];
  const FieldElementT& cpu__update_registers__update_pc__tmp1_column_row_expr39 =
      neighbors[kCpu_UpdateRegisters_UpdatePc_Tmp1ColumnRowExpr39Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr40 =
      neighbors[kMemPool_AddrColumnRowExpr40Neighbor];
  const FieldElementT& cpu__registers__ap_column_row_expr41 =
      neighbors[kCpu_Registers_ApColumnRowExpr41Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr42 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr42Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr43 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr43Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr44 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr44Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr45 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr45Neighbor];
  const FieldElementT& cpu__registers__fp_column_row_expr46 =
      neighbors[kCpu_Registers_FpColumnRowExpr46Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr47 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr47Neighbor];
  const FieldElementT& cpu__decode__opcode_range_check__column_column_row_expr48 =
      neighbors[kCpu_Decode_OpcodeRangeCheck_ColumnColumnRowExpr48Neighbor];
  const FieldElementT& memory__sorted__addr_column_row_expr49 =
      neighbors[kMemory_Sorted_AddrColumnRowExpr49Neighbor];
  const FieldElementT& memory__sorted__value_column_row_expr50 =
      neighbors[kMemory_Sorted_ValueColumnRowExpr50Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr51 =
      neighbors[kMemPool_AddrColumnRowExpr51Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr52 =
      neighbors[kMemPool_ValueColumnRowExpr52Neighbor];
  const FieldElementT& memory__sorted__addr_column_row_expr53 =
      neighbors[kMemory_Sorted_AddrColumnRowExpr53Neighbor];
  const FieldElementT& memory__sorted__value_column_row_expr54 =
      neighbors[kMemory_Sorted_ValueColumnRowExpr54Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr55 =
      neighbors[kMemPool_AddrColumnRowExpr55Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr56 =
      neighbors[kMemPool_ValueColumnRowExpr56Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr57 =
      neighbors[kMemPool_AddrColumnRowExpr57Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr58 =
      neighbors[kMemPool_ValueColumnRowExpr58Neighbor];
  const FieldElementT& range_check16__sorted_column_row_expr59 =
      neighbors[kRangeCheck16_SortedColumnRowExpr59Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr60 =
      neighbors[kRangeCheck16PoolColumnRowExpr60Neighbor];
  const FieldElementT& range_check16__sorted_column_row_expr61 =
      neighbors[kRangeCheck16_SortedColumnRowExpr61Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr62 =
      neighbors[kRangeCheck16PoolColumnRowExpr62Neighbor];
  const FieldElementT& diluted_check__permuted_values_column_row_expr63 =
      neighbors[kDilutedCheck_PermutedValuesColumnRowExpr63Neighbor];
  const FieldElementT& diluted_pool_column_row_expr64 =
      neighbors[kDilutedPoolColumnRowExpr64Neighbor];
  const FieldElementT& diluted_check__permuted_values_column_row_expr65 =
      neighbors[kDilutedCheck_PermutedValuesColumnRowExpr65Neighbor];
  const FieldElementT& diluted_pool_column_row_expr66 =
      neighbors[kDilutedPoolColumnRowExpr66Neighbor];
  const FieldElementT&
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr67 =
          neighbors[kPedersen_Hash0_EcSubsetSum_BitUnpacking_ProdOnes192ColumnRowExpr67Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr68 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr68Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr69 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr69Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr70 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr70Neighbor];
  const FieldElementT&
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr71 =
          neighbors[kPedersen_Hash0_EcSubsetSum_BitUnpacking_ProdOnes196ColumnRowExpr71Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr72 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr72Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr73 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr73Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr74 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr74Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr75 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr75Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr76 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr76Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_XColumnRowExpr77Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr78 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_YColumnRowExpr78Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr79 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_XColumnRowExpr79Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr80 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_YColumnRowExpr80Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__slope_column_row_expr81 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SlopeColumnRowExpr81Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr82 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_XColumnRowExpr82Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr83 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_YColumnRowExpr83Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr84 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_XColumnRowExpr84Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr85 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_YColumnRowExpr85Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr86 =
      neighbors[kMemPool_ValueColumnRowExpr86Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr87 =
      neighbors[kMemPool_AddrColumnRowExpr87Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr88 =
      neighbors[kMemPool_AddrColumnRowExpr88Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr89 =
      neighbors[kMemPool_AddrColumnRowExpr89Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__selector_column_row_expr90 =
      neighbors[kPedersen_Hash0_EcSubsetSum_SelectorColumnRowExpr90Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr91 =
      neighbors[kMemPool_ValueColumnRowExpr91Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr92 =
      neighbors[kMemPool_AddrColumnRowExpr92Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr93 =
      neighbors[kMemPool_ValueColumnRowExpr93Neighbor];
  const FieldElementT& pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr94 =
      neighbors[kPedersen_Hash0_EcSubsetSum_PartialSum_XColumnRowExpr94Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr95 =
      neighbors[kMemPool_ValueColumnRowExpr95Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr96 =
      neighbors[kRangeCheck16PoolColumnRowExpr96Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr97 =
      neighbors[kRangeCheck16PoolColumnRowExpr97Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr98 =
      neighbors[kRangeCheck16PoolColumnRowExpr98Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr99 =
      neighbors[kRangeCheck16PoolColumnRowExpr99Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr100 =
      neighbors[kRangeCheck16PoolColumnRowExpr100Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr101 =
      neighbors[kRangeCheck16PoolColumnRowExpr101Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr102 =
      neighbors[kRangeCheck16PoolColumnRowExpr102Neighbor];
  const FieldElementT& range_check16_pool_column_row_expr103 =
      neighbors[kRangeCheck16PoolColumnRowExpr103Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr104 =
      neighbors[kMemPool_AddrColumnRowExpr104Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr105 =
      neighbors[kMemPool_AddrColumnRowExpr105Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__x_column_row_expr106 =
      neighbors[kEcdsa_Signature0_KeyPoints_XColumnRowExpr106Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__y_column_row_expr107 =
      neighbors[kEcdsa_Signature0_KeyPoints_YColumnRowExpr107Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__x_column_row_expr108 =
      neighbors[kEcdsa_Signature0_KeyPoints_XColumnRowExpr108Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__y_column_row_expr109 =
      neighbors[kEcdsa_Signature0_KeyPoints_YColumnRowExpr109Neighbor];
  const FieldElementT& ecdsa__signature0__doubling_slope_column_row_expr110 =
      neighbors[kEcdsa_Signature0_DoublingSlopeColumnRowExpr110Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_generator__selector_column_row_expr111 =
      neighbors[kEcdsa_Signature0_ExponentiateGenerator_SelectorColumnRowExpr111Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_generator__selector_column_row_expr112 =
      neighbors[kEcdsa_Signature0_ExponentiateGenerator_SelectorColumnRowExpr112Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_XColumnRowExpr113Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr114 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_YColumnRowExpr114Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr115 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_XColumnRowExpr115Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr116 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_YColumnRowExpr116Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_generator__slope_column_row_expr117 =
      neighbors[kEcdsa_Signature0_ExponentiateGenerator_SlopeColumnRowExpr117Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_generator__x_diff_inv_column_row_expr118 =
      neighbors[kEcdsa_Signature0_ExponentiateGenerator_XDiffInvColumnRowExpr118Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__selector_column_row_expr119 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_SelectorColumnRowExpr119Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__selector_column_row_expr120 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_SelectorColumnRowExpr120Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_XColumnRowExpr121Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr122 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_YColumnRowExpr122Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr123 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_XColumnRowExpr123Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr124 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_YColumnRowExpr124Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__slope_column_row_expr125 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_SlopeColumnRowExpr125Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__x_diff_inv_column_row_expr126 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_XDiffInvColumnRowExpr126Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr127 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_XColumnRowExpr127Neighbor];
  const FieldElementT&
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr128 =
          neighbors[kEcdsa_Signature0_ExponentiateGenerator_PartialSum_YColumnRowExpr128Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr129 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_XColumnRowExpr129Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr130 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_YColumnRowExpr130Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__x_column_row_expr131 =
      neighbors[kEcdsa_Signature0_KeyPoints_XColumnRowExpr131Neighbor];
  const FieldElementT& ecdsa__signature0__key_points__y_column_row_expr132 =
      neighbors[kEcdsa_Signature0_KeyPoints_YColumnRowExpr132Neighbor];
  const FieldElementT& ecdsa__signature0__add_results_slope_column_row_expr133 =
      neighbors[kEcdsa_Signature0_AddResultsSlopeColumnRowExpr133Neighbor];
  const FieldElementT& ecdsa__signature0__add_results_inv_column_row_expr134 =
      neighbors[kEcdsa_Signature0_AddResultsInvColumnRowExpr134Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr135 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_XColumnRowExpr135Neighbor];
  const FieldElementT& ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr136 =
      neighbors[kEcdsa_Signature0_ExponentiateKey_PartialSum_YColumnRowExpr136Neighbor];
  const FieldElementT& ecdsa__signature0__extract_r_slope_column_row_expr137 =
      neighbors[kEcdsa_Signature0_ExtractRSlopeColumnRowExpr137Neighbor];
  const FieldElementT& ecdsa__signature0__extract_r_inv_column_row_expr138 =
      neighbors[kEcdsa_Signature0_ExtractRInvColumnRowExpr138Neighbor];
  const FieldElementT& ecdsa__signature0__z_inv_column_row_expr139 =
      neighbors[kEcdsa_Signature0_ZInvColumnRowExpr139Neighbor];
  const FieldElementT& ecdsa__signature0__r_w_inv_column_row_expr140 =
      neighbors[kEcdsa_Signature0_RWInvColumnRowExpr140Neighbor];
  const FieldElementT& ecdsa__signature0__q_x_squared_column_row_expr141 =
      neighbors[kEcdsa_Signature0_QXSquaredColumnRowExpr141Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr142 =
      neighbors[kMemPool_AddrColumnRowExpr142Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr143 =
      neighbors[kMemPool_AddrColumnRowExpr143Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr144 =
      neighbors[kMemPool_AddrColumnRowExpr144Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr145 =
      neighbors[kMemPool_ValueColumnRowExpr145Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr146 =
      neighbors[kMemPool_ValueColumnRowExpr146Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr147 =
      neighbors[kMemPool_AddrColumnRowExpr147Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr148 =
      neighbors[kMemPool_AddrColumnRowExpr148Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr149 =
      neighbors[kMemPool_AddrColumnRowExpr149Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr150 =
      neighbors[kMemPool_AddrColumnRowExpr150Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr151 =
      neighbors[kMemPool_AddrColumnRowExpr151Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr152 =
      neighbors[kMemPool_ValueColumnRowExpr152Neighbor];
  const FieldElementT& diluted_pool_column_row_expr153 =
      neighbors[kDilutedPoolColumnRowExpr153Neighbor];
  const FieldElementT& diluted_pool_column_row_expr154 =
      neighbors[kDilutedPoolColumnRowExpr154Neighbor];
  const FieldElementT& diluted_pool_column_row_expr155 =
      neighbors[kDilutedPoolColumnRowExpr155Neighbor];
  const FieldElementT& diluted_pool_column_row_expr156 =
      neighbors[kDilutedPoolColumnRowExpr156Neighbor];
  const FieldElementT& diluted_pool_column_row_expr157 =
      neighbors[kDilutedPoolColumnRowExpr157Neighbor];
  const FieldElementT& diluted_pool_column_row_expr158 =
      neighbors[kDilutedPoolColumnRowExpr158Neighbor];
  const FieldElementT& diluted_pool_column_row_expr159 =
      neighbors[kDilutedPoolColumnRowExpr159Neighbor];
  const FieldElementT& diluted_pool_column_row_expr160 =
      neighbors[kDilutedPoolColumnRowExpr160Neighbor];
  const FieldElementT& diluted_pool_column_row_expr161 =
      neighbors[kDilutedPoolColumnRowExpr161Neighbor];
  const FieldElementT& diluted_pool_column_row_expr162 =
      neighbors[kDilutedPoolColumnRowExpr162Neighbor];
  const FieldElementT& diluted_pool_column_row_expr163 =
      neighbors[kDilutedPoolColumnRowExpr163Neighbor];
  const FieldElementT& diluted_pool_column_row_expr164 =
      neighbors[kDilutedPoolColumnRowExpr164Neighbor];
  const FieldElementT& diluted_pool_column_row_expr165 =
      neighbors[kDilutedPoolColumnRowExpr165Neighbor];
  const FieldElementT& diluted_pool_column_row_expr166 =
      neighbors[kDilutedPoolColumnRowExpr166Neighbor];
  const FieldElementT& diluted_pool_column_row_expr167 =
      neighbors[kDilutedPoolColumnRowExpr167Neighbor];
  const FieldElementT& diluted_pool_column_row_expr168 =
      neighbors[kDilutedPoolColumnRowExpr168Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr169 =
      neighbors[kMemPool_ValueColumnRowExpr169Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr170 =
      neighbors[kMemPool_ValueColumnRowExpr170Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr171 =
      neighbors[kMemPool_ValueColumnRowExpr171Neighbor];
  const FieldElementT& diluted_pool_column_row_expr172 =
      neighbors[kDilutedPoolColumnRowExpr172Neighbor];
  const FieldElementT& diluted_pool_column_row_expr173 =
      neighbors[kDilutedPoolColumnRowExpr173Neighbor];
  const FieldElementT& diluted_pool_column_row_expr174 =
      neighbors[kDilutedPoolColumnRowExpr174Neighbor];
  const FieldElementT& diluted_pool_column_row_expr175 =
      neighbors[kDilutedPoolColumnRowExpr175Neighbor];
  const FieldElementT& diluted_pool_column_row_expr176 =
      neighbors[kDilutedPoolColumnRowExpr176Neighbor];
  const FieldElementT& diluted_pool_column_row_expr177 =
      neighbors[kDilutedPoolColumnRowExpr177Neighbor];
  const FieldElementT& diluted_pool_column_row_expr178 =
      neighbors[kDilutedPoolColumnRowExpr178Neighbor];
  const FieldElementT& diluted_pool_column_row_expr179 =
      neighbors[kDilutedPoolColumnRowExpr179Neighbor];
  const FieldElementT& diluted_pool_column_row_expr180 =
      neighbors[kDilutedPoolColumnRowExpr180Neighbor];
  const FieldElementT& diluted_pool_column_row_expr181 =
      neighbors[kDilutedPoolColumnRowExpr181Neighbor];
  const FieldElementT& diluted_pool_column_row_expr182 =
      neighbors[kDilutedPoolColumnRowExpr182Neighbor];
  const FieldElementT& diluted_pool_column_row_expr183 =
      neighbors[kDilutedPoolColumnRowExpr183Neighbor];
  const FieldElementT& diluted_pool_column_row_expr184 =
      neighbors[kDilutedPoolColumnRowExpr184Neighbor];
  const FieldElementT& diluted_pool_column_row_expr185 =
      neighbors[kDilutedPoolColumnRowExpr185Neighbor];
  const FieldElementT& diluted_pool_column_row_expr186 =
      neighbors[kDilutedPoolColumnRowExpr186Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr187 =
      neighbors[kMemPool_AddrColumnRowExpr187Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr188 =
      neighbors[kMemPool_AddrColumnRowExpr188Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr189 =
      neighbors[kMemPool_AddrColumnRowExpr189Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr190 =
      neighbors[kMemPool_AddrColumnRowExpr190Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr191 =
      neighbors[kMemPool_AddrColumnRowExpr191Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr192 =
      neighbors[kMemPool_AddrColumnRowExpr192Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr193 =
      neighbors[kMemPool_AddrColumnRowExpr193Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr194 =
      neighbors[kMemPool_AddrColumnRowExpr194Neighbor];
  const FieldElementT& ec_op__doubling_slope_column_row_expr195 =
      neighbors[kEcOp_DoublingSlopeColumnRowExpr195Neighbor];
  const FieldElementT& ec_op__doubled_points__x_column_row_expr196 =
      neighbors[kEcOp_DoubledPoints_XColumnRowExpr196Neighbor];
  const FieldElementT& ec_op__doubled_points__y_column_row_expr197 =
      neighbors[kEcOp_DoubledPoints_YColumnRowExpr197Neighbor];
  const FieldElementT& ec_op__doubled_points__x_column_row_expr198 =
      neighbors[kEcOp_DoubledPoints_XColumnRowExpr198Neighbor];
  const FieldElementT& ec_op__doubled_points__y_column_row_expr199 =
      neighbors[kEcOp_DoubledPoints_YColumnRowExpr199Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr200 =
      neighbors[kMemPool_ValueColumnRowExpr200Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr201 =
      neighbors[kMemPool_ValueColumnRowExpr201Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr202 =
      neighbors[kEcOp_EcSubsetSum_BitUnpacking_ProdOnes192ColumnRowExpr202Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr203 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr203Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr204 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr204Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr205 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr205Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr206 =
      neighbors[kEcOp_EcSubsetSum_BitUnpacking_ProdOnes196ColumnRowExpr206Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr207 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr207Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr208 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr208Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr209 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr209Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr210 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr210Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__selector_column_row_expr211 =
      neighbors[kEcOp_EcSubsetSum_SelectorColumnRowExpr211Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__x_column_row_expr212 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_XColumnRowExpr212Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__y_column_row_expr213 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_YColumnRowExpr213Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__x_column_row_expr214 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_XColumnRowExpr214Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__y_column_row_expr215 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_YColumnRowExpr215Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__slope_column_row_expr216 =
      neighbors[kEcOp_EcSubsetSum_SlopeColumnRowExpr216Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__x_diff_inv_column_row_expr217 =
      neighbors[kEcOp_EcSubsetSum_XDiffInvColumnRowExpr217Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr218 =
      neighbors[kMemPool_ValueColumnRowExpr218Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr219 =
      neighbors[kMemPool_ValueColumnRowExpr219Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr220 =
      neighbors[kMemPool_ValueColumnRowExpr220Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr221 =
      neighbors[kMemPool_ValueColumnRowExpr221Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__x_column_row_expr222 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_XColumnRowExpr222Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr223 =
      neighbors[kMemPool_ValueColumnRowExpr223Neighbor];
  const FieldElementT& ec_op__ec_subset_sum__partial_sum__y_column_row_expr224 =
      neighbors[kEcOp_EcSubsetSum_PartialSum_YColumnRowExpr224Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr225 =
      neighbors[kMemPool_AddrColumnRowExpr225Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr226 =
      neighbors[kMemPool_AddrColumnRowExpr226Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr227 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr227Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr228 =
      neighbors[kMemPool_ValueColumnRowExpr228Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr229 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr229Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr230 =
      neighbors[kMemPool_ValueColumnRowExpr230Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr231 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr231Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr232 =
      neighbors[kMemPool_ValueColumnRowExpr232Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr233 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr233Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr234 =
      neighbors[kMemPool_ValueColumnRowExpr234Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr235 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr235Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr236 =
      neighbors[kMemPool_ValueColumnRowExpr236Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr237 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr237Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr238 =
      neighbors[kMemPool_ValueColumnRowExpr238Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr239 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr239Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr240 =
      neighbors[kMemPool_ValueColumnRowExpr240Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr241 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr241Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr242 =
      neighbors[kMemPool_ValueColumnRowExpr242Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr243 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr243Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr244 =
      neighbors[kMemPool_ValueColumnRowExpr244Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr245 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr245Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr246 =
      neighbors[kMemPool_ValueColumnRowExpr246Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr247 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr247Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr248 =
      neighbors[kMemPool_ValueColumnRowExpr248Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr249 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr249Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr250 =
      neighbors[kMemPool_ValueColumnRowExpr250Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr251 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr251Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr252 =
      neighbors[kMemPool_ValueColumnRowExpr252Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr253 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr253Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr254 =
      neighbors[kMemPool_ValueColumnRowExpr254Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr255 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr255Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr256 =
      neighbors[kMemPool_ValueColumnRowExpr256Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr257 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr257Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr258 =
      neighbors[kMemPool_ValueColumnRowExpr258Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr259 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr259Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr260 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr260Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr261 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr261Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr262 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr262Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr263 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr263Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr264 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr264Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr265 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr265Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr266 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr266Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr267 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr267Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr268 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr268Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr269 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr269Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr270 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr270Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr271 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr271Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr272 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr272Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr273 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr273Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr274 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr274Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr275 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr275Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr276 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr276Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr277 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr277Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr278 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr278Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr279 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr279Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr280 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr280Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr281 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr281Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr282 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr282Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr283 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr283Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr284 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr284Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr285 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr285Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr286 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr286Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr287 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr287Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr288 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr288Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr289 =
      neighbors[kKeccak_Keccak_ParseToDiluted_ReshapedIntermediateColumnRowExpr289Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr290 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr290Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr291 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr291Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr292 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr292Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr293 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr293Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr294 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr294Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr295 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr295Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr296 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr296Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr297 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr297Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr298 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr298Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr299 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr299Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr300 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr300Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr301 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr301Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr302 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr302Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr303 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr303Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr304 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr304Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr305 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr305Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr306 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr306Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr307 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr307Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr308 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr308Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr309 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr309Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr310 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr310Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr311 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr311Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr312 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr312Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr313 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr313Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr314 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr314Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr315 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr315Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr316 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr316Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr317 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr317Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr318 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr318Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr319 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr319Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr320 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr320Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr321 =
      neighbors[kKeccak_Keccak_ParseToDiluted_FinalReshapedInputColumnRowExpr321Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr322 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr322Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr323 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr323Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr324 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr324Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr325 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr325Neighbor];
  const FieldElementT& diluted_pool_column_row_expr326 =
      neighbors[kDilutedPoolColumnRowExpr326Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr327 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr327Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr328 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr328Neighbor];
  const FieldElementT& diluted_pool_column_row_expr329 =
      neighbors[kDilutedPoolColumnRowExpr329Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr330 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr330Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr331 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr331Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr332 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr332Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr333 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr333Neighbor];
  const FieldElementT& diluted_pool_column_row_expr334 =
      neighbors[kDilutedPoolColumnRowExpr334Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr335 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr335Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr336 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr336Neighbor];
  const FieldElementT& diluted_pool_column_row_expr337 =
      neighbors[kDilutedPoolColumnRowExpr337Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr338 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr338Neighbor];
  const FieldElementT& keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr339 =
      neighbors[kKeccak_Keccak_ParseToDiluted_CumulativeSumColumnRowExpr339Neighbor];
  const FieldElementT& diluted_pool_column_row_expr340 =
      neighbors[kDilutedPoolColumnRowExpr340Neighbor];
  const FieldElementT& diluted_pool_column_row_expr341 =
      neighbors[kDilutedPoolColumnRowExpr341Neighbor];
  const FieldElementT& diluted_pool_column_row_expr342 =
      neighbors[kDilutedPoolColumnRowExpr342Neighbor];
  const FieldElementT& diluted_pool_column_row_expr343 =
      neighbors[kDilutedPoolColumnRowExpr343Neighbor];
  const FieldElementT& diluted_pool_column_row_expr344 =
      neighbors[kDilutedPoolColumnRowExpr344Neighbor];
  const FieldElementT& diluted_pool_column_row_expr345 =
      neighbors[kDilutedPoolColumnRowExpr345Neighbor];
  const FieldElementT& diluted_pool_column_row_expr346 =
      neighbors[kDilutedPoolColumnRowExpr346Neighbor];
  const FieldElementT& diluted_pool_column_row_expr347 =
      neighbors[kDilutedPoolColumnRowExpr347Neighbor];
  const FieldElementT& diluted_pool_column_row_expr348 =
      neighbors[kDilutedPoolColumnRowExpr348Neighbor];
  const FieldElementT& diluted_pool_column_row_expr349 =
      neighbors[kDilutedPoolColumnRowExpr349Neighbor];
  const FieldElementT& diluted_pool_column_row_expr350 =
      neighbors[kDilutedPoolColumnRowExpr350Neighbor];
  const FieldElementT& diluted_pool_column_row_expr351 =
      neighbors[kDilutedPoolColumnRowExpr351Neighbor];
  const FieldElementT& diluted_pool_column_row_expr352 =
      neighbors[kDilutedPoolColumnRowExpr352Neighbor];
  const FieldElementT& diluted_pool_column_row_expr353 =
      neighbors[kDilutedPoolColumnRowExpr353Neighbor];
  const FieldElementT& diluted_pool_column_row_expr354 =
      neighbors[kDilutedPoolColumnRowExpr354Neighbor];
  const FieldElementT& diluted_pool_column_row_expr355 =
      neighbors[kDilutedPoolColumnRowExpr355Neighbor];
  const FieldElementT& diluted_pool_column_row_expr356 =
      neighbors[kDilutedPoolColumnRowExpr356Neighbor];
  const FieldElementT& diluted_pool_column_row_expr357 =
      neighbors[kDilutedPoolColumnRowExpr357Neighbor];
  const FieldElementT& diluted_pool_column_row_expr358 =
      neighbors[kDilutedPoolColumnRowExpr358Neighbor];
  const FieldElementT& diluted_pool_column_row_expr359 =
      neighbors[kDilutedPoolColumnRowExpr359Neighbor];
  const FieldElementT& diluted_pool_column_row_expr360 =
      neighbors[kDilutedPoolColumnRowExpr360Neighbor];
  const FieldElementT& diluted_pool_column_row_expr361 =
      neighbors[kDilutedPoolColumnRowExpr361Neighbor];
  const FieldElementT& diluted_pool_column_row_expr362 =
      neighbors[kDilutedPoolColumnRowExpr362Neighbor];
  const FieldElementT& diluted_pool_column_row_expr363 =
      neighbors[kDilutedPoolColumnRowExpr363Neighbor];
  const FieldElementT& diluted_pool_column_row_expr364 =
      neighbors[kDilutedPoolColumnRowExpr364Neighbor];
  const FieldElementT& diluted_pool_column_row_expr365 =
      neighbors[kDilutedPoolColumnRowExpr365Neighbor];
  const FieldElementT& diluted_pool_column_row_expr366 =
      neighbors[kDilutedPoolColumnRowExpr366Neighbor];
  const FieldElementT& diluted_pool_column_row_expr367 =
      neighbors[kDilutedPoolColumnRowExpr367Neighbor];
  const FieldElementT& diluted_pool_column_row_expr368 =
      neighbors[kDilutedPoolColumnRowExpr368Neighbor];
  const FieldElementT& diluted_pool_column_row_expr369 =
      neighbors[kDilutedPoolColumnRowExpr369Neighbor];
  const FieldElementT& diluted_pool_column_row_expr370 =
      neighbors[kDilutedPoolColumnRowExpr370Neighbor];
  const FieldElementT& diluted_pool_column_row_expr371 =
      neighbors[kDilutedPoolColumnRowExpr371Neighbor];
  const FieldElementT& diluted_pool_column_row_expr372 =
      neighbors[kDilutedPoolColumnRowExpr372Neighbor];
  const FieldElementT& diluted_pool_column_row_expr373 =
      neighbors[kDilutedPoolColumnRowExpr373Neighbor];
  const FieldElementT& diluted_pool_column_row_expr374 =
      neighbors[kDilutedPoolColumnRowExpr374Neighbor];
  const FieldElementT& diluted_pool_column_row_expr375 =
      neighbors[kDilutedPoolColumnRowExpr375Neighbor];
  const FieldElementT& diluted_pool_column_row_expr376 =
      neighbors[kDilutedPoolColumnRowExpr376Neighbor];
  const FieldElementT& diluted_pool_column_row_expr377 =
      neighbors[kDilutedPoolColumnRowExpr377Neighbor];
  const FieldElementT& diluted_pool_column_row_expr378 =
      neighbors[kDilutedPoolColumnRowExpr378Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr379 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr379Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr380 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr380Neighbor];
  const FieldElementT& diluted_pool_column_row_expr381 =
      neighbors[kDilutedPoolColumnRowExpr381Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr382 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr382Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr383 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr383Neighbor];
  const FieldElementT& diluted_pool_column_row_expr384 =
      neighbors[kDilutedPoolColumnRowExpr384Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr385 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr385Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr386 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr386Neighbor];
  const FieldElementT& diluted_pool_column_row_expr387 =
      neighbors[kDilutedPoolColumnRowExpr387Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr388 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr388Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr389 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr389Neighbor];
  const FieldElementT& diluted_pool_column_row_expr390 =
      neighbors[kDilutedPoolColumnRowExpr390Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr391 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr391Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr392 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr392Neighbor];
  const FieldElementT& diluted_pool_column_row_expr393 =
      neighbors[kDilutedPoolColumnRowExpr393Neighbor];
  const FieldElementT& diluted_pool_column_row_expr394 =
      neighbors[kDilutedPoolColumnRowExpr394Neighbor];
  const FieldElementT& diluted_pool_column_row_expr395 =
      neighbors[kDilutedPoolColumnRowExpr395Neighbor];
  const FieldElementT& diluted_pool_column_row_expr396 =
      neighbors[kDilutedPoolColumnRowExpr396Neighbor];
  const FieldElementT& diluted_pool_column_row_expr397 =
      neighbors[kDilutedPoolColumnRowExpr397Neighbor];
  const FieldElementT& diluted_pool_column_row_expr398 =
      neighbors[kDilutedPoolColumnRowExpr398Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr399 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr399Neighbor];
  const FieldElementT& diluted_pool_column_row_expr400 =
      neighbors[kDilutedPoolColumnRowExpr400Neighbor];
  const FieldElementT& diluted_pool_column_row_expr401 =
      neighbors[kDilutedPoolColumnRowExpr401Neighbor];
  const FieldElementT& diluted_pool_column_row_expr402 =
      neighbors[kDilutedPoolColumnRowExpr402Neighbor];
  const FieldElementT& diluted_pool_column_row_expr403 =
      neighbors[kDilutedPoolColumnRowExpr403Neighbor];
  const FieldElementT& diluted_pool_column_row_expr404 =
      neighbors[kDilutedPoolColumnRowExpr404Neighbor];
  const FieldElementT& diluted_pool_column_row_expr405 =
      neighbors[kDilutedPoolColumnRowExpr405Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr406 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr406Neighbor];
  const FieldElementT& diluted_pool_column_row_expr407 =
      neighbors[kDilutedPoolColumnRowExpr407Neighbor];
  const FieldElementT& diluted_pool_column_row_expr408 =
      neighbors[kDilutedPoolColumnRowExpr408Neighbor];
  const FieldElementT& diluted_pool_column_row_expr409 =
      neighbors[kDilutedPoolColumnRowExpr409Neighbor];
  const FieldElementT& diluted_pool_column_row_expr410 =
      neighbors[kDilutedPoolColumnRowExpr410Neighbor];
  const FieldElementT& diluted_pool_column_row_expr411 =
      neighbors[kDilutedPoolColumnRowExpr411Neighbor];
  const FieldElementT& diluted_pool_column_row_expr412 =
      neighbors[kDilutedPoolColumnRowExpr412Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr413 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr413Neighbor];
  const FieldElementT& diluted_pool_column_row_expr414 =
      neighbors[kDilutedPoolColumnRowExpr414Neighbor];
  const FieldElementT& diluted_pool_column_row_expr415 =
      neighbors[kDilutedPoolColumnRowExpr415Neighbor];
  const FieldElementT& diluted_pool_column_row_expr416 =
      neighbors[kDilutedPoolColumnRowExpr416Neighbor];
  const FieldElementT& diluted_pool_column_row_expr417 =
      neighbors[kDilutedPoolColumnRowExpr417Neighbor];
  const FieldElementT& diluted_pool_column_row_expr418 =
      neighbors[kDilutedPoolColumnRowExpr418Neighbor];
  const FieldElementT& diluted_pool_column_row_expr419 =
      neighbors[kDilutedPoolColumnRowExpr419Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr420 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr420Neighbor];
  const FieldElementT& diluted_pool_column_row_expr421 =
      neighbors[kDilutedPoolColumnRowExpr421Neighbor];
  const FieldElementT& diluted_pool_column_row_expr422 =
      neighbors[kDilutedPoolColumnRowExpr422Neighbor];
  const FieldElementT& diluted_pool_column_row_expr423 =
      neighbors[kDilutedPoolColumnRowExpr423Neighbor];
  const FieldElementT& diluted_pool_column_row_expr424 =
      neighbors[kDilutedPoolColumnRowExpr424Neighbor];
  const FieldElementT& diluted_pool_column_row_expr425 =
      neighbors[kDilutedPoolColumnRowExpr425Neighbor];
  const FieldElementT& diluted_pool_column_row_expr426 =
      neighbors[kDilutedPoolColumnRowExpr426Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr427 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr427Neighbor];
  const FieldElementT& diluted_pool_column_row_expr428 =
      neighbors[kDilutedPoolColumnRowExpr428Neighbor];
  const FieldElementT& diluted_pool_column_row_expr429 =
      neighbors[kDilutedPoolColumnRowExpr429Neighbor];
  const FieldElementT& diluted_pool_column_row_expr430 =
      neighbors[kDilutedPoolColumnRowExpr430Neighbor];
  const FieldElementT& diluted_pool_column_row_expr431 =
      neighbors[kDilutedPoolColumnRowExpr431Neighbor];
  const FieldElementT& diluted_pool_column_row_expr432 =
      neighbors[kDilutedPoolColumnRowExpr432Neighbor];
  const FieldElementT& diluted_pool_column_row_expr433 =
      neighbors[kDilutedPoolColumnRowExpr433Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr434 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr434Neighbor];
  const FieldElementT& diluted_pool_column_row_expr435 =
      neighbors[kDilutedPoolColumnRowExpr435Neighbor];
  const FieldElementT& diluted_pool_column_row_expr436 =
      neighbors[kDilutedPoolColumnRowExpr436Neighbor];
  const FieldElementT& diluted_pool_column_row_expr437 =
      neighbors[kDilutedPoolColumnRowExpr437Neighbor];
  const FieldElementT& diluted_pool_column_row_expr438 =
      neighbors[kDilutedPoolColumnRowExpr438Neighbor];
  const FieldElementT& diluted_pool_column_row_expr439 =
      neighbors[kDilutedPoolColumnRowExpr439Neighbor];
  const FieldElementT& diluted_pool_column_row_expr440 =
      neighbors[kDilutedPoolColumnRowExpr440Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr441 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr441Neighbor];
  const FieldElementT& diluted_pool_column_row_expr442 =
      neighbors[kDilutedPoolColumnRowExpr442Neighbor];
  const FieldElementT& diluted_pool_column_row_expr443 =
      neighbors[kDilutedPoolColumnRowExpr443Neighbor];
  const FieldElementT& diluted_pool_column_row_expr444 =
      neighbors[kDilutedPoolColumnRowExpr444Neighbor];
  const FieldElementT& diluted_pool_column_row_expr445 =
      neighbors[kDilutedPoolColumnRowExpr445Neighbor];
  const FieldElementT& diluted_pool_column_row_expr446 =
      neighbors[kDilutedPoolColumnRowExpr446Neighbor];
  const FieldElementT& diluted_pool_column_row_expr447 =
      neighbors[kDilutedPoolColumnRowExpr447Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr448 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr448Neighbor];
  const FieldElementT& diluted_pool_column_row_expr449 =
      neighbors[kDilutedPoolColumnRowExpr449Neighbor];
  const FieldElementT& diluted_pool_column_row_expr450 =
      neighbors[kDilutedPoolColumnRowExpr450Neighbor];
  const FieldElementT& diluted_pool_column_row_expr451 =
      neighbors[kDilutedPoolColumnRowExpr451Neighbor];
  const FieldElementT& diluted_pool_column_row_expr452 =
      neighbors[kDilutedPoolColumnRowExpr452Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr453 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr453Neighbor];
  const FieldElementT& diluted_pool_column_row_expr454 =
      neighbors[kDilutedPoolColumnRowExpr454Neighbor];
  const FieldElementT& diluted_pool_column_row_expr455 =
      neighbors[kDilutedPoolColumnRowExpr455Neighbor];
  const FieldElementT& diluted_pool_column_row_expr456 =
      neighbors[kDilutedPoolColumnRowExpr456Neighbor];
  const FieldElementT& diluted_pool_column_row_expr457 =
      neighbors[kDilutedPoolColumnRowExpr457Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr458 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr458Neighbor];
  const FieldElementT& diluted_pool_column_row_expr459 =
      neighbors[kDilutedPoolColumnRowExpr459Neighbor];
  const FieldElementT& diluted_pool_column_row_expr460 =
      neighbors[kDilutedPoolColumnRowExpr460Neighbor];
  const FieldElementT& diluted_pool_column_row_expr461 =
      neighbors[kDilutedPoolColumnRowExpr461Neighbor];
  const FieldElementT& diluted_pool_column_row_expr462 =
      neighbors[kDilutedPoolColumnRowExpr462Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr463 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr463Neighbor];
  const FieldElementT& diluted_pool_column_row_expr464 =
      neighbors[kDilutedPoolColumnRowExpr464Neighbor];
  const FieldElementT& diluted_pool_column_row_expr465 =
      neighbors[kDilutedPoolColumnRowExpr465Neighbor];
  const FieldElementT& diluted_pool_column_row_expr466 =
      neighbors[kDilutedPoolColumnRowExpr466Neighbor];
  const FieldElementT& diluted_pool_column_row_expr467 =
      neighbors[kDilutedPoolColumnRowExpr467Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr468 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr468Neighbor];
  const FieldElementT& diluted_pool_column_row_expr469 =
      neighbors[kDilutedPoolColumnRowExpr469Neighbor];
  const FieldElementT& diluted_pool_column_row_expr470 =
      neighbors[kDilutedPoolColumnRowExpr470Neighbor];
  const FieldElementT& diluted_pool_column_row_expr471 =
      neighbors[kDilutedPoolColumnRowExpr471Neighbor];
  const FieldElementT& diluted_pool_column_row_expr472 =
      neighbors[kDilutedPoolColumnRowExpr472Neighbor];
  const FieldElementT& diluted_pool_column_row_expr473 =
      neighbors[kDilutedPoolColumnRowExpr473Neighbor];
  const FieldElementT& diluted_pool_column_row_expr474 =
      neighbors[kDilutedPoolColumnRowExpr474Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr475 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr475Neighbor];
  const FieldElementT& diluted_pool_column_row_expr476 =
      neighbors[kDilutedPoolColumnRowExpr476Neighbor];
  const FieldElementT& diluted_pool_column_row_expr477 =
      neighbors[kDilutedPoolColumnRowExpr477Neighbor];
  const FieldElementT& diluted_pool_column_row_expr478 =
      neighbors[kDilutedPoolColumnRowExpr478Neighbor];
  const FieldElementT& diluted_pool_column_row_expr479 =
      neighbors[kDilutedPoolColumnRowExpr479Neighbor];
  const FieldElementT& diluted_pool_column_row_expr480 =
      neighbors[kDilutedPoolColumnRowExpr480Neighbor];
  const FieldElementT& diluted_pool_column_row_expr481 =
      neighbors[kDilutedPoolColumnRowExpr481Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr482 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr482Neighbor];
  const FieldElementT& diluted_pool_column_row_expr483 =
      neighbors[kDilutedPoolColumnRowExpr483Neighbor];
  const FieldElementT& diluted_pool_column_row_expr484 =
      neighbors[kDilutedPoolColumnRowExpr484Neighbor];
  const FieldElementT& diluted_pool_column_row_expr485 =
      neighbors[kDilutedPoolColumnRowExpr485Neighbor];
  const FieldElementT& diluted_pool_column_row_expr486 =
      neighbors[kDilutedPoolColumnRowExpr486Neighbor];
  const FieldElementT& diluted_pool_column_row_expr487 =
      neighbors[kDilutedPoolColumnRowExpr487Neighbor];
  const FieldElementT& diluted_pool_column_row_expr488 =
      neighbors[kDilutedPoolColumnRowExpr488Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr489 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr489Neighbor];
  const FieldElementT& diluted_pool_column_row_expr490 =
      neighbors[kDilutedPoolColumnRowExpr490Neighbor];
  const FieldElementT& diluted_pool_column_row_expr491 =
      neighbors[kDilutedPoolColumnRowExpr491Neighbor];
  const FieldElementT& diluted_pool_column_row_expr492 =
      neighbors[kDilutedPoolColumnRowExpr492Neighbor];
  const FieldElementT& diluted_pool_column_row_expr493 =
      neighbors[kDilutedPoolColumnRowExpr493Neighbor];
  const FieldElementT& diluted_pool_column_row_expr494 =
      neighbors[kDilutedPoolColumnRowExpr494Neighbor];
  const FieldElementT& diluted_pool_column_row_expr495 =
      neighbors[kDilutedPoolColumnRowExpr495Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr496 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr496Neighbor];
  const FieldElementT& diluted_pool_column_row_expr497 =
      neighbors[kDilutedPoolColumnRowExpr497Neighbor];
  const FieldElementT& diluted_pool_column_row_expr498 =
      neighbors[kDilutedPoolColumnRowExpr498Neighbor];
  const FieldElementT& diluted_pool_column_row_expr499 =
      neighbors[kDilutedPoolColumnRowExpr499Neighbor];
  const FieldElementT& diluted_pool_column_row_expr500 =
      neighbors[kDilutedPoolColumnRowExpr500Neighbor];
  const FieldElementT& diluted_pool_column_row_expr501 =
      neighbors[kDilutedPoolColumnRowExpr501Neighbor];
  const FieldElementT& diluted_pool_column_row_expr502 =
      neighbors[kDilutedPoolColumnRowExpr502Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr503 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr503Neighbor];
  const FieldElementT& diluted_pool_column_row_expr504 =
      neighbors[kDilutedPoolColumnRowExpr504Neighbor];
  const FieldElementT& diluted_pool_column_row_expr505 =
      neighbors[kDilutedPoolColumnRowExpr505Neighbor];
  const FieldElementT& diluted_pool_column_row_expr506 =
      neighbors[kDilutedPoolColumnRowExpr506Neighbor];
  const FieldElementT& diluted_pool_column_row_expr507 =
      neighbors[kDilutedPoolColumnRowExpr507Neighbor];
  const FieldElementT& diluted_pool_column_row_expr508 =
      neighbors[kDilutedPoolColumnRowExpr508Neighbor];
  const FieldElementT& diluted_pool_column_row_expr509 =
      neighbors[kDilutedPoolColumnRowExpr509Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr510 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr510Neighbor];
  const FieldElementT& diluted_pool_column_row_expr511 =
      neighbors[kDilutedPoolColumnRowExpr511Neighbor];
  const FieldElementT& diluted_pool_column_row_expr512 =
      neighbors[kDilutedPoolColumnRowExpr512Neighbor];
  const FieldElementT& diluted_pool_column_row_expr513 =
      neighbors[kDilutedPoolColumnRowExpr513Neighbor];
  const FieldElementT& diluted_pool_column_row_expr514 =
      neighbors[kDilutedPoolColumnRowExpr514Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr515 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr515Neighbor];
  const FieldElementT& diluted_pool_column_row_expr516 =
      neighbors[kDilutedPoolColumnRowExpr516Neighbor];
  const FieldElementT& diluted_pool_column_row_expr517 =
      neighbors[kDilutedPoolColumnRowExpr517Neighbor];
  const FieldElementT& diluted_pool_column_row_expr518 =
      neighbors[kDilutedPoolColumnRowExpr518Neighbor];
  const FieldElementT& diluted_pool_column_row_expr519 =
      neighbors[kDilutedPoolColumnRowExpr519Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr520 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr520Neighbor];
  const FieldElementT& diluted_pool_column_row_expr521 =
      neighbors[kDilutedPoolColumnRowExpr521Neighbor];
  const FieldElementT& diluted_pool_column_row_expr522 =
      neighbors[kDilutedPoolColumnRowExpr522Neighbor];
  const FieldElementT& diluted_pool_column_row_expr523 =
      neighbors[kDilutedPoolColumnRowExpr523Neighbor];
  const FieldElementT& diluted_pool_column_row_expr524 =
      neighbors[kDilutedPoolColumnRowExpr524Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr525 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr525Neighbor];
  const FieldElementT& diluted_pool_column_row_expr526 =
      neighbors[kDilutedPoolColumnRowExpr526Neighbor];
  const FieldElementT& diluted_pool_column_row_expr527 =
      neighbors[kDilutedPoolColumnRowExpr527Neighbor];
  const FieldElementT& diluted_pool_column_row_expr528 =
      neighbors[kDilutedPoolColumnRowExpr528Neighbor];
  const FieldElementT& diluted_pool_column_row_expr529 =
      neighbors[kDilutedPoolColumnRowExpr529Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr530 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr530Neighbor];
  const FieldElementT& diluted_pool_column_row_expr531 =
      neighbors[kDilutedPoolColumnRowExpr531Neighbor];
  const FieldElementT& diluted_pool_column_row_expr532 =
      neighbors[kDilutedPoolColumnRowExpr532Neighbor];
  const FieldElementT& diluted_pool_column_row_expr533 =
      neighbors[kDilutedPoolColumnRowExpr533Neighbor];
  const FieldElementT& diluted_pool_column_row_expr534 =
      neighbors[kDilutedPoolColumnRowExpr534Neighbor];
  const FieldElementT& diluted_pool_column_row_expr535 =
      neighbors[kDilutedPoolColumnRowExpr535Neighbor];
  const FieldElementT& diluted_pool_column_row_expr536 =
      neighbors[kDilutedPoolColumnRowExpr536Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr537 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr537Neighbor];
  const FieldElementT& diluted_pool_column_row_expr538 =
      neighbors[kDilutedPoolColumnRowExpr538Neighbor];
  const FieldElementT& diluted_pool_column_row_expr539 =
      neighbors[kDilutedPoolColumnRowExpr539Neighbor];
  const FieldElementT& diluted_pool_column_row_expr540 =
      neighbors[kDilutedPoolColumnRowExpr540Neighbor];
  const FieldElementT& diluted_pool_column_row_expr541 =
      neighbors[kDilutedPoolColumnRowExpr541Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr542 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr542Neighbor];
  const FieldElementT& diluted_pool_column_row_expr543 =
      neighbors[kDilutedPoolColumnRowExpr543Neighbor];
  const FieldElementT& diluted_pool_column_row_expr544 =
      neighbors[kDilutedPoolColumnRowExpr544Neighbor];
  const FieldElementT& diluted_pool_column_row_expr545 =
      neighbors[kDilutedPoolColumnRowExpr545Neighbor];
  const FieldElementT& diluted_pool_column_row_expr546 =
      neighbors[kDilutedPoolColumnRowExpr546Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr547 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr547Neighbor];
  const FieldElementT& diluted_pool_column_row_expr548 =
      neighbors[kDilutedPoolColumnRowExpr548Neighbor];
  const FieldElementT& diluted_pool_column_row_expr549 =
      neighbors[kDilutedPoolColumnRowExpr549Neighbor];
  const FieldElementT& diluted_pool_column_row_expr550 =
      neighbors[kDilutedPoolColumnRowExpr550Neighbor];
  const FieldElementT& diluted_pool_column_row_expr551 =
      neighbors[kDilutedPoolColumnRowExpr551Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr552 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr552Neighbor];
  const FieldElementT& diluted_pool_column_row_expr553 =
      neighbors[kDilutedPoolColumnRowExpr553Neighbor];
  const FieldElementT& diluted_pool_column_row_expr554 =
      neighbors[kDilutedPoolColumnRowExpr554Neighbor];
  const FieldElementT& diluted_pool_column_row_expr555 =
      neighbors[kDilutedPoolColumnRowExpr555Neighbor];
  const FieldElementT& diluted_pool_column_row_expr556 =
      neighbors[kDilutedPoolColumnRowExpr556Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr557 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr557Neighbor];
  const FieldElementT& diluted_pool_column_row_expr558 =
      neighbors[kDilutedPoolColumnRowExpr558Neighbor];
  const FieldElementT& diluted_pool_column_row_expr559 =
      neighbors[kDilutedPoolColumnRowExpr559Neighbor];
  const FieldElementT& diluted_pool_column_row_expr560 =
      neighbors[kDilutedPoolColumnRowExpr560Neighbor];
  const FieldElementT& diluted_pool_column_row_expr561 =
      neighbors[kDilutedPoolColumnRowExpr561Neighbor];
  const FieldElementT& diluted_pool_column_row_expr562 =
      neighbors[kDilutedPoolColumnRowExpr562Neighbor];
  const FieldElementT& diluted_pool_column_row_expr563 =
      neighbors[kDilutedPoolColumnRowExpr563Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr564 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr564Neighbor];
  const FieldElementT& diluted_pool_column_row_expr565 =
      neighbors[kDilutedPoolColumnRowExpr565Neighbor];
  const FieldElementT& diluted_pool_column_row_expr566 =
      neighbors[kDilutedPoolColumnRowExpr566Neighbor];
  const FieldElementT& diluted_pool_column_row_expr567 =
      neighbors[kDilutedPoolColumnRowExpr567Neighbor];
  const FieldElementT& diluted_pool_column_row_expr568 =
      neighbors[kDilutedPoolColumnRowExpr568Neighbor];
  const FieldElementT& diluted_pool_column_row_expr569 =
      neighbors[kDilutedPoolColumnRowExpr569Neighbor];
  const FieldElementT& diluted_pool_column_row_expr570 =
      neighbors[kDilutedPoolColumnRowExpr570Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr571 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr571Neighbor];
  const FieldElementT& diluted_pool_column_row_expr572 =
      neighbors[kDilutedPoolColumnRowExpr572Neighbor];
  const FieldElementT& diluted_pool_column_row_expr573 =
      neighbors[kDilutedPoolColumnRowExpr573Neighbor];
  const FieldElementT& diluted_pool_column_row_expr574 =
      neighbors[kDilutedPoolColumnRowExpr574Neighbor];
  const FieldElementT& diluted_pool_column_row_expr575 =
      neighbors[kDilutedPoolColumnRowExpr575Neighbor];
  const FieldElementT& diluted_pool_column_row_expr576 =
      neighbors[kDilutedPoolColumnRowExpr576Neighbor];
  const FieldElementT& diluted_pool_column_row_expr577 =
      neighbors[kDilutedPoolColumnRowExpr577Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr578 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr578Neighbor];
  const FieldElementT& diluted_pool_column_row_expr579 =
      neighbors[kDilutedPoolColumnRowExpr579Neighbor];
  const FieldElementT& diluted_pool_column_row_expr580 =
      neighbors[kDilutedPoolColumnRowExpr580Neighbor];
  const FieldElementT& diluted_pool_column_row_expr581 =
      neighbors[kDilutedPoolColumnRowExpr581Neighbor];
  const FieldElementT& diluted_pool_column_row_expr582 =
      neighbors[kDilutedPoolColumnRowExpr582Neighbor];
  const FieldElementT& diluted_pool_column_row_expr583 =
      neighbors[kDilutedPoolColumnRowExpr583Neighbor];
  const FieldElementT& diluted_pool_column_row_expr584 =
      neighbors[kDilutedPoolColumnRowExpr584Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr585 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr585Neighbor];
  const FieldElementT& diluted_pool_column_row_expr586 =
      neighbors[kDilutedPoolColumnRowExpr586Neighbor];
  const FieldElementT& diluted_pool_column_row_expr587 =
      neighbors[kDilutedPoolColumnRowExpr587Neighbor];
  const FieldElementT& diluted_pool_column_row_expr588 =
      neighbors[kDilutedPoolColumnRowExpr588Neighbor];
  const FieldElementT& diluted_pool_column_row_expr589 =
      neighbors[kDilutedPoolColumnRowExpr589Neighbor];
  const FieldElementT& diluted_pool_column_row_expr590 =
      neighbors[kDilutedPoolColumnRowExpr590Neighbor];
  const FieldElementT& diluted_pool_column_row_expr591 =
      neighbors[kDilutedPoolColumnRowExpr591Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity1_column_row_expr592 =
      neighbors[kKeccak_Keccak_RotatedParity1ColumnRowExpr592Neighbor];
  const FieldElementT& diluted_pool_column_row_expr593 =
      neighbors[kDilutedPoolColumnRowExpr593Neighbor];
  const FieldElementT& diluted_pool_column_row_expr594 =
      neighbors[kDilutedPoolColumnRowExpr594Neighbor];
  const FieldElementT& diluted_pool_column_row_expr595 =
      neighbors[kDilutedPoolColumnRowExpr595Neighbor];
  const FieldElementT& diluted_pool_column_row_expr596 =
      neighbors[kDilutedPoolColumnRowExpr596Neighbor];
  const FieldElementT& diluted_pool_column_row_expr597 =
      neighbors[kDilutedPoolColumnRowExpr597Neighbor];
  const FieldElementT& diluted_pool_column_row_expr598 =
      neighbors[kDilutedPoolColumnRowExpr598Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr599 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr599Neighbor];
  const FieldElementT& diluted_pool_column_row_expr600 =
      neighbors[kDilutedPoolColumnRowExpr600Neighbor];
  const FieldElementT& diluted_pool_column_row_expr601 =
      neighbors[kDilutedPoolColumnRowExpr601Neighbor];
  const FieldElementT& diluted_pool_column_row_expr602 =
      neighbors[kDilutedPoolColumnRowExpr602Neighbor];
  const FieldElementT& diluted_pool_column_row_expr603 =
      neighbors[kDilutedPoolColumnRowExpr603Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr604 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr604Neighbor];
  const FieldElementT& diluted_pool_column_row_expr605 =
      neighbors[kDilutedPoolColumnRowExpr605Neighbor];
  const FieldElementT& diluted_pool_column_row_expr606 =
      neighbors[kDilutedPoolColumnRowExpr606Neighbor];
  const FieldElementT& diluted_pool_column_row_expr607 =
      neighbors[kDilutedPoolColumnRowExpr607Neighbor];
  const FieldElementT& diluted_pool_column_row_expr608 =
      neighbors[kDilutedPoolColumnRowExpr608Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr609 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr609Neighbor];
  const FieldElementT& diluted_pool_column_row_expr610 =
      neighbors[kDilutedPoolColumnRowExpr610Neighbor];
  const FieldElementT& diluted_pool_column_row_expr611 =
      neighbors[kDilutedPoolColumnRowExpr611Neighbor];
  const FieldElementT& diluted_pool_column_row_expr612 =
      neighbors[kDilutedPoolColumnRowExpr612Neighbor];
  const FieldElementT& diluted_pool_column_row_expr613 =
      neighbors[kDilutedPoolColumnRowExpr613Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr614 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr614Neighbor];
  const FieldElementT& diluted_pool_column_row_expr615 =
      neighbors[kDilutedPoolColumnRowExpr615Neighbor];
  const FieldElementT& diluted_pool_column_row_expr616 =
      neighbors[kDilutedPoolColumnRowExpr616Neighbor];
  const FieldElementT& diluted_pool_column_row_expr617 =
      neighbors[kDilutedPoolColumnRowExpr617Neighbor];
  const FieldElementT& diluted_pool_column_row_expr618 =
      neighbors[kDilutedPoolColumnRowExpr618Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity2_column_row_expr619 =
      neighbors[kKeccak_Keccak_RotatedParity2ColumnRowExpr619Neighbor];
  const FieldElementT& diluted_pool_column_row_expr620 =
      neighbors[kDilutedPoolColumnRowExpr620Neighbor];
  const FieldElementT& diluted_pool_column_row_expr621 =
      neighbors[kDilutedPoolColumnRowExpr621Neighbor];
  const FieldElementT& diluted_pool_column_row_expr622 =
      neighbors[kDilutedPoolColumnRowExpr622Neighbor];
  const FieldElementT& diluted_pool_column_row_expr623 =
      neighbors[kDilutedPoolColumnRowExpr623Neighbor];
  const FieldElementT& diluted_pool_column_row_expr624 =
      neighbors[kDilutedPoolColumnRowExpr624Neighbor];
  const FieldElementT& diluted_pool_column_row_expr625 =
      neighbors[kDilutedPoolColumnRowExpr625Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity3_column_row_expr626 =
      neighbors[kKeccak_Keccak_RotatedParity3ColumnRowExpr626Neighbor];
  const FieldElementT& diluted_pool_column_row_expr627 =
      neighbors[kDilutedPoolColumnRowExpr627Neighbor];
  const FieldElementT& diluted_pool_column_row_expr628 =
      neighbors[kDilutedPoolColumnRowExpr628Neighbor];
  const FieldElementT& diluted_pool_column_row_expr629 =
      neighbors[kDilutedPoolColumnRowExpr629Neighbor];
  const FieldElementT& diluted_pool_column_row_expr630 =
      neighbors[kDilutedPoolColumnRowExpr630Neighbor];
  const FieldElementT& diluted_pool_column_row_expr631 =
      neighbors[kDilutedPoolColumnRowExpr631Neighbor];
  const FieldElementT& diluted_pool_column_row_expr632 =
      neighbors[kDilutedPoolColumnRowExpr632Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity4_column_row_expr633 =
      neighbors[kKeccak_Keccak_RotatedParity4ColumnRowExpr633Neighbor];
  const FieldElementT& diluted_pool_column_row_expr634 =
      neighbors[kDilutedPoolColumnRowExpr634Neighbor];
  const FieldElementT& diluted_pool_column_row_expr635 =
      neighbors[kDilutedPoolColumnRowExpr635Neighbor];
  const FieldElementT& diluted_pool_column_row_expr636 =
      neighbors[kDilutedPoolColumnRowExpr636Neighbor];
  const FieldElementT& diluted_pool_column_row_expr637 =
      neighbors[kDilutedPoolColumnRowExpr637Neighbor];
  const FieldElementT& diluted_pool_column_row_expr638 =
      neighbors[kDilutedPoolColumnRowExpr638Neighbor];
  const FieldElementT& diluted_pool_column_row_expr639 =
      neighbors[kDilutedPoolColumnRowExpr639Neighbor];
  const FieldElementT& keccak__keccak__rotated_parity0_column_row_expr640 =
      neighbors[kKeccak_Keccak_RotatedParity0ColumnRowExpr640Neighbor];
  const FieldElementT& diluted_pool_column_row_expr641 =
      neighbors[kDilutedPoolColumnRowExpr641Neighbor];
  const FieldElementT& diluted_pool_column_row_expr642 =
      neighbors[kDilutedPoolColumnRowExpr642Neighbor];
  const FieldElementT& diluted_pool_column_row_expr643 =
      neighbors[kDilutedPoolColumnRowExpr643Neighbor];
  const FieldElementT& diluted_pool_column_row_expr644 =
      neighbors[kDilutedPoolColumnRowExpr644Neighbor];
  const FieldElementT& diluted_pool_column_row_expr645 =
      neighbors[kDilutedPoolColumnRowExpr645Neighbor];
  const FieldElementT& diluted_pool_column_row_expr646 =
      neighbors[kDilutedPoolColumnRowExpr646Neighbor];
  const FieldElementT& diluted_pool_column_row_expr647 =
      neighbors[kDilutedPoolColumnRowExpr647Neighbor];
  const FieldElementT& diluted_pool_column_row_expr648 =
      neighbors[kDilutedPoolColumnRowExpr648Neighbor];
  const FieldElementT& diluted_pool_column_row_expr649 =
      neighbors[kDilutedPoolColumnRowExpr649Neighbor];
  const FieldElementT& diluted_pool_column_row_expr650 =
      neighbors[kDilutedPoolColumnRowExpr650Neighbor];
  const FieldElementT& diluted_pool_column_row_expr651 =
      neighbors[kDilutedPoolColumnRowExpr651Neighbor];
  const FieldElementT& diluted_pool_column_row_expr652 =
      neighbors[kDilutedPoolColumnRowExpr652Neighbor];
  const FieldElementT& diluted_pool_column_row_expr653 =
      neighbors[kDilutedPoolColumnRowExpr653Neighbor];
  const FieldElementT& diluted_pool_column_row_expr654 =
      neighbors[kDilutedPoolColumnRowExpr654Neighbor];
  const FieldElementT& diluted_pool_column_row_expr655 =
      neighbors[kDilutedPoolColumnRowExpr655Neighbor];
  const FieldElementT& diluted_pool_column_row_expr656 =
      neighbors[kDilutedPoolColumnRowExpr656Neighbor];
  const FieldElementT& diluted_pool_column_row_expr657 =
      neighbors[kDilutedPoolColumnRowExpr657Neighbor];
  const FieldElementT& diluted_pool_column_row_expr658 =
      neighbors[kDilutedPoolColumnRowExpr658Neighbor];
  const FieldElementT& diluted_pool_column_row_expr659 =
      neighbors[kDilutedPoolColumnRowExpr659Neighbor];
  const FieldElementT& diluted_pool_column_row_expr660 =
      neighbors[kDilutedPoolColumnRowExpr660Neighbor];
  const FieldElementT& diluted_pool_column_row_expr661 =
      neighbors[kDilutedPoolColumnRowExpr661Neighbor];
  const FieldElementT& diluted_pool_column_row_expr662 =
      neighbors[kDilutedPoolColumnRowExpr662Neighbor];
  const FieldElementT& diluted_pool_column_row_expr663 =
      neighbors[kDilutedPoolColumnRowExpr663Neighbor];
  const FieldElementT& diluted_pool_column_row_expr664 =
      neighbors[kDilutedPoolColumnRowExpr664Neighbor];
  const FieldElementT& diluted_pool_column_row_expr665 =
      neighbors[kDilutedPoolColumnRowExpr665Neighbor];
  const FieldElementT& diluted_pool_column_row_expr666 =
      neighbors[kDilutedPoolColumnRowExpr666Neighbor];
  const FieldElementT& diluted_pool_column_row_expr667 =
      neighbors[kDilutedPoolColumnRowExpr667Neighbor];
  const FieldElementT& diluted_pool_column_row_expr668 =
      neighbors[kDilutedPoolColumnRowExpr668Neighbor];
  const FieldElementT& diluted_pool_column_row_expr669 =
      neighbors[kDilutedPoolColumnRowExpr669Neighbor];
  const FieldElementT& diluted_pool_column_row_expr670 =
      neighbors[kDilutedPoolColumnRowExpr670Neighbor];
  const FieldElementT& diluted_pool_column_row_expr671 =
      neighbors[kDilutedPoolColumnRowExpr671Neighbor];
  const FieldElementT& diluted_pool_column_row_expr672 =
      neighbors[kDilutedPoolColumnRowExpr672Neighbor];
  const FieldElementT& diluted_pool_column_row_expr673 =
      neighbors[kDilutedPoolColumnRowExpr673Neighbor];
  const FieldElementT& diluted_pool_column_row_expr674 =
      neighbors[kDilutedPoolColumnRowExpr674Neighbor];
  const FieldElementT& diluted_pool_column_row_expr675 =
      neighbors[kDilutedPoolColumnRowExpr675Neighbor];
  const FieldElementT& diluted_pool_column_row_expr676 =
      neighbors[kDilutedPoolColumnRowExpr676Neighbor];
  const FieldElementT& diluted_pool_column_row_expr677 =
      neighbors[kDilutedPoolColumnRowExpr677Neighbor];
  const FieldElementT& diluted_pool_column_row_expr678 =
      neighbors[kDilutedPoolColumnRowExpr678Neighbor];
  const FieldElementT& diluted_pool_column_row_expr679 =
      neighbors[kDilutedPoolColumnRowExpr679Neighbor];
  const FieldElementT& diluted_pool_column_row_expr680 =
      neighbors[kDilutedPoolColumnRowExpr680Neighbor];
  const FieldElementT& diluted_pool_column_row_expr681 =
      neighbors[kDilutedPoolColumnRowExpr681Neighbor];
  const FieldElementT& diluted_pool_column_row_expr682 =
      neighbors[kDilutedPoolColumnRowExpr682Neighbor];
  const FieldElementT& diluted_pool_column_row_expr683 =
      neighbors[kDilutedPoolColumnRowExpr683Neighbor];
  const FieldElementT& diluted_pool_column_row_expr684 =
      neighbors[kDilutedPoolColumnRowExpr684Neighbor];
  const FieldElementT& diluted_pool_column_row_expr685 =
      neighbors[kDilutedPoolColumnRowExpr685Neighbor];
  const FieldElementT& diluted_pool_column_row_expr686 =
      neighbors[kDilutedPoolColumnRowExpr686Neighbor];
  const FieldElementT& diluted_pool_column_row_expr687 =
      neighbors[kDilutedPoolColumnRowExpr687Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr688 =
      neighbors[kMemPool_AddrColumnRowExpr688Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr689 =
      neighbors[kMemPool_AddrColumnRowExpr689Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr690 =
      neighbors[kMemPool_AddrColumnRowExpr690Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr691 =
      neighbors[kMemPool_AddrColumnRowExpr691Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr692 =
      neighbors[kMemPool_AddrColumnRowExpr692Neighbor];
  const FieldElementT& mem_pool__addr_column_row_expr693 =
      neighbors[kMemPool_AddrColumnRowExpr693Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_squared_column_row_expr694 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0SquaredColumnRowExpr694Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_column_row_expr695 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0ColumnRowExpr695Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_squared_column_row_expr696 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1SquaredColumnRowExpr696Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_column_row_expr697 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1ColumnRowExpr697Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_squared_column_row_expr698 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2SquaredColumnRowExpr698Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_column_row_expr699 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2ColumnRowExpr699Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_squared_column_row_expr700 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0SquaredColumnRowExpr700Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr701 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr701Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr702 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr702Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr703 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr703Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr704 =
      neighbors[kMemPool_ValueColumnRowExpr704Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr705 =
      neighbors[kMemPool_ValueColumnRowExpr705Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr706 =
      neighbors[kMemPool_ValueColumnRowExpr706Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_column_row_expr707 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0ColumnRowExpr707Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_column_row_expr708 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1ColumnRowExpr708Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_column_row_expr709 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2ColumnRowExpr709Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr710 =
      neighbors[kMemPool_ValueColumnRowExpr710Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_column_row_expr711 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0ColumnRowExpr711Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_squared_column_row_expr712 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0SquaredColumnRowExpr712Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_column_row_expr713 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1ColumnRowExpr713Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_squared_column_row_expr714 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1SquaredColumnRowExpr714Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_column_row_expr715 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2ColumnRowExpr715Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_squared_column_row_expr716 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2SquaredColumnRowExpr716Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr717 =
      neighbors[kMemPool_ValueColumnRowExpr717Neighbor];
  const FieldElementT& mem_pool__value_column_row_expr718 =
      neighbors[kMemPool_ValueColumnRowExpr718Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr719 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr719Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr720 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr720Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr721 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr721Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr722 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr722Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr723 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr723Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_column_row_expr724 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0ColumnRowExpr724Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_squared_column_row_expr725 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0SquaredColumnRowExpr725Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_column_row_expr726 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1ColumnRowExpr726Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_squared_column_row_expr727 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1SquaredColumnRowExpr727Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_column_row_expr728 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2ColumnRowExpr728Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_squared_column_row_expr729 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2SquaredColumnRowExpr729Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr730 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr730Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr731 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr731Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_squared_column_row_expr732 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0SquaredColumnRowExpr732Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_column_row_expr733 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0ColumnRowExpr733Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state0_squared_column_row_expr734 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState0SquaredColumnRowExpr734Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr735 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr735Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr736 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr736Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr737 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr737Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state0_column_row_expr738 =
      neighbors[kPoseidon_Poseidon_FullRoundsState0ColumnRowExpr738Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr739 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr739Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr740 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr740Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr741 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr741Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr742 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr742Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_column_row_expr743 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1ColumnRowExpr743Neighbor];
  const FieldElementT& poseidon__poseidon__partial_rounds_state1_squared_column_row_expr744 =
      neighbors[kPoseidon_Poseidon_PartialRoundsState1SquaredColumnRowExpr744Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state1_column_row_expr745 =
      neighbors[kPoseidon_Poseidon_FullRoundsState1ColumnRowExpr745Neighbor];
  const FieldElementT& poseidon__poseidon__full_rounds_state2_column_row_expr746 =
      neighbors[kPoseidon_Poseidon_FullRoundsState2ColumnRowExpr746Neighbor];
  const FieldElementT& memory__multi_column_perm__perm__cum_prod0_column_row_expr747 =
      neighbors[kMemory_MultiColumnPerm_Perm_CumProd0ColumnRowExpr747Neighbor];
  const FieldElementT& memory__multi_column_perm__perm__cum_prod0_column_row_expr748 =
      neighbors[kMemory_MultiColumnPerm_Perm_CumProd0ColumnRowExpr748Neighbor];
  const FieldElementT& range_check16__perm__cum_prod0_column_row_expr749 =
      neighbors[kRangeCheck16_Perm_CumProd0ColumnRowExpr749Neighbor];
  const FieldElementT& range_check16__perm__cum_prod0_column_row_expr750 =
      neighbors[kRangeCheck16_Perm_CumProd0ColumnRowExpr750Neighbor];
  const FieldElementT& diluted_check__permutation__cum_prod0_column_row_expr751 =
      neighbors[kDilutedCheck_Permutation_CumProd0ColumnRowExpr751Neighbor];
  const FieldElementT& diluted_check__permutation__cum_prod0_column_row_expr752 =
      neighbors[kDilutedCheck_Permutation_CumProd0ColumnRowExpr752Neighbor];
  const FieldElementT& diluted_check__cumulative_value_column_row_expr753 =
      neighbors[kDilutedCheck_CumulativeValueColumnRowExpr753Neighbor];
  const FieldElementT& diluted_check__cumulative_value_column_row_expr754 =
      neighbors[kDilutedCheck_CumulativeValueColumnRowExpr754Neighbor];

  ASSERT_VERIFIER(periodic_columns.size() == 16, "periodic_columns should contain 16 elements.");
  const FieldElementT& pedersen__points__x = periodic_columns[kPedersenPointsXPeriodicColumn];
  const FieldElementT& pedersen__points__y = periodic_columns[kPedersenPointsYPeriodicColumn];
  const FieldElementT& ecdsa__generator_points__x =
      periodic_columns[kEcdsaGeneratorPointsXPeriodicColumn];
  const FieldElementT& ecdsa__generator_points__y =
      periodic_columns[kEcdsaGeneratorPointsYPeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key0 =
      periodic_columns[kKeccakKeccakKeccakRoundKey0PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key1 =
      periodic_columns[kKeccakKeccakKeccakRoundKey1PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key3 =
      periodic_columns[kKeccakKeccakKeccakRoundKey3PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key7 =
      periodic_columns[kKeccakKeccakKeccakRoundKey7PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key15 =
      periodic_columns[kKeccakKeccakKeccakRoundKey15PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key31 =
      periodic_columns[kKeccakKeccakKeccakRoundKey31PeriodicColumn];
  const FieldElementT& keccak__keccak__keccak_round_key63 =
      periodic_columns[kKeccakKeccakKeccakRoundKey63PeriodicColumn];
  const FieldElementT& poseidon__poseidon__full_round_key0 =
      periodic_columns[kPoseidonPoseidonFullRoundKey0PeriodicColumn];
  const FieldElementT& poseidon__poseidon__full_round_key1 =
      periodic_columns[kPoseidonPoseidonFullRoundKey1PeriodicColumn];
  const FieldElementT& poseidon__poseidon__full_round_key2 =
      periodic_columns[kPoseidonPoseidonFullRoundKey2PeriodicColumn];
  const FieldElementT& poseidon__poseidon__partial_round_key0 =
      periodic_columns[kPoseidonPoseidonPartialRoundKey0PeriodicColumn];
  const FieldElementT& poseidon__poseidon__partial_round_key1 =
      periodic_columns[kPoseidonPoseidonPartialRoundKey1PeriodicColumn];

  const FieldElementT cpu__decode__opcode_range_check__bit_0 =
      (cpu__decode__opcode_range_check__column_column_row_expr0) -
      ((cpu__decode__opcode_range_check__column_column_row_expr1) +
       (cpu__decode__opcode_range_check__column_column_row_expr1));
  const FieldElementT cpu__decode__opcode_range_check__bit_2 =
      (cpu__decode__opcode_range_check__column_column_row_expr6) -
      ((cpu__decode__opcode_range_check__column_column_row_expr7) +
       (cpu__decode__opcode_range_check__column_column_row_expr7));
  const FieldElementT cpu__decode__opcode_range_check__bit_4 =
      (cpu__decode__opcode_range_check__column_column_row_expr8) -
      ((cpu__decode__opcode_range_check__column_column_row_expr9) +
       (cpu__decode__opcode_range_check__column_column_row_expr9));
  const FieldElementT cpu__decode__opcode_range_check__bit_3 =
      (cpu__decode__opcode_range_check__column_column_row_expr10) -
      ((cpu__decode__opcode_range_check__column_column_row_expr11) +
       (cpu__decode__opcode_range_check__column_column_row_expr11));
  const FieldElementT cpu__decode__flag_op1_base_op0_0 =
      (FieldElementT::One()) -
      (((cpu__decode__opcode_range_check__bit_2) + (cpu__decode__opcode_range_check__bit_4)) +
       (cpu__decode__opcode_range_check__bit_3));
  const FieldElementT cpu__decode__opcode_range_check__bit_5 =
      (cpu__decode__opcode_range_check__column_column_row_expr12) -
      ((cpu__decode__opcode_range_check__column_column_row_expr13) +
       (cpu__decode__opcode_range_check__column_column_row_expr13));
  const FieldElementT cpu__decode__opcode_range_check__bit_6 =
      (cpu__decode__opcode_range_check__column_column_row_expr14) -
      ((cpu__decode__opcode_range_check__column_column_row_expr15) +
       (cpu__decode__opcode_range_check__column_column_row_expr15));
  const FieldElementT cpu__decode__opcode_range_check__bit_9 =
      (cpu__decode__opcode_range_check__column_column_row_expr16) -
      ((cpu__decode__opcode_range_check__column_column_row_expr17) +
       (cpu__decode__opcode_range_check__column_column_row_expr17));
  const FieldElementT cpu__decode__flag_res_op1_0 =
      (FieldElementT::One()) -
      (((cpu__decode__opcode_range_check__bit_5) + (cpu__decode__opcode_range_check__bit_6)) +
       (cpu__decode__opcode_range_check__bit_9));
  const FieldElementT cpu__decode__opcode_range_check__bit_7 =
      (cpu__decode__opcode_range_check__column_column_row_expr18) -
      ((cpu__decode__opcode_range_check__column_column_row_expr19) +
       (cpu__decode__opcode_range_check__column_column_row_expr19));
  const FieldElementT cpu__decode__opcode_range_check__bit_8 =
      (cpu__decode__opcode_range_check__column_column_row_expr20) -
      ((cpu__decode__opcode_range_check__column_column_row_expr21) +
       (cpu__decode__opcode_range_check__column_column_row_expr21));
  const FieldElementT cpu__decode__flag_pc_update_regular_0 =
      (FieldElementT::One()) -
      (((cpu__decode__opcode_range_check__bit_7) + (cpu__decode__opcode_range_check__bit_8)) +
       (cpu__decode__opcode_range_check__bit_9));
  const FieldElementT cpu__decode__opcode_range_check__bit_12 =
      (cpu__decode__opcode_range_check__column_column_row_expr22) -
      ((cpu__decode__opcode_range_check__column_column_row_expr23) +
       (cpu__decode__opcode_range_check__column_column_row_expr23));
  const FieldElementT cpu__decode__opcode_range_check__bit_13 =
      (cpu__decode__opcode_range_check__column_column_row_expr24) -
      ((cpu__decode__opcode_range_check__column_column_row_expr25) +
       (cpu__decode__opcode_range_check__column_column_row_expr25));
  const FieldElementT cpu__decode__fp_update_regular_0 =
      (FieldElementT::One()) -
      ((cpu__decode__opcode_range_check__bit_12) + (cpu__decode__opcode_range_check__bit_13));
  const FieldElementT cpu__decode__opcode_range_check__bit_1 =
      (cpu__decode__opcode_range_check__column_column_row_expr1) -
      ((cpu__decode__opcode_range_check__column_column_row_expr30) +
       (cpu__decode__opcode_range_check__column_column_row_expr30));
  const FieldElementT npc_reg_0 =
      ((mem_pool__addr_column_row_expr32) + (cpu__decode__opcode_range_check__bit_2)) +
      (FieldElementT::One());
  const FieldElementT cpu__decode__opcode_range_check__bit_10 =
      (cpu__decode__opcode_range_check__column_column_row_expr42) -
      ((cpu__decode__opcode_range_check__column_column_row_expr43) +
       (cpu__decode__opcode_range_check__column_column_row_expr43));
  const FieldElementT cpu__decode__opcode_range_check__bit_11 =
      (cpu__decode__opcode_range_check__column_column_row_expr44) -
      ((cpu__decode__opcode_range_check__column_column_row_expr45) +
       (cpu__decode__opcode_range_check__column_column_row_expr45));
  const FieldElementT cpu__decode__opcode_range_check__bit_14 =
      (cpu__decode__opcode_range_check__column_column_row_expr47) -
      ((cpu__decode__opcode_range_check__column_column_row_expr48) +
       (cpu__decode__opcode_range_check__column_column_row_expr48));
  const FieldElementT memory__address_diff_0 =
      (memory__sorted__addr_column_row_expr53) - (memory__sorted__addr_column_row_expr49);
  const FieldElementT range_check16__diff_0 =
      (range_check16__sorted_column_row_expr61) - (range_check16__sorted_column_row_expr59);
  const FieldElementT pedersen__hash0__ec_subset_sum__bit_0 =
      (pedersen__hash0__ec_subset_sum__selector_column_row_expr68) -
      ((pedersen__hash0__ec_subset_sum__selector_column_row_expr69) +
       (pedersen__hash0__ec_subset_sum__selector_column_row_expr69));
  const FieldElementT pedersen__hash0__ec_subset_sum__bit_neg_0 =
      (FieldElementT::One()) - (pedersen__hash0__ec_subset_sum__bit_0);
  const FieldElementT range_check_builtin__value0_0 = range_check16_pool_column_row_expr96;
  const FieldElementT range_check_builtin__value1_0 =
      ((range_check_builtin__value0_0) * (offset_size_)) + (range_check16_pool_column_row_expr97);
  const FieldElementT range_check_builtin__value2_0 =
      ((range_check_builtin__value1_0) * (offset_size_)) + (range_check16_pool_column_row_expr98);
  const FieldElementT range_check_builtin__value3_0 =
      ((range_check_builtin__value2_0) * (offset_size_)) + (range_check16_pool_column_row_expr99);
  const FieldElementT range_check_builtin__value4_0 =
      ((range_check_builtin__value3_0) * (offset_size_)) + (range_check16_pool_column_row_expr100);
  const FieldElementT range_check_builtin__value5_0 =
      ((range_check_builtin__value4_0) * (offset_size_)) + (range_check16_pool_column_row_expr101);
  const FieldElementT range_check_builtin__value6_0 =
      ((range_check_builtin__value5_0) * (offset_size_)) + (range_check16_pool_column_row_expr102);
  const FieldElementT range_check_builtin__value7_0 =
      ((range_check_builtin__value6_0) * (offset_size_)) + (range_check16_pool_column_row_expr103);
  const FieldElementT ecdsa__signature0__doubling_key__x_squared =
      (ecdsa__signature0__key_points__x_column_row_expr106) *
      (ecdsa__signature0__key_points__x_column_row_expr106);
  const FieldElementT ecdsa__signature0__exponentiate_generator__bit_0 =
      (ecdsa__signature0__exponentiate_generator__selector_column_row_expr111) -
      ((ecdsa__signature0__exponentiate_generator__selector_column_row_expr112) +
       (ecdsa__signature0__exponentiate_generator__selector_column_row_expr112));
  const FieldElementT ecdsa__signature0__exponentiate_generator__bit_neg_0 =
      (FieldElementT::One()) - (ecdsa__signature0__exponentiate_generator__bit_0);
  const FieldElementT ecdsa__signature0__exponentiate_key__bit_0 =
      (ecdsa__signature0__exponentiate_key__selector_column_row_expr119) -
      ((ecdsa__signature0__exponentiate_key__selector_column_row_expr120) +
       (ecdsa__signature0__exponentiate_key__selector_column_row_expr120));
  const FieldElementT ecdsa__signature0__exponentiate_key__bit_neg_0 =
      (FieldElementT::One()) - (ecdsa__signature0__exponentiate_key__bit_0);
  const FieldElementT bitwise__sum_var_0_0 =
      (((((((diluted_pool_column_row_expr153) +
            ((diluted_pool_column_row_expr154) * (FieldElementT::ConstexprFromBigInt(0x2_Z)))) +
           ((diluted_pool_column_row_expr155) * (FieldElementT::ConstexprFromBigInt(0x4_Z)))) +
          ((diluted_pool_column_row_expr156) * (FieldElementT::ConstexprFromBigInt(0x8_Z)))) +
         ((diluted_pool_column_row_expr157) *
          (FieldElementT::ConstexprFromBigInt(0x10000000000000000_Z)))) +
        ((diluted_pool_column_row_expr158) *
         (FieldElementT::ConstexprFromBigInt(0x20000000000000000_Z)))) +
       ((diluted_pool_column_row_expr159) *
        (FieldElementT::ConstexprFromBigInt(0x40000000000000000_Z)))) +
      ((diluted_pool_column_row_expr160) *
       (FieldElementT::ConstexprFromBigInt(0x80000000000000000_Z)));
  const FieldElementT bitwise__sum_var_8_0 =
      ((((((((diluted_pool_column_row_expr161) *
             (FieldElementT::ConstexprFromBigInt(0x100000000000000000000000000000000_Z))) +
            ((diluted_pool_column_row_expr162) *
             (FieldElementT::ConstexprFromBigInt(0x200000000000000000000000000000000_Z)))) +
           ((diluted_pool_column_row_expr163) *
            (FieldElementT::ConstexprFromBigInt(0x400000000000000000000000000000000_Z)))) +
          ((diluted_pool_column_row_expr164) *
           (FieldElementT::ConstexprFromBigInt(0x800000000000000000000000000000000_Z)))) +
         ((diluted_pool_column_row_expr165) *
          (FieldElementT::ConstexprFromBigInt(
              0x1000000000000000000000000000000000000000000000000_Z)))) +
        ((diluted_pool_column_row_expr166) *
         (FieldElementT::ConstexprFromBigInt(
             0x2000000000000000000000000000000000000000000000000_Z)))) +
       ((diluted_pool_column_row_expr167) *
        (FieldElementT::ConstexprFromBigInt(
            0x4000000000000000000000000000000000000000000000000_Z)))) +
      ((diluted_pool_column_row_expr168) *
       (FieldElementT::ConstexprFromBigInt(0x8000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT ec_op__doubling_q__x_squared_0 =
      (ec_op__doubled_points__x_column_row_expr196) * (ec_op__doubled_points__x_column_row_expr196);
  const FieldElementT ec_op__ec_subset_sum__bit_0 =
      (ec_op__ec_subset_sum__selector_column_row_expr203) -
      ((ec_op__ec_subset_sum__selector_column_row_expr204) +
       (ec_op__ec_subset_sum__selector_column_row_expr204));
  const FieldElementT ec_op__ec_subset_sum__bit_neg_0 =
      (FieldElementT::One()) - (ec_op__ec_subset_sum__bit_0);
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances0_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr291) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr292) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances0_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr293) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr294) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances1_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr292) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr295) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances1_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr294) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr297) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances2_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr295) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr299) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances2_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr297) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr301) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances3_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr299) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr303) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances3_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr301) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr305) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances4_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr303) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr307) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances4_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr305) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr309) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances5_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr307) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr311) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances5_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr309) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr313) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances6_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr311) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr315) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances6_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr313) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr317) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances7_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr315) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr290) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__sum_words_over_instances7_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr317) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr320) *
       (FieldElementT::ConstexprFromBigInt(
           0x100000000000000000000000000000000000000000000000000_Z)));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted1_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr322) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr323) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr323));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted1_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr324) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr325) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr325));
  const FieldElementT keccak__keccak__parse_to_diluted__bit_other1_0 =
      (keccak__keccak__parse_to_diluted__partial_diluted1_2) -
      ((FieldElementT::ConstexprFromBigInt(0x10_Z)) *
       (keccak__keccak__parse_to_diluted__partial_diluted1_0));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted1_30 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr327) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr328) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr328));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted1_31 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr330) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr331) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr331));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted0_0 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr291) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr332) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr332));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted0_2 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr293) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr333) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr333));
  const FieldElementT keccak__keccak__parse_to_diluted__bit_other0_0 =
      (keccak__keccak__parse_to_diluted__partial_diluted0_2) -
      ((FieldElementT::ConstexprFromBigInt(0x10_Z)) *
       (keccak__keccak__parse_to_diluted__partial_diluted0_0));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted0_30 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr335) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr336) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr336));
  const FieldElementT keccak__keccak__parse_to_diluted__partial_diluted0_31 =
      (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr338) -
      ((keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr339) +
       (keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr339));
  const FieldElementT keccak__keccak__sum_parities0_0 =
      (diluted_pool_column_row_expr371) + (keccak__keccak__rotated_parity1_column_row_expr383);
  const FieldElementT keccak__keccak__sum_parities1_0 =
      (diluted_pool_column_row_expr340) + (keccak__keccak__rotated_parity2_column_row_expr386);
  const FieldElementT keccak__keccak__sum_parities1_64512 =
      (diluted_pool_column_row_expr381) + (keccak__keccak__rotated_parity2_column_row_expr399);
  const FieldElementT keccak__keccak__sum_parities2_0 =
      (diluted_pool_column_row_expr347) + (keccak__keccak__rotated_parity3_column_row_expr389);
  const FieldElementT keccak__keccak__sum_parities2_2048 =
      (diluted_pool_column_row_expr405) + (keccak__keccak__rotated_parity3_column_row_expr406);
  const FieldElementT keccak__keccak__sum_parities3_0 =
      (diluted_pool_column_row_expr355) + (keccak__keccak__rotated_parity4_column_row_expr392);
  const FieldElementT keccak__keccak__sum_parities3_36864 =
      (diluted_pool_column_row_expr412) + (keccak__keccak__rotated_parity4_column_row_expr413);
  const FieldElementT keccak__keccak__sum_parities4_0 =
      (diluted_pool_column_row_expr363) + (keccak__keccak__rotated_parity0_column_row_expr380);
  const FieldElementT keccak__keccak__sum_parities4_37888 =
      (diluted_pool_column_row_expr419) + (keccak__keccak__rotated_parity0_column_row_expr420);
  const FieldElementT keccak__keccak__sum_parities0_28672 =
      (diluted_pool_column_row_expr426) + (keccak__keccak__rotated_parity1_column_row_expr427);
  const FieldElementT keccak__keccak__sum_parities1_20480 =
      (diluted_pool_column_row_expr433) + (keccak__keccak__rotated_parity2_column_row_expr434);
  const FieldElementT keccak__keccak__sum_parities2_59392 =
      (diluted_pool_column_row_expr440) + (keccak__keccak__rotated_parity3_column_row_expr441);
  const FieldElementT keccak__keccak__sum_parities3_8 =
      (diluted_pool_column_row_expr447) + (keccak__keccak__rotated_parity4_column_row_expr448);
  const FieldElementT keccak__keccak__sum_parities3_16 =
      (diluted_pool_column_row_expr452) + (keccak__keccak__rotated_parity4_column_row_expr453);
  const FieldElementT keccak__keccak__sum_parities3_9216 =
      (diluted_pool_column_row_expr457) + (keccak__keccak__rotated_parity4_column_row_expr458);
  const FieldElementT keccak__keccak__sum_parities3_9224 =
      (diluted_pool_column_row_expr462) + (keccak__keccak__rotated_parity4_column_row_expr463);
  const FieldElementT keccak__keccak__sum_parities3_9232 =
      (diluted_pool_column_row_expr467) + (keccak__keccak__rotated_parity4_column_row_expr468);
  const FieldElementT keccak__keccak__sum_parities4_45056 =
      (diluted_pool_column_row_expr474) + (keccak__keccak__rotated_parity0_column_row_expr475);
  const FieldElementT keccak__keccak__sum_parities0_62464 =
      (diluted_pool_column_row_expr481) + (keccak__keccak__rotated_parity1_column_row_expr482);
  const FieldElementT keccak__keccak__sum_parities1_55296 =
      (diluted_pool_column_row_expr488) + (keccak__keccak__rotated_parity2_column_row_expr489);
  const FieldElementT keccak__keccak__sum_parities2_21504 =
      (diluted_pool_column_row_expr495) + (keccak__keccak__rotated_parity3_column_row_expr496);
  const FieldElementT keccak__keccak__sum_parities3_39936 =
      (diluted_pool_column_row_expr502) + (keccak__keccak__rotated_parity4_column_row_expr503);
  const FieldElementT keccak__keccak__sum_parities4_8 =
      (diluted_pool_column_row_expr509) + (keccak__keccak__rotated_parity0_column_row_expr510);
  const FieldElementT keccak__keccak__sum_parities4_16 =
      (diluted_pool_column_row_expr514) + (keccak__keccak__rotated_parity0_column_row_expr515);
  const FieldElementT keccak__keccak__sum_parities4_25600 =
      (diluted_pool_column_row_expr519) + (keccak__keccak__rotated_parity0_column_row_expr520);
  const FieldElementT keccak__keccak__sum_parities4_25608 =
      (diluted_pool_column_row_expr524) + (keccak__keccak__rotated_parity0_column_row_expr525);
  const FieldElementT keccak__keccak__sum_parities4_25616 =
      (diluted_pool_column_row_expr529) + (keccak__keccak__rotated_parity0_column_row_expr530);
  const FieldElementT keccak__keccak__sum_parities0_8 =
      (diluted_pool_column_row_expr536) + (keccak__keccak__rotated_parity1_column_row_expr537);
  const FieldElementT keccak__keccak__sum_parities0_16 =
      (diluted_pool_column_row_expr541) + (keccak__keccak__rotated_parity1_column_row_expr542);
  const FieldElementT keccak__keccak__sum_parities0_23552 =
      (diluted_pool_column_row_expr546) + (keccak__keccak__rotated_parity1_column_row_expr547);
  const FieldElementT keccak__keccak__sum_parities0_23560 =
      (diluted_pool_column_row_expr551) + (keccak__keccak__rotated_parity1_column_row_expr552);
  const FieldElementT keccak__keccak__sum_parities0_23568 =
      (diluted_pool_column_row_expr556) + (keccak__keccak__rotated_parity1_column_row_expr557);
  const FieldElementT keccak__keccak__sum_parities1_19456 =
      (diluted_pool_column_row_expr563) + (keccak__keccak__rotated_parity2_column_row_expr564);
  const FieldElementT keccak__keccak__sum_parities2_50176 =
      (diluted_pool_column_row_expr570) + (keccak__keccak__rotated_parity3_column_row_expr571);
  const FieldElementT keccak__keccak__sum_parities3_44032 =
      (diluted_pool_column_row_expr577) + (keccak__keccak__rotated_parity4_column_row_expr578);
  const FieldElementT keccak__keccak__sum_parities4_57344 =
      (diluted_pool_column_row_expr584) + (keccak__keccak__rotated_parity0_column_row_expr585);
  const FieldElementT keccak__keccak__sum_parities0_47104 =
      (diluted_pool_column_row_expr591) + (keccak__keccak__rotated_parity1_column_row_expr592);
  const FieldElementT keccak__keccak__sum_parities1_8 =
      (diluted_pool_column_row_expr598) + (keccak__keccak__rotated_parity2_column_row_expr599);
  const FieldElementT keccak__keccak__sum_parities1_16 =
      (diluted_pool_column_row_expr603) + (keccak__keccak__rotated_parity2_column_row_expr604);
  const FieldElementT keccak__keccak__sum_parities1_63488 =
      (diluted_pool_column_row_expr608) + (keccak__keccak__rotated_parity2_column_row_expr609);
  const FieldElementT keccak__keccak__sum_parities1_63496 =
      (diluted_pool_column_row_expr613) + (keccak__keccak__rotated_parity2_column_row_expr614);
  const FieldElementT keccak__keccak__sum_parities1_63504 =
      (diluted_pool_column_row_expr618) + (keccak__keccak__rotated_parity2_column_row_expr619);
  const FieldElementT keccak__keccak__sum_parities2_3072 =
      (diluted_pool_column_row_expr625) + (keccak__keccak__rotated_parity3_column_row_expr626);
  const FieldElementT keccak__keccak__sum_parities3_8192 =
      (diluted_pool_column_row_expr632) + (keccak__keccak__rotated_parity4_column_row_expr633);
  const FieldElementT keccak__keccak__sum_parities4_51200 =
      (diluted_pool_column_row_expr639) + (keccak__keccak__rotated_parity0_column_row_expr640);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_32 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr430);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_1056 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr648);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_3104 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr654);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_7200 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr660);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_15392 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr666);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_31776 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr672);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_64544 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr678);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_0 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr394);
  const FieldElementT keccak__keccak__after_theta_rho_pi_xor_one_128 =
      (FieldElementT::ConstexprFromBigInt(0x1111111111111111_Z)) -
      (diluted_pool_column_row_expr636);
  const FieldElementT poseidon__poseidon__full_rounds_state0_cubed_0 =
      (poseidon__poseidon__full_rounds_state0_column_row_expr695) *
      (poseidon__poseidon__full_rounds_state0_squared_column_row_expr694);
  const FieldElementT poseidon__poseidon__full_rounds_state1_cubed_0 =
      (poseidon__poseidon__full_rounds_state1_column_row_expr697) *
      (poseidon__poseidon__full_rounds_state1_squared_column_row_expr696);
  const FieldElementT poseidon__poseidon__full_rounds_state2_cubed_0 =
      (poseidon__poseidon__full_rounds_state2_column_row_expr699) *
      (poseidon__poseidon__full_rounds_state2_squared_column_row_expr698);
  const FieldElementT poseidon__poseidon__full_rounds_state0_cubed_7 =
      (poseidon__poseidon__full_rounds_state0_column_row_expr711) *
      (poseidon__poseidon__full_rounds_state0_squared_column_row_expr712);
  const FieldElementT poseidon__poseidon__full_rounds_state1_cubed_7 =
      (poseidon__poseidon__full_rounds_state1_column_row_expr713) *
      (poseidon__poseidon__full_rounds_state1_squared_column_row_expr714);
  const FieldElementT poseidon__poseidon__full_rounds_state2_cubed_7 =
      (poseidon__poseidon__full_rounds_state2_column_row_expr715) *
      (poseidon__poseidon__full_rounds_state2_squared_column_row_expr716);
  const FieldElementT poseidon__poseidon__full_rounds_state0_cubed_3 =
      (poseidon__poseidon__full_rounds_state0_column_row_expr724) *
      (poseidon__poseidon__full_rounds_state0_squared_column_row_expr725);
  const FieldElementT poseidon__poseidon__full_rounds_state1_cubed_3 =
      (poseidon__poseidon__full_rounds_state1_column_row_expr726) *
      (poseidon__poseidon__full_rounds_state1_squared_column_row_expr727);
  const FieldElementT poseidon__poseidon__full_rounds_state2_cubed_3 =
      (poseidon__poseidon__full_rounds_state2_column_row_expr728) *
      (poseidon__poseidon__full_rounds_state2_squared_column_row_expr729);
  const FieldElementT poseidon__poseidon__partial_rounds_state0_cubed_0 =
      (poseidon__poseidon__partial_rounds_state0_column_row_expr701) *
      (poseidon__poseidon__partial_rounds_state0_squared_column_row_expr700);
  const FieldElementT poseidon__poseidon__partial_rounds_state0_cubed_1 =
      (poseidon__poseidon__partial_rounds_state0_column_row_expr730) *
      (poseidon__poseidon__partial_rounds_state0_squared_column_row_expr732);
  const FieldElementT poseidon__poseidon__partial_rounds_state0_cubed_2 =
      (poseidon__poseidon__partial_rounds_state0_column_row_expr731) *
      (poseidon__poseidon__partial_rounds_state0_squared_column_row_expr734);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_0 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr703) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr702);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_1 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr720) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr736);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_2 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr722) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr737);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_19 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr739) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr740);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_20 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr741) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr742);
  const FieldElementT poseidon__poseidon__partial_rounds_state1_cubed_21 =
      (poseidon__poseidon__partial_rounds_state1_column_row_expr743) *
      (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr744);
  FractionFieldElement<FieldElementT> res(FieldElementT::Zero());
  {
    // Compute a sum of constraints with denominator = domain4.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = domain5.
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for cpu/decode/opcode_range_check/bit:
        const FieldElementT constraint =
            ((cpu__decode__opcode_range_check__bit_0) * (cpu__decode__opcode_range_check__bit_0)) -
            (cpu__decode__opcode_range_check__bit_0);
        inner_sum += random_coefficients[0] * constraint;
      }
      outer_sum += inner_sum * domain5;
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain4);
  }

  {
    // Compute a sum of constraints with denominator = domain5.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for cpu/decode/opcode_range_check/zero:
        const FieldElementT constraint = cpu__decode__opcode_range_check__column_column_row_expr0;
        inner_sum += random_coefficients[1] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain5);
  }

  {
    // Compute a sum of constraints with denominator = domain6.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for cpu/decode/opcode_range_check_input:
        const FieldElementT constraint =
            (mem_pool__value_column_row_expr2) -
            (((((((cpu__decode__opcode_range_check__column_column_row_expr0) * (offset_size_)) +
                 (range_check16_pool_column_row_expr3)) *
                (offset_size_)) +
               (range_check16_pool_column_row_expr4)) *
              (offset_size_)) +
             (range_check16_pool_column_row_expr5));
        inner_sum += random_coefficients[2] * constraint;
      }
      {
        // Constraint expression for cpu/decode/flag_op1_base_op0_bit:
        const FieldElementT constraint =
            ((cpu__decode__flag_op1_base_op0_0) * (cpu__decode__flag_op1_base_op0_0)) -
            (cpu__decode__flag_op1_base_op0_0);
        inner_sum += random_coefficients[3] * constraint;
      }
      {
        // Constraint expression for cpu/decode/flag_res_op1_bit:
        const FieldElementT constraint =
            ((cpu__decode__flag_res_op1_0) * (cpu__decode__flag_res_op1_0)) -
            (cpu__decode__flag_res_op1_0);
        inner_sum += random_coefficients[4] * constraint;
      }
      {
        // Constraint expression for cpu/decode/flag_pc_update_regular_bit:
        const FieldElementT constraint =
            ((cpu__decode__flag_pc_update_regular_0) * (cpu__decode__flag_pc_update_regular_0)) -
            (cpu__decode__flag_pc_update_regular_0);
        inner_sum += random_coefficients[5] * constraint;
      }
      {
        // Constraint expression for cpu/decode/fp_update_regular_bit:
        const FieldElementT constraint =
            ((cpu__decode__fp_update_regular_0) * (cpu__decode__fp_update_regular_0)) -
            (cpu__decode__fp_update_regular_0);
        inner_sum += random_coefficients[6] * constraint;
      }
      {
        // Constraint expression for cpu/operands/mem_dst_addr:
        const FieldElementT constraint =
            ((mem_pool__addr_column_row_expr26) + (half_offset_size_)) -
            ((((cpu__decode__opcode_range_check__bit_0) * (cpu__registers__fp_column_row_expr27)) +
              (((FieldElementT::One()) - (cpu__decode__opcode_range_check__bit_0)) *
               (cpu__registers__ap_column_row_expr28))) +
             (range_check16_pool_column_row_expr5));
        inner_sum += random_coefficients[7] * constraint;
      }
      {
        // Constraint expression for cpu/operands/mem0_addr:
        const FieldElementT constraint =
            ((mem_pool__addr_column_row_expr29) + (half_offset_size_)) -
            ((((cpu__decode__opcode_range_check__bit_1) * (cpu__registers__fp_column_row_expr27)) +
              (((FieldElementT::One()) - (cpu__decode__opcode_range_check__bit_1)) *
               (cpu__registers__ap_column_row_expr28))) +
             (range_check16_pool_column_row_expr4));
        inner_sum += random_coefficients[8] * constraint;
      }
      {
        // Constraint expression for cpu/operands/mem1_addr:
        const FieldElementT constraint =
            ((mem_pool__addr_column_row_expr31) + (half_offset_size_)) -
            ((((((cpu__decode__opcode_range_check__bit_2) * (mem_pool__addr_column_row_expr32)) +
                ((cpu__decode__opcode_range_check__bit_4) *
                 (cpu__registers__ap_column_row_expr28))) +
               ((cpu__decode__opcode_range_check__bit_3) *
                (cpu__registers__fp_column_row_expr27))) +
              ((cpu__decode__flag_op1_base_op0_0) * (mem_pool__value_column_row_expr33))) +
             (range_check16_pool_column_row_expr3));
        inner_sum += random_coefficients[9] * constraint;
      }
      {
        // Constraint expression for cpu/operands/ops_mul:
        const FieldElementT constraint =
            (cpu__operands__ops_mul_column_row_expr34) -
            ((mem_pool__value_column_row_expr33) * (mem_pool__value_column_row_expr35));
        inner_sum += random_coefficients[10] * constraint;
      }
      {
        // Constraint expression for cpu/operands/res:
        const FieldElementT constraint =
            (((FieldElementT::One()) - (cpu__decode__opcode_range_check__bit_9)) *
             (cpu__operands__res_column_row_expr36)) -
            ((((cpu__decode__opcode_range_check__bit_5) *
               ((mem_pool__value_column_row_expr33) + (mem_pool__value_column_row_expr35))) +
              ((cpu__decode__opcode_range_check__bit_6) *
               (cpu__operands__ops_mul_column_row_expr34))) +
             ((cpu__decode__flag_res_op1_0) * (mem_pool__value_column_row_expr35)));
        inner_sum += random_coefficients[11] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/call/push_fp:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_12) *
            ((mem_pool__value_column_row_expr38) - (cpu__registers__fp_column_row_expr27));
        inner_sum += random_coefficients[18] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/call/push_pc:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_12) *
            ((mem_pool__value_column_row_expr33) -
             (((mem_pool__addr_column_row_expr32) + (cpu__decode__opcode_range_check__bit_2)) +
              (FieldElementT::One())));
        inner_sum += random_coefficients[19] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/call/off0:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_12) *
            ((range_check16_pool_column_row_expr5) - (half_offset_size_));
        inner_sum += random_coefficients[20] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/call/off1:
        const FieldElementT constraint = (cpu__decode__opcode_range_check__bit_12) *
                                         ((range_check16_pool_column_row_expr4) -
                                          ((half_offset_size_) + (FieldElementT::One())));
        inner_sum += random_coefficients[21] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/call/flags:
        const FieldElementT constraint = (cpu__decode__opcode_range_check__bit_12) *
                                         (((((cpu__decode__opcode_range_check__bit_12) +
                                             (cpu__decode__opcode_range_check__bit_12)) +
                                            (FieldElementT::One())) +
                                           (FieldElementT::One())) -
                                          (((cpu__decode__opcode_range_check__bit_0) +
                                            (cpu__decode__opcode_range_check__bit_1)) +
                                           (FieldElementT::ConstexprFromBigInt(0x4_Z))));
        inner_sum += random_coefficients[22] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/ret/off0:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_13) *
            (((range_check16_pool_column_row_expr5) + (FieldElementT::ConstexprFromBigInt(0x2_Z))) -
             (half_offset_size_));
        inner_sum += random_coefficients[23] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/ret/off2:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_13) *
            (((range_check16_pool_column_row_expr3) + (FieldElementT::One())) -
             (half_offset_size_));
        inner_sum += random_coefficients[24] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/ret/flags:
        const FieldElementT constraint = (cpu__decode__opcode_range_check__bit_13) *
                                         (((((cpu__decode__opcode_range_check__bit_7) +
                                             (cpu__decode__opcode_range_check__bit_0)) +
                                            (cpu__decode__opcode_range_check__bit_3)) +
                                           (cpu__decode__flag_res_op1_0)) -
                                          (FieldElementT::ConstexprFromBigInt(0x4_Z)));
        inner_sum += random_coefficients[25] * constraint;
      }
      {
        // Constraint expression for cpu/opcodes/assert_eq/assert_eq:
        const FieldElementT constraint =
            (cpu__decode__opcode_range_check__bit_14) *
            ((mem_pool__value_column_row_expr38) - (cpu__operands__res_column_row_expr36));
        inner_sum += random_coefficients[26] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }

    {
      // Compute a sum of constraints with numerator = domain150.
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for cpu/update_registers/update_pc/tmp0:
        const FieldElementT constraint =
            (cpu__update_registers__update_pc__tmp0_column_row_expr37) -
            ((cpu__decode__opcode_range_check__bit_9) * (mem_pool__value_column_row_expr38));
        inner_sum += random_coefficients[12] * constraint;
      }
      {
        // Constraint expression for cpu/update_registers/update_pc/tmp1:
        const FieldElementT constraint =
            (cpu__update_registers__update_pc__tmp1_column_row_expr39) -
            ((cpu__update_registers__update_pc__tmp0_column_row_expr37) *
             (cpu__operands__res_column_row_expr36));
        inner_sum += random_coefficients[13] * constraint;
      }
      {
        // Constraint expression for cpu/update_registers/update_pc/pc_cond_negative:
        const FieldElementT constraint =
            ((((FieldElementT::One()) - (cpu__decode__opcode_range_check__bit_9)) *
              (mem_pool__addr_column_row_expr40)) +
             ((cpu__update_registers__update_pc__tmp0_column_row_expr37) *
              ((mem_pool__addr_column_row_expr40) -
               ((mem_pool__addr_column_row_expr32) + (mem_pool__value_column_row_expr35))))) -
            ((((cpu__decode__flag_pc_update_regular_0) * (npc_reg_0)) +
              ((cpu__decode__opcode_range_check__bit_7) * (cpu__operands__res_column_row_expr36))) +
             ((cpu__decode__opcode_range_check__bit_8) *
              ((mem_pool__addr_column_row_expr32) + (cpu__operands__res_column_row_expr36))));
        inner_sum += random_coefficients[14] * constraint;
      }
      {
        // Constraint expression for cpu/update_registers/update_pc/pc_cond_positive:
        const FieldElementT constraint =
            ((cpu__update_registers__update_pc__tmp1_column_row_expr39) -
             (cpu__decode__opcode_range_check__bit_9)) *
            ((mem_pool__addr_column_row_expr40) - (npc_reg_0));
        inner_sum += random_coefficients[15] * constraint;
      }
      {
        // Constraint expression for cpu/update_registers/update_ap/ap_update:
        const FieldElementT constraint =
            (cpu__registers__ap_column_row_expr41) -
            ((((cpu__registers__ap_column_row_expr28) + ((cpu__decode__opcode_range_check__bit_10) *
                                                         (cpu__operands__res_column_row_expr36))) +
              (cpu__decode__opcode_range_check__bit_11)) +
             ((cpu__decode__opcode_range_check__bit_12) *
              (FieldElementT::ConstexprFromBigInt(0x2_Z))));
        inner_sum += random_coefficients[16] * constraint;
      }
      {
        // Constraint expression for cpu/update_registers/update_fp/fp_update:
        const FieldElementT constraint =
            (cpu__registers__fp_column_row_expr46) -
            ((((cpu__decode__fp_update_regular_0) * (cpu__registers__fp_column_row_expr27)) +
              ((cpu__decode__opcode_range_check__bit_13) * (mem_pool__value_column_row_expr38))) +
             ((cpu__decode__opcode_range_check__bit_12) *
              ((cpu__registers__ap_column_row_expr28) +
               (FieldElementT::ConstexprFromBigInt(0x2_Z)))));
        inner_sum += random_coefficients[17] * constraint;
      }
      outer_sum += inner_sum * domain150;
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain6);
  }

  {
    // Compute a sum of constraints with denominator = domain151.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for initial_ap:
        const FieldElementT constraint = (cpu__registers__ap_column_row_expr28) - (initial_ap_);
        inner_sum += random_coefficients[27] * constraint;
      }
      {
        // Constraint expression for initial_fp:
        const FieldElementT constraint = (cpu__registers__fp_column_row_expr27) - (initial_ap_);
        inner_sum += random_coefficients[28] * constraint;
      }
      {
        // Constraint expression for initial_pc:
        const FieldElementT constraint = (mem_pool__addr_column_row_expr32) - (initial_pc_);
        inner_sum += random_coefficients[29] * constraint;
      }
      {
        // Constraint expression for memory/multi_column_perm/perm/init0:
        const FieldElementT constraint =
            (((((memory__multi_column_perm__perm__interaction_elm_) -
                ((memory__sorted__addr_column_row_expr49) +
                 ((memory__multi_column_perm__hash_interaction_elm0_) *
                  (memory__sorted__value_column_row_expr50)))) *
               (memory__multi_column_perm__perm__cum_prod0_column_row_expr747)) +
              (mem_pool__addr_column_row_expr51)) +
             ((memory__multi_column_perm__hash_interaction_elm0_) *
              (mem_pool__value_column_row_expr52))) -
            (memory__multi_column_perm__perm__interaction_elm_);
        inner_sum += random_coefficients[33] * constraint;
      }
      {
        // Constraint expression for memory/initial_addr:
        const FieldElementT constraint =
            (memory__sorted__addr_column_row_expr49) - (FieldElementT::One());
        inner_sum += random_coefficients[38] * constraint;
      }
      {
        // Constraint expression for range_check16/perm/init0:
        const FieldElementT constraint = ((((range_check16__perm__interaction_elm_) -
                                            (range_check16__sorted_column_row_expr59)) *
                                           (range_check16__perm__cum_prod0_column_row_expr749)) +
                                          (range_check16_pool_column_row_expr60)) -
                                         (range_check16__perm__interaction_elm_);
        inner_sum += random_coefficients[41] * constraint;
      }
      {
        // Constraint expression for range_check16/minimum:
        const FieldElementT constraint =
            (range_check16__sorted_column_row_expr59) - (range_check_min_);
        inner_sum += random_coefficients[45] * constraint;
      }
      {
        // Constraint expression for diluted_check/permutation/init0:
        const FieldElementT constraint =
            ((((diluted_check__permutation__interaction_elm_) -
               (diluted_check__permuted_values_column_row_expr63)) *
              (diluted_check__permutation__cum_prod0_column_row_expr751)) +
             (diluted_pool_column_row_expr64)) -
            (diluted_check__permutation__interaction_elm_);
        inner_sum += random_coefficients[47] * constraint;
      }
      {
        // Constraint expression for diluted_check/init:
        const FieldElementT constraint =
            (diluted_check__cumulative_value_column_row_expr753) - (FieldElementT::One());
        inner_sum += random_coefficients[50] * constraint;
      }
      {
        // Constraint expression for diluted_check/first_element:
        const FieldElementT constraint =
            (diluted_check__permuted_values_column_row_expr63) - (diluted_check__first_elm_);
        inner_sum += random_coefficients[51] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain151);
  }

  {
    // Compute a sum of constraints with denominator = domain150.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for final_ap:
        const FieldElementT constraint = (cpu__registers__ap_column_row_expr28) - (final_ap_);
        inner_sum += random_coefficients[30] * constraint;
      }
      {
        // Constraint expression for final_fp:
        const FieldElementT constraint = (cpu__registers__fp_column_row_expr27) - (initial_ap_);
        inner_sum += random_coefficients[31] * constraint;
      }
      {
        // Constraint expression for final_pc:
        const FieldElementT constraint = (mem_pool__addr_column_row_expr32) - (final_pc_);
        inner_sum += random_coefficients[32] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain150);
  }

  {
    // Compute a sum of constraints with denominator = domain130.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = domain152.
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for memory/multi_column_perm/perm/step0:
        const FieldElementT constraint =
            (((memory__multi_column_perm__perm__interaction_elm_) -
              ((memory__sorted__addr_column_row_expr53) +
               ((memory__multi_column_perm__hash_interaction_elm0_) *
                (memory__sorted__value_column_row_expr54)))) *
             (memory__multi_column_perm__perm__cum_prod0_column_row_expr748)) -
            (((memory__multi_column_perm__perm__interaction_elm_) -
              ((mem_pool__addr_column_row_expr55) +
               ((memory__multi_column_perm__hash_interaction_elm0_) *
                (mem_pool__value_column_row_expr56)))) *
             (memory__multi_column_perm__perm__cum_prod0_column_row_expr747));
        inner_sum += random_coefficients[34] * constraint;
      }
      {
        // Constraint expression for memory/diff_is_bit:
        const FieldElementT constraint =
            ((memory__address_diff_0) * (memory__address_diff_0)) - (memory__address_diff_0);
        inner_sum += random_coefficients[36] * constraint;
      }
      {
        // Constraint expression for memory/is_func:
        const FieldElementT constraint =
            ((memory__address_diff_0) - (FieldElementT::One())) *
            ((memory__sorted__value_column_row_expr50) - (memory__sorted__value_column_row_expr54));
        inner_sum += random_coefficients[37] * constraint;
      }
      outer_sum += inner_sum * domain152;
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain130);
  }

  {
    // Compute a sum of constraints with denominator = domain152.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for memory/multi_column_perm/perm/last:
        const FieldElementT constraint =
            (memory__multi_column_perm__perm__cum_prod0_column_row_expr747) -
            (memory__multi_column_perm__perm__public_memory_prod_);
        inner_sum += random_coefficients[35] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain152);
  }

  {
    // Compute a sum of constraints with denominator = domain131.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for public_memory_addr_zero:
        const FieldElementT constraint = mem_pool__addr_column_row_expr57;
        inner_sum += random_coefficients[39] * constraint;
      }
      {
        // Constraint expression for public_memory_value_zero:
        const FieldElementT constraint = mem_pool__value_column_row_expr58;
        inner_sum += random_coefficients[40] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain131);
  }

  {
    // Compute a sum of constraints with denominator = domain149.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = domain153.
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for range_check16/perm/step0:
        const FieldElementT constraint =
            (((range_check16__perm__interaction_elm_) - (range_check16__sorted_column_row_expr61)) *
             (range_check16__perm__cum_prod0_column_row_expr750)) -
            (((range_check16__perm__interaction_elm_) - (range_check16_pool_column_row_expr62)) *
             (range_check16__perm__cum_prod0_column_row_expr749));
        inner_sum += random_coefficients[42] * constraint;
      }
      {
        // Constraint expression for range_check16/diff_is_bit:
        const FieldElementT constraint =
            ((range_check16__diff_0) * (range_check16__diff_0)) - (range_check16__diff_0);
        inner_sum += random_coefficients[44] * constraint;
      }
      outer_sum += inner_sum * domain153;
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain149);
  }

  {
    // Compute a sum of constraints with denominator = domain153.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for range_check16/perm/last:
        const FieldElementT constraint = (range_check16__perm__cum_prod0_column_row_expr749) -
                                         (range_check16__perm__public_memory_prod_);
        inner_sum += random_coefficients[43] * constraint;
      }
      {
        // Constraint expression for range_check16/maximum:
        const FieldElementT constraint =
            (range_check16__sorted_column_row_expr59) - (range_check_max_);
        inner_sum += random_coefficients[46] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain153);
  }

  {
    // Compute a sum of constraints with denominator = domain7.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = domain154.
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for diluted_check/permutation/step0:
        const FieldElementT constraint =
            (((diluted_check__permutation__interaction_elm_) -
              (diluted_check__permuted_values_column_row_expr65)) *
             (diluted_check__permutation__cum_prod0_column_row_expr752)) -
            (((diluted_check__permutation__interaction_elm_) - (diluted_pool_column_row_expr66)) *
             (diluted_check__permutation__cum_prod0_column_row_expr751));
        inner_sum += random_coefficients[48] * constraint;
      }
      {
        // Constraint expression for diluted_check/step:
        const FieldElementT constraint =
            (diluted_check__cumulative_value_column_row_expr754) -
            (((diluted_check__cumulative_value_column_row_expr753) *
              ((FieldElementT::One()) + ((diluted_check__interaction_z_) *
                                         ((diluted_check__permuted_values_column_row_expr65) -
                                          (diluted_check__permuted_values_column_row_expr63))))) +
             (((diluted_check__interaction_alpha_) *
               ((diluted_check__permuted_values_column_row_expr65) -
                (diluted_check__permuted_values_column_row_expr63))) *
              ((diluted_check__permuted_values_column_row_expr65) -
               (diluted_check__permuted_values_column_row_expr63))));
        inner_sum += random_coefficients[52] * constraint;
      }
      outer_sum += inner_sum * domain154;
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain7);
  }

  {
    // Compute a sum of constraints with denominator = domain154.
    FieldElementT outer_sum = FieldElementT::Zero();

    {
      // Compute a sum of constraints with numerator = FieldElementT::One().
      FieldElementT inner_sum = FieldElementT::Zero();
      {
        // Constraint expression for diluted_check/permutation/last:
        const FieldElementT constraint =
            (diluted_check__permutation__cum_prod0_column_row_expr751) -
            (diluted_check__permutation__public_memory_prod_);
        inner_sum += random_coefficients[49] * constraint;
      }
      {
        // Constraint expression for diluted_check/last:
        const FieldElementT constraint =
            (diluted_check__cumulative_value_column_row_expr753) - (diluted_check__final_cum_val_);
        inner_sum += random_coefficients[53] * constraint;
      }
      outer_sum += inner_sum;  // domain == FieldElementT::One()
    }
    res += FractionFieldElement<FieldElementT>(outer_sum, domain154);
  }

  if ((uses_pedersen_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain133.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/bit_unpacking/last_one_is_zero:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr67) *
              ((pedersen__hash0__ec_subset_sum__selector_column_row_expr68) -
               ((pedersen__hash0__ec_subset_sum__selector_column_row_expr69) +
                (pedersen__hash0__ec_subset_sum__selector_column_row_expr69)));
          inner_sum += random_coefficients[54] * constraint;
        }
        {
          // Constraint expression for
          // pedersen/hash0/ec_subset_sum/bit_unpacking/zeroes_between_ones0:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr67) *
              ((pedersen__hash0__ec_subset_sum__selector_column_row_expr69) -
               ((FieldElementT::ConstexprFromBigInt(
                    0x800000000000000000000000000000000000000000000000_Z)) *
                (pedersen__hash0__ec_subset_sum__selector_column_row_expr70)));
          inner_sum += random_coefficients[55] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/bit_unpacking/cumulative_bit192:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr67) -
              ((pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr71) *
               ((pedersen__hash0__ec_subset_sum__selector_column_row_expr70) -
                ((pedersen__hash0__ec_subset_sum__selector_column_row_expr72) +
                 (pedersen__hash0__ec_subset_sum__selector_column_row_expr72))));
          inner_sum += random_coefficients[56] * constraint;
        }
        {
          // Constraint expression for
          // pedersen/hash0/ec_subset_sum/bit_unpacking/zeroes_between_ones192:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr71) *
              ((pedersen__hash0__ec_subset_sum__selector_column_row_expr72) -
               ((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                (pedersen__hash0__ec_subset_sum__selector_column_row_expr73)));
          inner_sum += random_coefficients[57] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/bit_unpacking/cumulative_bit196:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr71) -
              (((pedersen__hash0__ec_subset_sum__selector_column_row_expr74) -
                ((pedersen__hash0__ec_subset_sum__selector_column_row_expr75) +
                 (pedersen__hash0__ec_subset_sum__selector_column_row_expr75))) *
               ((pedersen__hash0__ec_subset_sum__selector_column_row_expr73) -
                ((pedersen__hash0__ec_subset_sum__selector_column_row_expr76) +
                 (pedersen__hash0__ec_subset_sum__selector_column_row_expr76))));
          inner_sum += random_coefficients[58] * constraint;
        }
        {
          // Constraint expression for
          // pedersen/hash0/ec_subset_sum/bit_unpacking/zeroes_between_ones196:
          const FieldElementT constraint =
              ((pedersen__hash0__ec_subset_sum__selector_column_row_expr74) -
               ((pedersen__hash0__ec_subset_sum__selector_column_row_expr75) +
                (pedersen__hash0__ec_subset_sum__selector_column_row_expr75))) *
              ((pedersen__hash0__ec_subset_sum__selector_column_row_expr76) -
               ((FieldElementT::ConstexprFromBigInt(0x40000000000000_Z)) *
                (pedersen__hash0__ec_subset_sum__selector_column_row_expr74)));
          inner_sum += random_coefficients[59] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain136.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/copy_point/x:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr84) -
              (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr82);
          inner_sum += random_coefficients[68] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/copy_point/y:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr85) -
              (pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr83);
          inner_sum += random_coefficients[69] * constraint;
        }
        outer_sum += inner_sum * domain136;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain133);
    }

    {
      // Compute a sum of constraints with denominator = domain132.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain134.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/booleanity_test:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_0) *
              ((pedersen__hash0__ec_subset_sum__bit_0) - (FieldElementT::One()));
          inner_sum += random_coefficients[60] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/add_points/slope:
          const FieldElementT constraint =
              ((pedersen__hash0__ec_subset_sum__bit_0) *
               ((pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr78) -
                (pedersen__points__y))) -
              ((pedersen__hash0__ec_subset_sum__slope_column_row_expr81) *
               ((pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77) -
                (pedersen__points__x)));
          inner_sum += random_coefficients[63] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/add_points/x:
          const FieldElementT constraint =
              ((pedersen__hash0__ec_subset_sum__slope_column_row_expr81) *
               (pedersen__hash0__ec_subset_sum__slope_column_row_expr81)) -
              ((pedersen__hash0__ec_subset_sum__bit_0) *
               (((pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77) +
                 (pedersen__points__x)) +
                (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr79)));
          inner_sum += random_coefficients[64] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/add_points/y:
          const FieldElementT constraint =
              ((pedersen__hash0__ec_subset_sum__bit_0) *
               ((pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr78) +
                (pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr80))) -
              ((pedersen__hash0__ec_subset_sum__slope_column_row_expr81) *
               ((pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77) -
                (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr79)));
          inner_sum += random_coefficients[65] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/copy_point/x:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_neg_0) *
              ((pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr79) -
               (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77));
          inner_sum += random_coefficients[66] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/copy_point/y:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__bit_neg_0) *
              ((pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr80) -
               (pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr78));
          inner_sum += random_coefficients[67] * constraint;
        }
        outer_sum += inner_sum * domain134;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain132);
    }

    {
      // Compute a sum of constraints with denominator = domain135.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/bit_extraction_end:
          const FieldElementT constraint =
              pedersen__hash0__ec_subset_sum__selector_column_row_expr68;
          inner_sum += random_coefficients[61] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain135);
    }

    {
      // Compute a sum of constraints with denominator = domain134.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/ec_subset_sum/zeros_tail:
          const FieldElementT constraint =
              pedersen__hash0__ec_subset_sum__selector_column_row_expr68;
          inner_sum += random_coefficients[62] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain134);
    }

    {
      // Compute a sum of constraints with denominator = domain137.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/hash0/init/x:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr77) -
              ((pedersen__shift_point_).x);
          inner_sum += random_coefficients[70] * constraint;
        }
        {
          // Constraint expression for pedersen/hash0/init/y:
          const FieldElementT constraint =
              (pedersen__hash0__ec_subset_sum__partial_sum__y_column_row_expr78) -
              ((pedersen__shift_point_).y);
          inner_sum += random_coefficients[71] * constraint;
        }
        {
          // Constraint expression for pedersen/input0_value0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr86) -
              (pedersen__hash0__ec_subset_sum__selector_column_row_expr68);
          inner_sum += random_coefficients[72] * constraint;
        }
        {
          // Constraint expression for pedersen/input1_value0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr91) -
              (pedersen__hash0__ec_subset_sum__selector_column_row_expr90);
          inner_sum += random_coefficients[75] * constraint;
        }
        {
          // Constraint expression for pedersen/input1_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr92) -
              ((mem_pool__addr_column_row_expr89) + (FieldElementT::One()));
          inner_sum += random_coefficients[76] * constraint;
        }
        {
          // Constraint expression for pedersen/output_value0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr93) -
              (pedersen__hash0__ec_subset_sum__partial_sum__x_column_row_expr94);
          inner_sum += random_coefficients[77] * constraint;
        }
        {
          // Constraint expression for pedersen/output_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr88) -
              ((mem_pool__addr_column_row_expr92) + (FieldElementT::One()));
          inner_sum += random_coefficients[78] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain155.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/input0_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr87) -
              ((mem_pool__addr_column_row_expr88) + (FieldElementT::One()));
          inner_sum += random_coefficients[73] * constraint;
        }
        outer_sum += inner_sum * domain155;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain137);
    }

    {
      // Compute a sum of constraints with denominator = domain156.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for pedersen/init_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr89) - (initial_pedersen_addr_);
          inner_sum += random_coefficients[74] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain156);
    }
  }

  if ((uses_range_check_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain148.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for range_check_builtin/value:
          const FieldElementT constraint =
              (range_check_builtin__value7_0) - (mem_pool__value_column_row_expr95);
          inner_sum += random_coefficients[79] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain157.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for range_check_builtin/addr_step:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr104) -
              ((mem_pool__addr_column_row_expr105) + (FieldElementT::One()));
          inner_sum += random_coefficients[80] * constraint;
        }
        outer_sum += inner_sum * domain157;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain148);
    }

    {
      // Compute a sum of constraints with denominator = domain158.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for range_check_builtin/init_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr105) - (initial_range_check_addr_);
          inner_sum += random_coefficients[81] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain158);
    }
  }

  if ((uses_ecdsa_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain12.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain14.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/doubling_key/slope:
          const FieldElementT constraint =
              ((((ecdsa__signature0__doubling_key__x_squared) +
                 (ecdsa__signature0__doubling_key__x_squared)) +
                (ecdsa__signature0__doubling_key__x_squared)) +
               ((ecdsa__sig_config_).alpha)) -
              (((ecdsa__signature0__key_points__y_column_row_expr107) +
                (ecdsa__signature0__key_points__y_column_row_expr107)) *
               (ecdsa__signature0__doubling_slope_column_row_expr110));
          inner_sum += random_coefficients[82] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/doubling_key/x:
          const FieldElementT constraint =
              ((ecdsa__signature0__doubling_slope_column_row_expr110) *
               (ecdsa__signature0__doubling_slope_column_row_expr110)) -
              (((ecdsa__signature0__key_points__x_column_row_expr106) +
                (ecdsa__signature0__key_points__x_column_row_expr106)) +
               (ecdsa__signature0__key_points__x_column_row_expr108));
          inner_sum += random_coefficients[83] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/doubling_key/y:
          const FieldElementT constraint =
              ((ecdsa__signature0__key_points__y_column_row_expr107) +
               (ecdsa__signature0__key_points__y_column_row_expr109)) -
              ((ecdsa__signature0__doubling_slope_column_row_expr110) *
               ((ecdsa__signature0__key_points__x_column_row_expr106) -
                (ecdsa__signature0__key_points__x_column_row_expr108)));
          inner_sum += random_coefficients[84] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/booleanity_test:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_key__bit_0) *
              ((ecdsa__signature0__exponentiate_key__bit_0) - (FieldElementT::One()));
          inner_sum += random_coefficients[94] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/add_points/slope:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__bit_0) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr122) -
                (ecdsa__signature0__key_points__y_column_row_expr107))) -
              ((ecdsa__signature0__exponentiate_key__slope_column_row_expr125) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121) -
                (ecdsa__signature0__key_points__x_column_row_expr106)));
          inner_sum += random_coefficients[97] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/add_points/x:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__slope_column_row_expr125) *
               (ecdsa__signature0__exponentiate_key__slope_column_row_expr125)) -
              ((ecdsa__signature0__exponentiate_key__bit_0) *
               (((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121) +
                 (ecdsa__signature0__key_points__x_column_row_expr106)) +
                (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr123)));
          inner_sum += random_coefficients[98] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/add_points/y:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__bit_0) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr122) +
                (ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr124))) -
              ((ecdsa__signature0__exponentiate_key__slope_column_row_expr125) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121) -
                (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr123)));
          inner_sum += random_coefficients[99] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/add_points/x_diff_inv:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__x_diff_inv_column_row_expr126) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121) -
                (ecdsa__signature0__key_points__x_column_row_expr106))) -
              (FieldElementT::One());
          inner_sum += random_coefficients[100] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/copy_point/x:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_key__bit_neg_0) *
              ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr123) -
               (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121));
          inner_sum += random_coefficients[101] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/copy_point/y:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_key__bit_neg_0) *
              ((ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr124) -
               (ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr122));
          inner_sum += random_coefficients[102] * constraint;
        }
        outer_sum += inner_sum * domain14;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain12);
    }

    {
      // Compute a sum of constraints with denominator = domain13.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain17.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/booleanity_test:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__bit_0) *
              ((ecdsa__signature0__exponentiate_generator__bit_0) - (FieldElementT::One()));
          inner_sum += random_coefficients[85] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/add_points/slope:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__bit_0) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr114) -
                (ecdsa__generator_points__y))) -
              ((ecdsa__signature0__exponentiate_generator__slope_column_row_expr117) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113) -
                (ecdsa__generator_points__x)));
          inner_sum += random_coefficients[88] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/add_points/x:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__slope_column_row_expr117) *
               (ecdsa__signature0__exponentiate_generator__slope_column_row_expr117)) -
              ((ecdsa__signature0__exponentiate_generator__bit_0) *
               (((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113) +
                 (ecdsa__generator_points__x)) +
                (ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr115)));
          inner_sum += random_coefficients[89] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/add_points/y:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__bit_0) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr114) +
                (ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr116))) -
              ((ecdsa__signature0__exponentiate_generator__slope_column_row_expr117) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113) -
                (ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr115)));
          inner_sum += random_coefficients[90] * constraint;
        }
        {
          // Constraint expression for
          // ecdsa/signature0/exponentiate_generator/add_points/x_diff_inv:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__x_diff_inv_column_row_expr118) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113) -
                (ecdsa__generator_points__x))) -
              (FieldElementT::One());
          inner_sum += random_coefficients[91] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/copy_point/x:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__bit_neg_0) *
              ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr115) -
               (ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113));
          inner_sum += random_coefficients[92] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/copy_point/y:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__bit_neg_0) *
              ((ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr116) -
               (ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr114));
          inner_sum += random_coefficients[93] * constraint;
        }
        outer_sum += inner_sum * domain17;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain13);
    }

    {
      // Compute a sum of constraints with denominator = domain18.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/bit_extraction_end:
          const FieldElementT constraint =
              ecdsa__signature0__exponentiate_generator__selector_column_row_expr111;
          inner_sum += random_coefficients[86] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain18);
    }

    {
      // Compute a sum of constraints with denominator = domain17.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/exponentiate_generator/zeros_tail:
          const FieldElementT constraint =
              ecdsa__signature0__exponentiate_generator__selector_column_row_expr111;
          inner_sum += random_coefficients[87] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain17);
    }

    {
      // Compute a sum of constraints with denominator = domain15.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/bit_extraction_end:
          const FieldElementT constraint =
              ecdsa__signature0__exponentiate_key__selector_column_row_expr119;
          inner_sum += random_coefficients[95] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain15);
    }

    {
      // Compute a sum of constraints with denominator = domain14.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/exponentiate_key/zeros_tail:
          const FieldElementT constraint =
              ecdsa__signature0__exponentiate_key__selector_column_row_expr119;
          inner_sum += random_coefficients[96] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain14);
    }

    {
      // Compute a sum of constraints with denominator = domain19.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/init_gen/x:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr113) -
              (((ecdsa__sig_config_).shift_point).x);
          inner_sum += random_coefficients[103] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/init_gen/y:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr114) +
              (((ecdsa__sig_config_).shift_point).y);
          inner_sum += random_coefficients[104] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/add_results/slope:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr128) -
              ((ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr130) +
               ((ecdsa__signature0__add_results_slope_column_row_expr133) *
                ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr127) -
                 (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr129))));
          inner_sum += random_coefficients[107] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/add_results/x:
          const FieldElementT constraint =
              ((ecdsa__signature0__add_results_slope_column_row_expr133) *
               (ecdsa__signature0__add_results_slope_column_row_expr133)) -
              (((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr127) +
                (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr129)) +
               (ecdsa__signature0__key_points__x_column_row_expr131));
          inner_sum += random_coefficients[108] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/add_results/y:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__partial_sum__y_column_row_expr128) +
               (ecdsa__signature0__key_points__y_column_row_expr132)) -
              ((ecdsa__signature0__add_results_slope_column_row_expr133) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr127) -
                (ecdsa__signature0__key_points__x_column_row_expr131)));
          inner_sum += random_coefficients[109] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/add_results/x_diff_inv:
          const FieldElementT constraint =
              ((ecdsa__signature0__add_results_inv_column_row_expr134) *
               ((ecdsa__signature0__exponentiate_generator__partial_sum__x_column_row_expr127) -
                (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr129))) -
              (FieldElementT::One());
          inner_sum += random_coefficients[110] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/extract_r/slope:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr136) +
               (((ecdsa__sig_config_).shift_point).y)) -
              ((ecdsa__signature0__extract_r_slope_column_row_expr137) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr135) -
                (((ecdsa__sig_config_).shift_point).x)));
          inner_sum += random_coefficients[111] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/extract_r/x:
          const FieldElementT constraint =
              ((ecdsa__signature0__extract_r_slope_column_row_expr137) *
               (ecdsa__signature0__extract_r_slope_column_row_expr137)) -
              (((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr135) +
                (((ecdsa__sig_config_).shift_point).x)) +
               (ecdsa__signature0__exponentiate_key__selector_column_row_expr119));
          inner_sum += random_coefficients[112] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/extract_r/x_diff_inv:
          const FieldElementT constraint =
              ((ecdsa__signature0__extract_r_inv_column_row_expr138) *
               ((ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr135) -
                (((ecdsa__sig_config_).shift_point).x))) -
              (FieldElementT::One());
          inner_sum += random_coefficients[113] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/z_nonzero:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_generator__selector_column_row_expr111) *
               (ecdsa__signature0__z_inv_column_row_expr139)) -
              (FieldElementT::One());
          inner_sum += random_coefficients[114] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/q_on_curve/x_squared:
          const FieldElementT constraint = (ecdsa__signature0__q_x_squared_column_row_expr141) -
                                           ((ecdsa__signature0__key_points__x_column_row_expr106) *
                                            (ecdsa__signature0__key_points__x_column_row_expr106));
          inner_sum += random_coefficients[116] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/q_on_curve/on_curve:
          const FieldElementT constraint =
              ((ecdsa__signature0__key_points__y_column_row_expr107) *
               (ecdsa__signature0__key_points__y_column_row_expr107)) -
              ((((ecdsa__signature0__key_points__x_column_row_expr106) *
                 (ecdsa__signature0__q_x_squared_column_row_expr141)) +
                (((ecdsa__sig_config_).alpha) *
                 (ecdsa__signature0__key_points__x_column_row_expr106))) +
               ((ecdsa__sig_config_).beta));
          inner_sum += random_coefficients[117] * constraint;
        }
        {
          // Constraint expression for ecdsa/message_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr143) -
              ((mem_pool__addr_column_row_expr142) + (FieldElementT::One()));
          inner_sum += random_coefficients[119] * constraint;
        }
        {
          // Constraint expression for ecdsa/message_value0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr145) -
              (ecdsa__signature0__exponentiate_generator__selector_column_row_expr111);
          inner_sum += random_coefficients[121] * constraint;
        }
        {
          // Constraint expression for ecdsa/pubkey_value0:
          const FieldElementT constraint = (mem_pool__value_column_row_expr146) -
                                           (ecdsa__signature0__key_points__x_column_row_expr106);
          inner_sum += random_coefficients[122] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain159.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/pubkey_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr144) -
              ((mem_pool__addr_column_row_expr143) + (FieldElementT::One()));
          inner_sum += random_coefficients[120] * constraint;
        }
        outer_sum += inner_sum * domain159;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain19);
    }

    {
      // Compute a sum of constraints with denominator = domain16.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/signature0/init_key/x:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_key__partial_sum__x_column_row_expr121) -
              (((ecdsa__sig_config_).shift_point).x);
          inner_sum += random_coefficients[105] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/init_key/y:
          const FieldElementT constraint =
              (ecdsa__signature0__exponentiate_key__partial_sum__y_column_row_expr122) -
              (((ecdsa__sig_config_).shift_point).y);
          inner_sum += random_coefficients[106] * constraint;
        }
        {
          // Constraint expression for ecdsa/signature0/r_and_w_nonzero:
          const FieldElementT constraint =
              ((ecdsa__signature0__exponentiate_key__selector_column_row_expr119) *
               (ecdsa__signature0__r_w_inv_column_row_expr140)) -
              (FieldElementT::One());
          inner_sum += random_coefficients[115] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain16);
    }

    {
      // Compute a sum of constraints with denominator = domain160.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ecdsa/init_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr142) - (initial_ecdsa_addr_);
          inner_sum += random_coefficients[118] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain160);
    }
  }

  if ((uses_bitwise_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain161.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/init_var_pool_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr147) - (initial_bitwise_addr_);
          inner_sum += random_coefficients[123] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain161);
    }

    {
      // Compute a sum of constraints with denominator = domain0.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain1.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/step_var_pool_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr148) -
              ((mem_pool__addr_column_row_expr147) + (FieldElementT::One()));
          inner_sum += random_coefficients[124] * constraint;
        }
        outer_sum += inner_sum * domain1;
      }

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/partition:
          const FieldElementT constraint = ((bitwise__sum_var_0_0) + (bitwise__sum_var_8_0)) -
                                           (mem_pool__value_column_row_expr152);
          inner_sum += random_coefficients[127] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain0);
    }

    {
      // Compute a sum of constraints with denominator = domain2.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/x_or_y_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr149) -
              ((mem_pool__addr_column_row_expr150) + (FieldElementT::One()));
          inner_sum += random_coefficients[125] * constraint;
        }
        {
          // Constraint expression for bitwise/or_is_and_plus_xor:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr169) -
              ((mem_pool__value_column_row_expr170) + (mem_pool__value_column_row_expr171));
          inner_sum += random_coefficients[128] * constraint;
        }
        {
          // Constraint expression for bitwise/unique_unpacking192:
          const FieldElementT constraint =
              (((diluted_pool_column_row_expr176) + (diluted_pool_column_row_expr177)) *
               (FieldElementT::ConstexprFromBigInt(0x10_Z))) -
              (diluted_pool_column_row_expr175);
          inner_sum += random_coefficients[130] * constraint;
        }
        {
          // Constraint expression for bitwise/unique_unpacking193:
          const FieldElementT constraint =
              (((diluted_pool_column_row_expr179) + (diluted_pool_column_row_expr180)) *
               (FieldElementT::ConstexprFromBigInt(0x10_Z))) -
              (diluted_pool_column_row_expr178);
          inner_sum += random_coefficients[131] * constraint;
        }
        {
          // Constraint expression for bitwise/unique_unpacking194:
          const FieldElementT constraint =
              (((diluted_pool_column_row_expr182) + (diluted_pool_column_row_expr183)) *
               (FieldElementT::ConstexprFromBigInt(0x10_Z))) -
              (diluted_pool_column_row_expr181);
          inner_sum += random_coefficients[132] * constraint;
        }
        {
          // Constraint expression for bitwise/unique_unpacking195:
          const FieldElementT constraint =
              (((diluted_pool_column_row_expr185) + (diluted_pool_column_row_expr186)) *
               (FieldElementT::ConstexprFromBigInt(0x100_Z))) -
              (diluted_pool_column_row_expr184);
          inner_sum += random_coefficients[133] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain162.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/next_var_pool_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr151) -
              ((mem_pool__addr_column_row_expr149) + (FieldElementT::One()));
          inner_sum += random_coefficients[126] * constraint;
        }
        outer_sum += inner_sum * domain162;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain2);
    }

    {
      // Compute a sum of constraints with denominator = domain3.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for bitwise/addition_is_xor_with_and:
          const FieldElementT constraint =
              ((diluted_pool_column_row_expr153) + (diluted_pool_column_row_expr173)) -
              (((diluted_pool_column_row_expr174) + (diluted_pool_column_row_expr172)) +
               (diluted_pool_column_row_expr172));
          inner_sum += random_coefficients[129] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain3);
    }
  }

  if ((uses_ec_op_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain163.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/init_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr187) - (initial_ec_op_addr_);
          inner_sum += random_coefficients[134] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain163);
    }

    {
      // Compute a sum of constraints with denominator = domain9.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain164.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/p_x_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr188) -
              ((mem_pool__addr_column_row_expr187) + (FieldElementT::ConstexprFromBigInt(0x7_Z)));
          inner_sum += random_coefficients[135] * constraint;
        }
        outer_sum += inner_sum * domain164;
      }

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/p_y_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr189) -
              ((mem_pool__addr_column_row_expr187) + (FieldElementT::One()));
          inner_sum += random_coefficients[136] * constraint;
        }
        {
          // Constraint expression for ec_op/q_x_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr190) -
              ((mem_pool__addr_column_row_expr189) + (FieldElementT::One()));
          inner_sum += random_coefficients[137] * constraint;
        }
        {
          // Constraint expression for ec_op/q_y_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr191) -
              ((mem_pool__addr_column_row_expr190) + (FieldElementT::One()));
          inner_sum += random_coefficients[138] * constraint;
        }
        {
          // Constraint expression for ec_op/m_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr192) -
              ((mem_pool__addr_column_row_expr191) + (FieldElementT::One()));
          inner_sum += random_coefficients[139] * constraint;
        }
        {
          // Constraint expression for ec_op/r_x_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr193) -
              ((mem_pool__addr_column_row_expr192) + (FieldElementT::One()));
          inner_sum += random_coefficients[140] * constraint;
        }
        {
          // Constraint expression for ec_op/r_y_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr194) -
              ((mem_pool__addr_column_row_expr193) + (FieldElementT::One()));
          inner_sum += random_coefficients[141] * constraint;
        }
        {
          // Constraint expression for ec_op/get_q_x:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr200) - (ec_op__doubled_points__x_column_row_expr196);
          inner_sum += random_coefficients[145] * constraint;
        }
        {
          // Constraint expression for ec_op/get_q_y:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr201) - (ec_op__doubled_points__y_column_row_expr197);
          inner_sum += random_coefficients[146] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/last_one_is_zero:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr202) *
              ((ec_op__ec_subset_sum__selector_column_row_expr203) -
               ((ec_op__ec_subset_sum__selector_column_row_expr204) +
                (ec_op__ec_subset_sum__selector_column_row_expr204)));
          inner_sum += random_coefficients[147] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/zeroes_between_ones0:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr202) *
              ((ec_op__ec_subset_sum__selector_column_row_expr204) -
               ((FieldElementT::ConstexprFromBigInt(
                    0x800000000000000000000000000000000000000000000000_Z)) *
                (ec_op__ec_subset_sum__selector_column_row_expr205)));
          inner_sum += random_coefficients[148] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/cumulative_bit192:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column_row_expr202) -
              ((ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr206) *
               ((ec_op__ec_subset_sum__selector_column_row_expr205) -
                ((ec_op__ec_subset_sum__selector_column_row_expr207) +
                 (ec_op__ec_subset_sum__selector_column_row_expr207))));
          inner_sum += random_coefficients[149] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/zeroes_between_ones192:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr206) *
              ((ec_op__ec_subset_sum__selector_column_row_expr207) -
               ((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                (ec_op__ec_subset_sum__selector_column_row_expr208)));
          inner_sum += random_coefficients[150] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/cumulative_bit196:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column_row_expr206) -
              (((ec_op__ec_subset_sum__selector_column_row_expr209) -
                ((ec_op__ec_subset_sum__selector_column_row_expr210) +
                 (ec_op__ec_subset_sum__selector_column_row_expr210))) *
               ((ec_op__ec_subset_sum__selector_column_row_expr208) -
                ((ec_op__ec_subset_sum__selector_column_row_expr211) +
                 (ec_op__ec_subset_sum__selector_column_row_expr211))));
          inner_sum += random_coefficients[151] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_unpacking/zeroes_between_ones196:
          const FieldElementT constraint =
              ((ec_op__ec_subset_sum__selector_column_row_expr209) -
               ((ec_op__ec_subset_sum__selector_column_row_expr210) +
                (ec_op__ec_subset_sum__selector_column_row_expr210))) *
              ((ec_op__ec_subset_sum__selector_column_row_expr211) -
               ((FieldElementT::ConstexprFromBigInt(0x40000000000000_Z)) *
                (ec_op__ec_subset_sum__selector_column_row_expr209)));
          inner_sum += random_coefficients[152] * constraint;
        }
        {
          // Constraint expression for ec_op/get_m:
          const FieldElementT constraint = (ec_op__ec_subset_sum__selector_column_row_expr203) -
                                           (mem_pool__value_column_row_expr218);
          inner_sum += random_coefficients[162] * constraint;
        }
        {
          // Constraint expression for ec_op/get_p_x:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr219) -
              (ec_op__ec_subset_sum__partial_sum__x_column_row_expr212);
          inner_sum += random_coefficients[163] * constraint;
        }
        {
          // Constraint expression for ec_op/get_p_y:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr220) -
              (ec_op__ec_subset_sum__partial_sum__y_column_row_expr213);
          inner_sum += random_coefficients[164] * constraint;
        }
        {
          // Constraint expression for ec_op/set_r_x:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr221) -
              (ec_op__ec_subset_sum__partial_sum__x_column_row_expr222);
          inner_sum += random_coefficients[165] * constraint;
        }
        {
          // Constraint expression for ec_op/set_r_y:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr223) -
              (ec_op__ec_subset_sum__partial_sum__y_column_row_expr224);
          inner_sum += random_coefficients[166] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain9);
    }

    {
      // Compute a sum of constraints with denominator = domain8.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain10.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/doubling_q/slope:
          const FieldElementT constraint =
              ((((ec_op__doubling_q__x_squared_0) + (ec_op__doubling_q__x_squared_0)) +
                (ec_op__doubling_q__x_squared_0)) +
               ((ec_op__curve_config_).alpha)) -
              (((ec_op__doubled_points__y_column_row_expr197) +
                (ec_op__doubled_points__y_column_row_expr197)) *
               (ec_op__doubling_slope_column_row_expr195));
          inner_sum += random_coefficients[142] * constraint;
        }
        {
          // Constraint expression for ec_op/doubling_q/x:
          const FieldElementT constraint = ((ec_op__doubling_slope_column_row_expr195) *
                                            (ec_op__doubling_slope_column_row_expr195)) -
                                           (((ec_op__doubled_points__x_column_row_expr196) +
                                             (ec_op__doubled_points__x_column_row_expr196)) +
                                            (ec_op__doubled_points__x_column_row_expr198));
          inner_sum += random_coefficients[143] * constraint;
        }
        {
          // Constraint expression for ec_op/doubling_q/y:
          const FieldElementT constraint = ((ec_op__doubled_points__y_column_row_expr197) +
                                            (ec_op__doubled_points__y_column_row_expr199)) -
                                           ((ec_op__doubling_slope_column_row_expr195) *
                                            ((ec_op__doubled_points__x_column_row_expr196) -
                                             (ec_op__doubled_points__x_column_row_expr198)));
          inner_sum += random_coefficients[144] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/booleanity_test:
          const FieldElementT constraint = (ec_op__ec_subset_sum__bit_0) *
                                           ((ec_op__ec_subset_sum__bit_0) - (FieldElementT::One()));
          inner_sum += random_coefficients[153] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/add_points/slope:
          const FieldElementT constraint =
              ((ec_op__ec_subset_sum__bit_0) *
               ((ec_op__ec_subset_sum__partial_sum__y_column_row_expr213) -
                (ec_op__doubled_points__y_column_row_expr197))) -
              ((ec_op__ec_subset_sum__slope_column_row_expr216) *
               ((ec_op__ec_subset_sum__partial_sum__x_column_row_expr212) -
                (ec_op__doubled_points__x_column_row_expr196)));
          inner_sum += random_coefficients[156] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/add_points/x:
          const FieldElementT constraint =
              ((ec_op__ec_subset_sum__slope_column_row_expr216) *
               (ec_op__ec_subset_sum__slope_column_row_expr216)) -
              ((ec_op__ec_subset_sum__bit_0) *
               (((ec_op__ec_subset_sum__partial_sum__x_column_row_expr212) +
                 (ec_op__doubled_points__x_column_row_expr196)) +
                (ec_op__ec_subset_sum__partial_sum__x_column_row_expr214)));
          inner_sum += random_coefficients[157] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/add_points/y:
          const FieldElementT constraint =
              ((ec_op__ec_subset_sum__bit_0) *
               ((ec_op__ec_subset_sum__partial_sum__y_column_row_expr213) +
                (ec_op__ec_subset_sum__partial_sum__y_column_row_expr215))) -
              ((ec_op__ec_subset_sum__slope_column_row_expr216) *
               ((ec_op__ec_subset_sum__partial_sum__x_column_row_expr212) -
                (ec_op__ec_subset_sum__partial_sum__x_column_row_expr214)));
          inner_sum += random_coefficients[158] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/add_points/x_diff_inv:
          const FieldElementT constraint =
              ((ec_op__ec_subset_sum__x_diff_inv_column_row_expr217) *
               ((ec_op__ec_subset_sum__partial_sum__x_column_row_expr212) -
                (ec_op__doubled_points__x_column_row_expr196))) -
              (FieldElementT::One());
          inner_sum += random_coefficients[159] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/copy_point/x:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_neg_0) *
              ((ec_op__ec_subset_sum__partial_sum__x_column_row_expr214) -
               (ec_op__ec_subset_sum__partial_sum__x_column_row_expr212));
          inner_sum += random_coefficients[160] * constraint;
        }
        {
          // Constraint expression for ec_op/ec_subset_sum/copy_point/y:
          const FieldElementT constraint =
              (ec_op__ec_subset_sum__bit_neg_0) *
              ((ec_op__ec_subset_sum__partial_sum__y_column_row_expr215) -
               (ec_op__ec_subset_sum__partial_sum__y_column_row_expr213));
          inner_sum += random_coefficients[161] * constraint;
        }
        outer_sum += inner_sum * domain10;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain8);
    }

    {
      // Compute a sum of constraints with denominator = domain11.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/ec_subset_sum/bit_extraction_end:
          const FieldElementT constraint = ec_op__ec_subset_sum__selector_column_row_expr203;
          inner_sum += random_coefficients[154] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain11);
    }

    {
      // Compute a sum of constraints with denominator = domain10.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for ec_op/ec_subset_sum/zeros_tail:
          const FieldElementT constraint = ec_op__ec_subset_sum__selector_column_row_expr203;
          inner_sum += random_coefficients[155] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain10);
    }
  }

  if ((uses_keccak_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain165.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/init_input_output_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr225) - (initial_keccak_addr_);
          inner_sum += random_coefficients[167] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain165);
    }

    {
      // Compute a sum of constraints with denominator = domain23.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain166.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/addr_input_output_step:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr226) -
              ((mem_pool__addr_column_row_expr225) + (FieldElementT::One()));
          inner_sum += random_coefficients[168] * constraint;
        }
        outer_sum += inner_sum * domain166;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain23);
    }

    {
      // Compute a sum of constraints with denominator = domain28.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr228) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr227);
          inner_sum += random_coefficients[169] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w1:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr230) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr229);
          inner_sum += random_coefficients[170] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w2:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr232) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr231);
          inner_sum += random_coefficients[171] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w3:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr234) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr233);
          inner_sum += random_coefficients[172] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w4:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr236) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr235);
          inner_sum += random_coefficients[173] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w5:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr238) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr237);
          inner_sum += random_coefficients[174] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w6:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr240) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr239);
          inner_sum += random_coefficients[175] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate0_w7:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr242) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr241);
          inner_sum += random_coefficients[176] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w0:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr244) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr243);
          inner_sum += random_coefficients[177] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w1:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr246) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr245);
          inner_sum += random_coefficients[178] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w2:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr248) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr247);
          inner_sum += random_coefficients[179] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w3:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr250) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr249);
          inner_sum += random_coefficients[180] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w4:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr252) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr251);
          inner_sum += random_coefficients[181] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w5:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr254) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr253);
          inner_sum += random_coefficients[182] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w6:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr256) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr255);
          inner_sum += random_coefficients[183] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_intermediate1_w7:
          const FieldElementT constraint =
              (mem_pool__value_column_row_expr258) -
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr257);
          inner_sum += random_coefficients[184] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain28);
    }

    {
      // Compute a sum of constraints with denominator = domain31.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final0:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr227) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr259);
          inner_sum += random_coefficients[185] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final1:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr261) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr260);
          inner_sum += random_coefficients[186] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final2:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr263) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr262);
          inner_sum += random_coefficients[187] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final3:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr265) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr264);
          inner_sum += random_coefficients[188] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final4:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr267) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr266);
          inner_sum += random_coefficients[189] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final5:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr269) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr268);
          inner_sum += random_coefficients[190] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final6:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr271) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr270);
          inner_sum += random_coefficients[191] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final7:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr273) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr272);
          inner_sum += random_coefficients[192] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final8:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr275) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr274);
          inner_sum += random_coefficients[193] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final9:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr277) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr276);
          inner_sum += random_coefficients[194] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final10:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr279) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr278);
          inner_sum += random_coefficients[195] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final11:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr281) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr280);
          inner_sum += random_coefficients[196] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final12:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr283) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr282);
          inner_sum += random_coefficients[197] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final13:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr285) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr284);
          inner_sum += random_coefficients[198] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final14:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr287) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr286);
          inner_sum += random_coefficients[199] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/reshape_final15:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__reshaped_intermediate_column_row_expr289) -
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr288);
          inner_sum += random_coefficients[200] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain31);
    }

    {
      // Compute a sum of constraints with denominator = domain35.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/start_accumulation:
          const FieldElementT constraint =
              keccak__keccak__parse_to_diluted__cumulative_sum_column_row_expr290;
          inner_sum += random_coefficients[201] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain35);
    }

    {
      // Compute a sum of constraints with denominator = domain30.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation0:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr259) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances0_0);
          inner_sum += random_coefficients[202] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation1:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr296) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances1_0);
          inner_sum += random_coefficients[204] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation2:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr300) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances2_0);
          inner_sum += random_coefficients[206] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation3:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr304) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances3_0);
          inner_sum += random_coefficients[208] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation4:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr308) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances4_0);
          inner_sum += random_coefficients[210] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation5:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr312) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances5_0);
          inner_sum += random_coefficients[212] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation6:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr316) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances6_0);
          inner_sum += random_coefficients[214] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_first_invocation7:
          const FieldElementT constraint =
              (keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr319) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances7_0);
          inner_sum += random_coefficients[216] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain30);
    }

    {
      // Compute a sum of constraints with denominator = domain34.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations0:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr260) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances0_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances0_2);
          inner_sum += random_coefficients[203] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations1:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr298) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances1_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances1_2);
          inner_sum += random_coefficients[205] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations2:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr302) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances2_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances2_2);
          inner_sum += random_coefficients[207] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations3:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr306) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances3_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances3_2);
          inner_sum += random_coefficients[209] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations4:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr310) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances4_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances4_2);
          inner_sum += random_coefficients[211] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations5:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr314) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances5_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances5_2);
          inner_sum += random_coefficients[213] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations6:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr318) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances6_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances6_2);
          inner_sum += random_coefficients[215] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/init_other_invocations7:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__final_reshaped_input_column_row_expr321) +
               ((keccak__keccak__parse_to_diluted__sum_words_over_instances7_0) *
                (FieldElementT::ConstexprFromBigInt(0x10_Z)))) -
              (keccak__keccak__parse_to_diluted__sum_words_over_instances7_2);
          inner_sum += random_coefficients[217] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain34);
    }

    {
      // Compute a sum of constraints with denominator = domain38.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/extract_bit_first_invocation1:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__partial_diluted1_0) *
               (keccak__keccak__parse_to_diluted__partial_diluted1_0)) -
              (keccak__keccak__parse_to_diluted__partial_diluted1_0);
          inner_sum += random_coefficients[218] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain38);
    }

    {
      // Compute a sum of constraints with denominator = domain39.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for
          // keccak/keccak/parse_to_diluted/extract_bit_other_invocations1:
          const FieldElementT constraint = ((keccak__keccak__parse_to_diluted__bit_other1_0) *
                                            (keccak__keccak__parse_to_diluted__bit_other1_0)) -
                                           (keccak__keccak__parse_to_diluted__bit_other1_0);
          inner_sum += random_coefficients[219] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain39);
    }

    {
      // Compute a sum of constraints with denominator = domain40.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/to_diluted0_p1:
          const FieldElementT constraint = (keccak__keccak__parse_to_diluted__partial_diluted1_30) -
                                           (diluted_pool_column_row_expr326);
          inner_sum += random_coefficients[220] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/to_diluted1_p1:
          const FieldElementT constraint = (keccak__keccak__parse_to_diluted__partial_diluted1_31) -
                                           (diluted_pool_column_row_expr329);
          inner_sum += random_coefficients[221] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain40);
    }

    {
      // Compute a sum of constraints with denominator = domain22.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain44.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/extract_bit_first_invocation0:
          const FieldElementT constraint =
              ((keccak__keccak__parse_to_diluted__partial_diluted0_0) *
               (keccak__keccak__parse_to_diluted__partial_diluted0_0)) -
              (keccak__keccak__parse_to_diluted__partial_diluted0_0);
          inner_sum += random_coefficients[222] * constraint;
        }
        outer_sum += inner_sum * domain44;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain22);
    }

    {
      // Compute a sum of constraints with denominator = domain20.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain47.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for
          // keccak/keccak/parse_to_diluted/extract_bit_other_invocations0:
          const FieldElementT constraint = ((keccak__keccak__parse_to_diluted__bit_other0_0) *
                                            (keccak__keccak__parse_to_diluted__bit_other0_0)) -
                                           (keccak__keccak__parse_to_diluted__bit_other0_0);
          inner_sum += random_coefficients[223] * constraint;
        }
        outer_sum += inner_sum * domain47;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain20);
    }

    {
      // Compute a sum of constraints with denominator = domain21.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain48.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/to_diluted0_p0:
          const FieldElementT constraint = (keccak__keccak__parse_to_diluted__partial_diluted0_30) -
                                           (diluted_pool_column_row_expr334);
          inner_sum += random_coefficients[224] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parse_to_diluted/to_diluted1_p0:
          const FieldElementT constraint = (keccak__keccak__parse_to_diluted__partial_diluted0_31) -
                                           (diluted_pool_column_row_expr337);
          inner_sum += random_coefficients[225] * constraint;
        }
        outer_sum += inner_sum * domain48;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain21);
    }

    {
      // Compute a sum of constraints with denominator = domain25.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/parity0:
          const FieldElementT constraint =
              (((((diluted_pool_column_row_expr334) + (diluted_pool_column_row_expr341)) +
                 (diluted_pool_column_row_expr342)) +
                (diluted_pool_column_row_expr343)) +
               (diluted_pool_column_row_expr344)) -
              ((((diluted_pool_column_row_expr340) + (diluted_pool_column_row_expr345)) +
                (diluted_pool_column_row_expr345)) +
               ((diluted_pool_column_row_expr346) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[226] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parity1:
          const FieldElementT constraint =
              (((((diluted_pool_column_row_expr348) + (diluted_pool_column_row_expr349)) +
                 (diluted_pool_column_row_expr350)) +
                (diluted_pool_column_row_expr351)) +
               (diluted_pool_column_row_expr352)) -
              ((((diluted_pool_column_row_expr347) + (diluted_pool_column_row_expr353)) +
                (diluted_pool_column_row_expr353)) +
               ((diluted_pool_column_row_expr354) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[227] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parity2:
          const FieldElementT constraint =
              (((((diluted_pool_column_row_expr356) + (diluted_pool_column_row_expr357)) +
                 (diluted_pool_column_row_expr358)) +
                (diluted_pool_column_row_expr359)) +
               (diluted_pool_column_row_expr360)) -
              ((((diluted_pool_column_row_expr355) + (diluted_pool_column_row_expr361)) +
                (diluted_pool_column_row_expr361)) +
               ((diluted_pool_column_row_expr362) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[228] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parity3:
          const FieldElementT constraint =
              (((((diluted_pool_column_row_expr364) + (diluted_pool_column_row_expr365)) +
                 (diluted_pool_column_row_expr366)) +
                (diluted_pool_column_row_expr367)) +
               (diluted_pool_column_row_expr368)) -
              ((((diluted_pool_column_row_expr363) + (diluted_pool_column_row_expr369)) +
                (diluted_pool_column_row_expr369)) +
               ((diluted_pool_column_row_expr370) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[229] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/parity4:
          const FieldElementT constraint =
              (((((diluted_pool_column_row_expr372) + (diluted_pool_column_row_expr373)) +
                 (diluted_pool_column_row_expr374)) +
                (diluted_pool_column_row_expr375)) +
               (diluted_pool_column_row_expr376)) -
              ((((diluted_pool_column_row_expr371) + (diluted_pool_column_row_expr377)) +
                (diluted_pool_column_row_expr377)) +
               ((diluted_pool_column_row_expr378) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[230] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_0) + (diluted_pool_column_row_expr334)) -
              (((diluted_pool_column_row_expr394) + (diluted_pool_column_row_expr395)) +
               (diluted_pool_column_row_expr395));
          inner_sum += random_coefficients[241] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain50.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/rotate_parity0/n1:
          const FieldElementT constraint = (keccak__keccak__rotated_parity0_column_row_expr379) -
                                           (diluted_pool_column_row_expr340);
          inner_sum += random_coefficients[232] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity1/n1:
          const FieldElementT constraint = (keccak__keccak__rotated_parity1_column_row_expr382) -
                                           (diluted_pool_column_row_expr347);
          inner_sum += random_coefficients[234] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity2/n1:
          const FieldElementT constraint = (keccak__keccak__rotated_parity2_column_row_expr385) -
                                           (diluted_pool_column_row_expr355);
          inner_sum += random_coefficients[236] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity3/n1:
          const FieldElementT constraint = (keccak__keccak__rotated_parity3_column_row_expr388) -
                                           (diluted_pool_column_row_expr363);
          inner_sum += random_coefficients[238] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity4/n1:
          const FieldElementT constraint = (keccak__keccak__rotated_parity4_column_row_expr391) -
                                           (diluted_pool_column_row_expr371);
          inner_sum += random_coefficients[240] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j1/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_0) + (diluted_pool_column_row_expr348)) -
              (((diluted_pool_column_row_expr397) + (diluted_pool_column_row_expr398)) +
               (diluted_pool_column_row_expr398));
          inner_sum += random_coefficients[242] * constraint;
        }
        outer_sum += inner_sum * domain50;
      }

      {
        // Compute a sum of constraints with numerator = domain52.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j2/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_2048) + (diluted_pool_column_row_expr407)) -
              (((diluted_pool_column_row_expr402) + (diluted_pool_column_row_expr408)) +
               (diluted_pool_column_row_expr408));
          inner_sum += random_coefficients[245] * constraint;
        }
        outer_sum += inner_sum * domain52;
      }

      {
        // Compute a sum of constraints with numerator = domain78.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j3/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_0) + (diluted_pool_column_row_expr364)) -
              (((diluted_pool_column_row_expr410) + (diluted_pool_column_row_expr411)) +
               (diluted_pool_column_row_expr411));
          inner_sum += random_coefficients[246] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j0/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_28672) + (diluted_pool_column_row_expr428)) -
              (((diluted_pool_column_row_expr423) + (diluted_pool_column_row_expr429)) +
               (diluted_pool_column_row_expr429));
          inner_sum += random_coefficients[251] * constraint;
        }
        outer_sum += inner_sum * domain78;
      }

      {
        // Compute a sum of constraints with numerator = domain77.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j4/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_0) + (diluted_pool_column_row_expr372)) -
              (((diluted_pool_column_row_expr417) + (diluted_pool_column_row_expr418)) +
               (diluted_pool_column_row_expr418));
          inner_sum += random_coefficients[248] * constraint;
        }
        outer_sum += inner_sum * domain77;
      }

      {
        // Compute a sum of constraints with numerator = domain71.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j1/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_20480) + (diluted_pool_column_row_expr435)) -
              (((diluted_pool_column_row_expr430) + (diluted_pool_column_row_expr436)) +
               (diluted_pool_column_row_expr436));
          inner_sum += random_coefficients[253] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j4/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_0) + (diluted_pool_column_row_expr373)) -
              (((diluted_pool_column_row_expr472) + (diluted_pool_column_row_expr473)) +
               (diluted_pool_column_row_expr473));
          inner_sum += random_coefficients[262] * constraint;
        }
        outer_sum += inner_sum * domain71;
      }

      {
        // Compute a sum of constraints with numerator = domain56.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j2/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_0) + (diluted_pool_column_row_expr357)) -
              (((diluted_pool_column_row_expr438) + (diluted_pool_column_row_expr439)) +
               (diluted_pool_column_row_expr439));
          inner_sum += random_coefficients[254] * constraint;
        }
        outer_sum += inner_sum * domain56;
      }

      {
        // Compute a sum of constraints with numerator = domain54.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j0/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_0) + (diluted_pool_column_row_expr342)) -
              (((diluted_pool_column_row_expr479) + (diluted_pool_column_row_expr480)) +
               (diluted_pool_column_row_expr480));
          inner_sum += random_coefficients[264] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j2/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_3072) + (diluted_pool_column_row_expr627)) -
              (((diluted_pool_column_row_expr622) + (diluted_pool_column_row_expr628)) +
               (diluted_pool_column_row_expr628));
          inner_sum += random_coefficients[301] * constraint;
        }
        outer_sum += inner_sum * domain54;
      }

      {
        // Compute a sum of constraints with numerator = domain61.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j1/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_0) + (diluted_pool_column_row_expr350)) -
              (((diluted_pool_column_row_expr486) + (diluted_pool_column_row_expr487)) +
               (diluted_pool_column_row_expr487));
          inner_sum += random_coefficients[266] * constraint;
        }
        outer_sum += inner_sum * domain61;
      }

      {
        // Compute a sum of constraints with numerator = domain73.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j2/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_21504) + (diluted_pool_column_row_expr497)) -
              (((diluted_pool_column_row_expr492) + (diluted_pool_column_row_expr498)) +
               (diluted_pool_column_row_expr498));
          inner_sum += random_coefficients[269] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j3/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_0) + (diluted_pool_column_row_expr367)) -
              (((diluted_pool_column_row_expr575) + (diluted_pool_column_row_expr576)) +
               (diluted_pool_column_row_expr576));
          inner_sum += random_coefficients[288] * constraint;
        }
        outer_sum += inner_sum * domain73;
      }

      {
        // Compute a sum of constraints with numerator = domain76.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j3/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_0) + (diluted_pool_column_row_expr366)) -
              (((diluted_pool_column_row_expr500) + (diluted_pool_column_row_expr501)) +
               (diluted_pool_column_row_expr501));
          inner_sum += random_coefficients[270] * constraint;
        }
        outer_sum += inner_sum * domain76;
      }

      {
        // Compute a sum of constraints with numerator = domain69.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j1/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_19456) + (diluted_pool_column_row_expr565)) -
              (((diluted_pool_column_row_expr560) + (diluted_pool_column_row_expr566)) +
               (diluted_pool_column_row_expr566));
          inner_sum += random_coefficients[285] * constraint;
        }
        outer_sum += inner_sum * domain69;
      }

      {
        // Compute a sum of constraints with numerator = domain65.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j2/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_0) + (diluted_pool_column_row_expr359)) -
              (((diluted_pool_column_row_expr568) + (diluted_pool_column_row_expr569)) +
               (diluted_pool_column_row_expr569));
          inner_sum += random_coefficients[286] * constraint;
        }
        outer_sum += inner_sum * domain65;
      }

      {
        // Compute a sum of constraints with numerator = domain58.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j4/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_0) + (diluted_pool_column_row_expr375)) -
              (((diluted_pool_column_row_expr582) + (diluted_pool_column_row_expr583)) +
               (diluted_pool_column_row_expr583));
          inner_sum += random_coefficients[290] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j3/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_8192) + (diluted_pool_column_row_expr634)) -
              (((diluted_pool_column_row_expr629) + (diluted_pool_column_row_expr635)) +
               (diluted_pool_column_row_expr635));
          inner_sum += random_coefficients[303] * constraint;
        }
        outer_sum += inner_sum * domain58;
      }

      {
        // Compute a sum of constraints with numerator = domain67.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j0/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_0) + (diluted_pool_column_row_expr344)) -
              (((diluted_pool_column_row_expr589) + (diluted_pool_column_row_expr590)) +
               (diluted_pool_column_row_expr590));
          inner_sum += random_coefficients[292] * constraint;
        }
        outer_sum += inner_sum * domain67;
      }

      {
        // Compute a sum of constraints with numerator = domain63.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j4/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_0) + (diluted_pool_column_row_expr376)) -
              (((diluted_pool_column_row_expr637) + (diluted_pool_column_row_expr638)) +
               (diluted_pool_column_row_expr638));
          inner_sum += random_coefficients[304] * constraint;
        }
        outer_sum += inner_sum * domain63;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain25);
    }

    {
      // Compute a sum of constraints with denominator = domain33.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/rotate_parity0/n0:
          const FieldElementT constraint = (keccak__keccak__rotated_parity0_column_row_expr380) -
                                           (diluted_pool_column_row_expr381);
          inner_sum += random_coefficients[231] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity1/n0:
          const FieldElementT constraint = (keccak__keccak__rotated_parity1_column_row_expr383) -
                                           (diluted_pool_column_row_expr384);
          inner_sum += random_coefficients[233] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity2/n0:
          const FieldElementT constraint = (keccak__keccak__rotated_parity2_column_row_expr386) -
                                           (diluted_pool_column_row_expr387);
          inner_sum += random_coefficients[235] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity3/n0:
          const FieldElementT constraint = (keccak__keccak__rotated_parity3_column_row_expr389) -
                                           (diluted_pool_column_row_expr390);
          inner_sum += random_coefficients[237] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/rotate_parity4/n0:
          const FieldElementT constraint = (keccak__keccak__rotated_parity4_column_row_expr392) -
                                           (diluted_pool_column_row_expr393);
          inner_sum += random_coefficients[239] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j1/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_64512) + (diluted_pool_column_row_expr400)) -
              (((diluted_pool_column_row_expr396) + (diluted_pool_column_row_expr401)) +
               (diluted_pool_column_row_expr401));
          inner_sum += random_coefficients[243] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota0:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key0) + (diluted_pool_column_row_expr394)) +
                 (diluted_pool_column_row_expr394)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_32)) +
               (diluted_pool_column_row_expr492)) -
              ((((diluted_pool_column_row_expr644) + (diluted_pool_column_row_expr643)) +
                (diluted_pool_column_row_expr643)) +
               ((diluted_pool_column_row_expr645) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[306] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota1:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key1) + (diluted_pool_column_row_expr647)) +
                 (diluted_pool_column_row_expr647)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_1056)) +
               (diluted_pool_column_row_expr649)) -
              ((((diluted_pool_column_row_expr650) + (diluted_pool_column_row_expr646)) +
                (diluted_pool_column_row_expr646)) +
               ((diluted_pool_column_row_expr651) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[307] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota3:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key3) + (diluted_pool_column_row_expr653)) +
                 (diluted_pool_column_row_expr653)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_3104)) +
               (diluted_pool_column_row_expr655)) -
              ((((diluted_pool_column_row_expr656) + (diluted_pool_column_row_expr652)) +
                (diluted_pool_column_row_expr652)) +
               ((diluted_pool_column_row_expr657) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[308] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota7:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key7) + (diluted_pool_column_row_expr659)) +
                 (diluted_pool_column_row_expr659)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_7200)) +
               (diluted_pool_column_row_expr661)) -
              ((((diluted_pool_column_row_expr662) + (diluted_pool_column_row_expr658)) +
                (diluted_pool_column_row_expr658)) +
               ((diluted_pool_column_row_expr663) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[309] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota15:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key15) + (diluted_pool_column_row_expr665)) +
                 (diluted_pool_column_row_expr665)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_15392)) +
               (diluted_pool_column_row_expr667)) -
              ((((diluted_pool_column_row_expr668) + (diluted_pool_column_row_expr664)) +
                (diluted_pool_column_row_expr664)) +
               ((diluted_pool_column_row_expr669) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[310] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota31:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key31) + (diluted_pool_column_row_expr671)) +
                 (diluted_pool_column_row_expr671)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_31776)) +
               (diluted_pool_column_row_expr673)) -
              ((((diluted_pool_column_row_expr674) + (diluted_pool_column_row_expr670)) +
                (diluted_pool_column_row_expr670)) +
               ((diluted_pool_column_row_expr675) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[311] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi_iota63:
          const FieldElementT constraint =
              (((((keccak__keccak__keccak_round_key63) + (diluted_pool_column_row_expr677)) +
                 (diluted_pool_column_row_expr677)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_64544)) +
               (diluted_pool_column_row_expr679)) -
              ((((diluted_pool_column_row_expr680) + (diluted_pool_column_row_expr676)) +
                (diluted_pool_column_row_expr676)) +
               ((diluted_pool_column_row_expr681) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[312] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain33);
    }

    {
      // Compute a sum of constraints with denominator = domain81.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j2/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_0) + (diluted_pool_column_row_expr356)) -
              (((diluted_pool_column_row_expr403) + (diluted_pool_column_row_expr404)) +
               (diluted_pool_column_row_expr404));
          inner_sum += random_coefficients[244] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain81);
    }

    {
      // Compute a sum of constraints with denominator = domain110.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j3/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_36864) + (diluted_pool_column_row_expr414)) -
              (((diluted_pool_column_row_expr409) + (diluted_pool_column_row_expr415)) +
               (diluted_pool_column_row_expr415));
          inner_sum += random_coefficients[247] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j0/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_0) + (diluted_pool_column_row_expr341)) -
              (((diluted_pool_column_row_expr424) + (diluted_pool_column_row_expr425)) +
               (diluted_pool_column_row_expr425));
          inner_sum += random_coefficients[250] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain110);
    }

    {
      // Compute a sum of constraints with denominator = domain109.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i0_j4/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_37888) + (diluted_pool_column_row_expr421)) -
              (((diluted_pool_column_row_expr416) + (diluted_pool_column_row_expr422)) +
               (diluted_pool_column_row_expr422));
          inner_sum += random_coefficients[249] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain109);
    }

    {
      // Compute a sum of constraints with denominator = domain103.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j1/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_0) + (diluted_pool_column_row_expr349)) -
              (((diluted_pool_column_row_expr431) + (diluted_pool_column_row_expr432)) +
               (diluted_pool_column_row_expr432));
          inner_sum += random_coefficients[252] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j4/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_45056) + (diluted_pool_column_row_expr476)) -
              (((diluted_pool_column_row_expr471) + (diluted_pool_column_row_expr477)) +
               (diluted_pool_column_row_expr477));
          inner_sum += random_coefficients[263] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain103);
    }

    {
      // Compute a sum of constraints with denominator = domain86.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j2/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_59392) + (diluted_pool_column_row_expr442)) -
              (((diluted_pool_column_row_expr437) + (diluted_pool_column_row_expr443)) +
               (diluted_pool_column_row_expr443));
          inner_sum += random_coefficients[255] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain86);
    }

    {
      // Compute a sum of constraints with denominator = domain113.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_0) + (diluted_pool_column_row_expr365)) -
              (((diluted_pool_column_row_expr445) + (diluted_pool_column_row_expr446)) +
               (diluted_pool_column_row_expr446));
          inner_sum += random_coefficients[256] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_8) + (diluted_pool_column_row_expr449)) -
              (((diluted_pool_column_row_expr450) + (diluted_pool_column_row_expr451)) +
               (diluted_pool_column_row_expr451));
          inner_sum += random_coefficients[257] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n2:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_16) + (diluted_pool_column_row_expr454)) -
              (((diluted_pool_column_row_expr455) + (diluted_pool_column_row_expr456)) +
               (diluted_pool_column_row_expr456));
          inner_sum += random_coefficients[258] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain113);
    }

    {
      // Compute a sum of constraints with denominator = domain24.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain116.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n3:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_9216) + (diluted_pool_column_row_expr459)) -
              (((diluted_pool_column_row_expr460) + (diluted_pool_column_row_expr461)) +
               (diluted_pool_column_row_expr461));
          inner_sum += random_coefficients[259] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n4:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_9224) + (diluted_pool_column_row_expr464)) -
              (((diluted_pool_column_row_expr465) + (diluted_pool_column_row_expr466)) +
               (diluted_pool_column_row_expr466));
          inner_sum += random_coefficients[260] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i1_j3/n5:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_9232) + (diluted_pool_column_row_expr469)) -
              (((diluted_pool_column_row_expr444) + (diluted_pool_column_row_expr470)) +
               (diluted_pool_column_row_expr470));
          inner_sum += random_coefficients[261] * constraint;
        }
        outer_sum += inner_sum * domain116;
      }

      {
        // Compute a sum of constraints with numerator = domain118.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n3:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_25600) + (diluted_pool_column_row_expr521)) -
              (((diluted_pool_column_row_expr522) + (diluted_pool_column_row_expr523)) +
               (diluted_pool_column_row_expr523));
          inner_sum += random_coefficients[275] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n4:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_25608) + (diluted_pool_column_row_expr526)) -
              (((diluted_pool_column_row_expr527) + (diluted_pool_column_row_expr528)) +
               (diluted_pool_column_row_expr528));
          inner_sum += random_coefficients[276] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n5:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_25616) + (diluted_pool_column_row_expr531)) -
              (((diluted_pool_column_row_expr506) + (diluted_pool_column_row_expr532)) +
               (diluted_pool_column_row_expr532));
          inner_sum += random_coefficients[277] * constraint;
        }
        outer_sum += inner_sum * domain118;
      }

      {
        // Compute a sum of constraints with numerator = domain119.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n3:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_23552) + (diluted_pool_column_row_expr548)) -
              (((diluted_pool_column_row_expr549) + (diluted_pool_column_row_expr550)) +
               (diluted_pool_column_row_expr550));
          inner_sum += random_coefficients[281] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n4:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_23560) + (diluted_pool_column_row_expr553)) -
              (((diluted_pool_column_row_expr554) + (diluted_pool_column_row_expr555)) +
               (diluted_pool_column_row_expr555));
          inner_sum += random_coefficients[282] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n5:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_23568) + (diluted_pool_column_row_expr558)) -
              (((diluted_pool_column_row_expr533) + (diluted_pool_column_row_expr559)) +
               (diluted_pool_column_row_expr559));
          inner_sum += random_coefficients[283] * constraint;
        }
        outer_sum += inner_sum * domain119;
      }

      {
        // Compute a sum of constraints with numerator = domain114.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_0) + (diluted_pool_column_row_expr352)) -
              (((diluted_pool_column_row_expr596) + (diluted_pool_column_row_expr597)) +
               (diluted_pool_column_row_expr597));
          inner_sum += random_coefficients[294] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_8) + (diluted_pool_column_row_expr600)) -
              (((diluted_pool_column_row_expr601) + (diluted_pool_column_row_expr602)) +
               (diluted_pool_column_row_expr602));
          inner_sum += random_coefficients[295] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n2:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_16) + (diluted_pool_column_row_expr605)) -
              (((diluted_pool_column_row_expr606) + (diluted_pool_column_row_expr607)) +
               (diluted_pool_column_row_expr607));
          inner_sum += random_coefficients[296] * constraint;
        }
        outer_sum += inner_sum * domain114;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain24);
    }

    {
      // Compute a sum of constraints with denominator = domain120.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j0/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_62464) + (diluted_pool_column_row_expr483)) -
              (((diluted_pool_column_row_expr478) + (diluted_pool_column_row_expr484)) +
               (diluted_pool_column_row_expr484));
          inner_sum += random_coefficients[265] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j2/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_0) + (diluted_pool_column_row_expr360)) -
              (((diluted_pool_column_row_expr623) + (diluted_pool_column_row_expr624)) +
               (diluted_pool_column_row_expr624));
          inner_sum += random_coefficients[300] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain120);
    }

    {
      // Compute a sum of constraints with denominator = domain92.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j1/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_55296) + (diluted_pool_column_row_expr490)) -
              (((diluted_pool_column_row_expr485) + (diluted_pool_column_row_expr491)) +
               (diluted_pool_column_row_expr491));
          inner_sum += random_coefficients[267] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain92);
    }

    {
      // Compute a sum of constraints with denominator = domain105.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j2/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_0) + (diluted_pool_column_row_expr358)) -
              (((diluted_pool_column_row_expr493) + (diluted_pool_column_row_expr494)) +
               (diluted_pool_column_row_expr494));
          inner_sum += random_coefficients[268] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j3/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_44032) + (diluted_pool_column_row_expr579)) -
              (((diluted_pool_column_row_expr574) + (diluted_pool_column_row_expr580)) +
               (diluted_pool_column_row_expr580));
          inner_sum += random_coefficients[289] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain105);
    }

    {
      // Compute a sum of constraints with denominator = domain108.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j3/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_39936) + (diluted_pool_column_row_expr504)) -
              (((diluted_pool_column_row_expr499) + (diluted_pool_column_row_expr505)) +
               (diluted_pool_column_row_expr505));
          inner_sum += random_coefficients[271] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain108);
    }

    {
      // Compute a sum of constraints with denominator = domain122.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_0) + (diluted_pool_column_row_expr374)) -
              (((diluted_pool_column_row_expr507) + (diluted_pool_column_row_expr508)) +
               (diluted_pool_column_row_expr508));
          inner_sum += random_coefficients[272] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_8) + (diluted_pool_column_row_expr511)) -
              (((diluted_pool_column_row_expr512) + (diluted_pool_column_row_expr513)) +
               (diluted_pool_column_row_expr513));
          inner_sum += random_coefficients[273] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i2_j4/n2:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_16) + (diluted_pool_column_row_expr516)) -
              (((diluted_pool_column_row_expr517) + (diluted_pool_column_row_expr518)) +
               (diluted_pool_column_row_expr518));
          inner_sum += random_coefficients[274] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain122);
    }

    {
      // Compute a sum of constraints with denominator = domain123.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_0) + (diluted_pool_column_row_expr343)) -
              (((diluted_pool_column_row_expr534) + (diluted_pool_column_row_expr535)) +
               (diluted_pool_column_row_expr535));
          inner_sum += random_coefficients[278] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_8) + (diluted_pool_column_row_expr538)) -
              (((diluted_pool_column_row_expr539) + (diluted_pool_column_row_expr540)) +
               (diluted_pool_column_row_expr540));
          inner_sum += random_coefficients[279] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j0/n2:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_16) + (diluted_pool_column_row_expr543)) -
              (((diluted_pool_column_row_expr544) + (diluted_pool_column_row_expr545)) +
               (diluted_pool_column_row_expr545));
          inner_sum += random_coefficients[280] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain123);
    }

    {
      // Compute a sum of constraints with denominator = domain124.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j1/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_0) + (diluted_pool_column_row_expr351)) -
              (((diluted_pool_column_row_expr561) + (diluted_pool_column_row_expr562)) +
               (diluted_pool_column_row_expr562));
          inner_sum += random_coefficients[284] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain124);
    }

    {
      // Compute a sum of constraints with denominator = domain125.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j2/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities2_50176) + (diluted_pool_column_row_expr572)) -
              (((diluted_pool_column_row_expr567) + (diluted_pool_column_row_expr573)) +
               (diluted_pool_column_row_expr573));
          inner_sum += random_coefficients[287] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain125);
    }

    {
      // Compute a sum of constraints with denominator = domain126.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i3_j4/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_57344) + (diluted_pool_column_row_expr586)) -
              (((diluted_pool_column_row_expr581) + (diluted_pool_column_row_expr587)) +
               (diluted_pool_column_row_expr587));
          inner_sum += random_coefficients[291] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j3/n0:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities3_0) + (diluted_pool_column_row_expr368)) -
              (((diluted_pool_column_row_expr630) + (diluted_pool_column_row_expr631)) +
               (diluted_pool_column_row_expr631));
          inner_sum += random_coefficients[302] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain126);
    }

    {
      // Compute a sum of constraints with denominator = domain127.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j0/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities0_47104) + (diluted_pool_column_row_expr593)) -
              (((diluted_pool_column_row_expr588) + (diluted_pool_column_row_expr594)) +
               (diluted_pool_column_row_expr594));
          inner_sum += random_coefficients[293] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain127);
    }

    {
      // Compute a sum of constraints with denominator = domain111.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n3:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_63488) + (diluted_pool_column_row_expr610)) -
              (((diluted_pool_column_row_expr611) + (diluted_pool_column_row_expr612)) +
               (diluted_pool_column_row_expr612));
          inner_sum += random_coefficients[297] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n4:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_63496) + (diluted_pool_column_row_expr615)) -
              (((diluted_pool_column_row_expr616) + (diluted_pool_column_row_expr617)) +
               (diluted_pool_column_row_expr617));
          inner_sum += random_coefficients[298] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j1/n5:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities1_63504) + (diluted_pool_column_row_expr620)) -
              (((diluted_pool_column_row_expr595) + (diluted_pool_column_row_expr621)) +
               (diluted_pool_column_row_expr621));
          inner_sum += random_coefficients[299] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain111);
    }

    {
      // Compute a sum of constraints with denominator = domain128.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/theta_rho_pi_i4_j4/n1:
          const FieldElementT constraint =
              ((keccak__keccak__sum_parities4_51200) + (diluted_pool_column_row_expr641)) -
              (((diluted_pool_column_row_expr636) + (diluted_pool_column_row_expr642)) +
               (diluted_pool_column_row_expr642));
          inner_sum += random_coefficients[305] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain128);
    }

    {
      // Compute a sum of constraints with denominator = domain27.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain129.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/chi0:
          const FieldElementT constraint =
              ((((diluted_pool_column_row_expr394) + (diluted_pool_column_row_expr394)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_32)) +
               (diluted_pool_column_row_expr492)) -
              ((((diluted_pool_column_row_expr644) + (diluted_pool_column_row_expr643)) +
                (diluted_pool_column_row_expr643)) +
               ((diluted_pool_column_row_expr645) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[313] * constraint;
        }
        outer_sum += inner_sum * domain129;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain27);
    }

    {
      // Compute a sum of constraints with denominator = domain26.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for keccak/keccak/chi1:
          const FieldElementT constraint =
              ((((diluted_pool_column_row_expr636) + (diluted_pool_column_row_expr636)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_0)) +
               (diluted_pool_column_row_expr430)) -
              ((((diluted_pool_column_row_expr683) + (diluted_pool_column_row_expr682)) +
                (diluted_pool_column_row_expr682)) +
               ((diluted_pool_column_row_expr684) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[314] * constraint;
        }
        {
          // Constraint expression for keccak/keccak/chi2:
          const FieldElementT constraint =
              ((((diluted_pool_column_row_expr574) + (diluted_pool_column_row_expr574)) +
                (keccak__keccak__after_theta_rho_pi_xor_one_128)) +
               (diluted_pool_column_row_expr394)) -
              ((((diluted_pool_column_row_expr686) + (diluted_pool_column_row_expr685)) +
                (diluted_pool_column_row_expr685)) +
               ((diluted_pool_column_row_expr687) * (FieldElementT::ConstexprFromBigInt(0x4_Z))));
          inner_sum += random_coefficients[315] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain26);
    }
  }

  if ((uses_poseidon_builtin) != (0)) {
    {
      // Compute a sum of constraints with denominator = domain167.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/param_0/init_input_output_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr688) - (initial_poseidon_addr_);
          inner_sum += random_coefficients[316] * constraint;
        }
        {
          // Constraint expression for poseidon/param_1/init_input_output_addr:
          const FieldElementT constraint = (mem_pool__addr_column_row_expr690) -
                                           ((initial_poseidon_addr_) + (FieldElementT::One()));
          inner_sum += random_coefficients[318] * constraint;
        }
        {
          // Constraint expression for poseidon/param_2/init_input_output_addr:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr692) -
              ((initial_poseidon_addr_) + (FieldElementT::ConstexprFromBigInt(0x2_Z)));
          inner_sum += random_coefficients[320] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain167);
    }

    {
      // Compute a sum of constraints with denominator = domain141.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain168.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/param_0/addr_input_output_step:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr689) -
              ((mem_pool__addr_column_row_expr688) + (FieldElementT::ConstexprFromBigInt(0x3_Z)));
          inner_sum += random_coefficients[317] * constraint;
        }
        {
          // Constraint expression for poseidon/param_1/addr_input_output_step:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr691) -
              ((mem_pool__addr_column_row_expr690) + (FieldElementT::ConstexprFromBigInt(0x3_Z)));
          inner_sum += random_coefficients[319] * constraint;
        }
        {
          // Constraint expression for poseidon/param_2/addr_input_output_step:
          const FieldElementT constraint =
              (mem_pool__addr_column_row_expr693) -
              ((mem_pool__addr_column_row_expr692) + (FieldElementT::ConstexprFromBigInt(0x3_Z)));
          inner_sum += random_coefficients[321] * constraint;
        }
        outer_sum += inner_sum * domain168;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain141);
    }

    {
      // Compute a sum of constraints with denominator = domain140.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/full_rounds_state0_squaring:
          const FieldElementT constraint =
              ((poseidon__poseidon__full_rounds_state0_column_row_expr695) *
               (poseidon__poseidon__full_rounds_state0_column_row_expr695)) -
              (poseidon__poseidon__full_rounds_state0_squared_column_row_expr694);
          inner_sum += random_coefficients[322] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/full_rounds_state1_squaring:
          const FieldElementT constraint =
              ((poseidon__poseidon__full_rounds_state1_column_row_expr697) *
               (poseidon__poseidon__full_rounds_state1_column_row_expr697)) -
              (poseidon__poseidon__full_rounds_state1_squared_column_row_expr696);
          inner_sum += random_coefficients[323] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/full_rounds_state2_squaring:
          const FieldElementT constraint =
              ((poseidon__poseidon__full_rounds_state2_column_row_expr699) *
               (poseidon__poseidon__full_rounds_state2_column_row_expr699)) -
              (poseidon__poseidon__full_rounds_state2_squared_column_row_expr698);
          inner_sum += random_coefficients[324] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain142.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/full_round0:
          const FieldElementT constraint =
              (poseidon__poseidon__full_rounds_state0_column_row_expr707) -
              ((((((poseidon__poseidon__full_rounds_state0_cubed_0) +
                   (poseidon__poseidon__full_rounds_state0_cubed_0)) +
                  (poseidon__poseidon__full_rounds_state0_cubed_0)) +
                 (poseidon__poseidon__full_rounds_state1_cubed_0)) +
                (poseidon__poseidon__full_rounds_state2_cubed_0)) +
               (poseidon__poseidon__full_round_key0));
          inner_sum += random_coefficients[330] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/full_round1:
          const FieldElementT constraint =
              ((poseidon__poseidon__full_rounds_state1_column_row_expr708) +
               (poseidon__poseidon__full_rounds_state1_cubed_0)) -
              (((poseidon__poseidon__full_rounds_state0_cubed_0) +
                (poseidon__poseidon__full_rounds_state2_cubed_0)) +
               (poseidon__poseidon__full_round_key1));
          inner_sum += random_coefficients[331] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/full_round2:
          const FieldElementT constraint =
              (((poseidon__poseidon__full_rounds_state2_column_row_expr709) +
                (poseidon__poseidon__full_rounds_state2_cubed_0)) +
               (poseidon__poseidon__full_rounds_state2_cubed_0)) -
              (((poseidon__poseidon__full_rounds_state0_cubed_0) +
                (poseidon__poseidon__full_rounds_state1_cubed_0)) +
               (poseidon__poseidon__full_round_key2));
          inner_sum += random_coefficients[332] * constraint;
        }
        outer_sum += inner_sum * domain142;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain140);
    }

    {
      // Compute a sum of constraints with denominator = domain138.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/partial_rounds_state0_squaring:
          const FieldElementT constraint =
              ((poseidon__poseidon__partial_rounds_state0_column_row_expr701) *
               (poseidon__poseidon__partial_rounds_state0_column_row_expr701)) -
              (poseidon__poseidon__partial_rounds_state0_squared_column_row_expr700);
          inner_sum += random_coefficients[325] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }

      {
        // Compute a sum of constraints with numerator = domain144.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/partial_round0:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr733) -
              ((((((((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                     (poseidon__poseidon__partial_rounds_state0_cubed_0)) +
                    ((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                     (poseidon__poseidon__partial_rounds_state0_column_row_expr730))) +
                   ((FieldElementT::ConstexprFromBigInt(0x6_Z)) *
                    (poseidon__poseidon__partial_rounds_state0_cubed_1))) +
                  (poseidon__poseidon__partial_rounds_state0_column_row_expr731)) +
                 (poseidon__poseidon__partial_rounds_state0_column_row_expr731)) +
                ((FieldElementT::ConstexprFromBigInt(
                     0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff_Z)) *
                 (poseidon__poseidon__partial_rounds_state0_cubed_2))) +
               (poseidon__poseidon__partial_round_key0));
          inner_sum += random_coefficients[342] * constraint;
        }
        outer_sum += inner_sum * domain144;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain138);
    }

    {
      // Compute a sum of constraints with denominator = domain139.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = domain145.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/partial_rounds_state1_squaring:
          const FieldElementT constraint =
              ((poseidon__poseidon__partial_rounds_state1_column_row_expr703) *
               (poseidon__poseidon__partial_rounds_state1_column_row_expr703)) -
              (poseidon__poseidon__partial_rounds_state1_squared_column_row_expr702);
          inner_sum += random_coefficients[326] * constraint;
        }
        outer_sum += inner_sum * domain145;
      }

      {
        // Compute a sum of constraints with numerator = domain146.
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/partial_round1:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state1_column_row_expr735) -
              ((((((((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                     (poseidon__poseidon__partial_rounds_state1_cubed_0)) +
                    ((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                     (poseidon__poseidon__partial_rounds_state1_column_row_expr720))) +
                   ((FieldElementT::ConstexprFromBigInt(0x6_Z)) *
                    (poseidon__poseidon__partial_rounds_state1_cubed_1))) +
                  (poseidon__poseidon__partial_rounds_state1_column_row_expr722)) +
                 (poseidon__poseidon__partial_rounds_state1_column_row_expr722)) +
                ((FieldElementT::ConstexprFromBigInt(
                     0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff_Z)) *
                 (poseidon__poseidon__partial_rounds_state1_cubed_2))) +
               (poseidon__poseidon__partial_round_key1));
          inner_sum += random_coefficients[343] * constraint;
        }
        outer_sum += inner_sum * domain146;
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain139);
    }

    {
      // Compute a sum of constraints with denominator = domain147.
      FieldElementT outer_sum = FieldElementT::Zero();

      {
        // Compute a sum of constraints with numerator = FieldElementT::One().
        FieldElementT inner_sum = FieldElementT::Zero();
        {
          // Constraint expression for poseidon/poseidon/add_first_round_key0:
          const FieldElementT constraint =
              ((mem_pool__value_column_row_expr704) +
               (FieldElementT::ConstexprFromBigInt(
                   0x6861759ea556a2339dd92f9562a30b9e58e2ad98109ae4780b7fd8eac77fe6f_Z))) -
              (poseidon__poseidon__full_rounds_state0_column_row_expr695);
          inner_sum += random_coefficients[327] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/add_first_round_key1:
          const FieldElementT constraint =
              ((mem_pool__value_column_row_expr705) +
               (FieldElementT::ConstexprFromBigInt(
                   0x3827681995d5af9ffc8397a3d00425a3da43f76abf28a64e4ab1a22f27508c4_Z))) -
              (poseidon__poseidon__full_rounds_state1_column_row_expr697);
          inner_sum += random_coefficients[328] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/add_first_round_key2:
          const FieldElementT constraint =
              ((mem_pool__value_column_row_expr706) +
               (FieldElementT::ConstexprFromBigInt(
                   0x3a3956d2fad44d0e7f760a2277dc7cb2cac75dc279b2d687a0dbe17704a8309_Z))) -
              (poseidon__poseidon__full_rounds_state2_column_row_expr699);
          inner_sum += random_coefficients[329] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/last_full_round0:
          const FieldElementT constraint = (mem_pool__value_column_row_expr710) -
                                           (((((poseidon__poseidon__full_rounds_state0_cubed_7) +
                                               (poseidon__poseidon__full_rounds_state0_cubed_7)) +
                                              (poseidon__poseidon__full_rounds_state0_cubed_7)) +
                                             (poseidon__poseidon__full_rounds_state1_cubed_7)) +
                                            (poseidon__poseidon__full_rounds_state2_cubed_7));
          inner_sum += random_coefficients[333] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/last_full_round1:
          const FieldElementT constraint = ((mem_pool__value_column_row_expr717) +
                                            (poseidon__poseidon__full_rounds_state1_cubed_7)) -
                                           ((poseidon__poseidon__full_rounds_state0_cubed_7) +
                                            (poseidon__poseidon__full_rounds_state2_cubed_7));
          inner_sum += random_coefficients[334] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/last_full_round2:
          const FieldElementT constraint = (((mem_pool__value_column_row_expr718) +
                                             (poseidon__poseidon__full_rounds_state2_cubed_7)) +
                                            (poseidon__poseidon__full_rounds_state2_cubed_7)) -
                                           ((poseidon__poseidon__full_rounds_state0_cubed_7) +
                                            (poseidon__poseidon__full_rounds_state1_cubed_7));
          inner_sum += random_coefficients[335] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/copy_partial_rounds0_i0:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr719) -
              (poseidon__poseidon__partial_rounds_state1_column_row_expr703);
          inner_sum += random_coefficients[336] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/copy_partial_rounds0_i1:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr721) -
              (poseidon__poseidon__partial_rounds_state1_column_row_expr720);
          inner_sum += random_coefficients[337] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/copy_partial_rounds0_i2:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr723) -
              (poseidon__poseidon__partial_rounds_state1_column_row_expr722);
          inner_sum += random_coefficients[338] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_full_to_partial0:
          const FieldElementT constraint =
              (((poseidon__poseidon__partial_rounds_state0_column_row_expr701) +
                (poseidon__poseidon__full_rounds_state2_cubed_3)) +
               (poseidon__poseidon__full_rounds_state2_cubed_3)) -
              (((poseidon__poseidon__full_rounds_state0_cubed_3) +
                (poseidon__poseidon__full_rounds_state1_cubed_3)) +
               (FieldElementT::ConstexprFromBigInt(
                   0x4b085eb1df4258c3453cc97445954bf3433b6ab9dd5a99592864c00f54a3f9a_Z)));
          inner_sum += random_coefficients[339] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_full_to_partial1:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr730) -
              ((((((FieldElementT::ConstexprFromBigInt(
                       0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffd_Z)) *
                   (poseidon__poseidon__full_rounds_state1_cubed_3)) +
                  ((FieldElementT::ConstexprFromBigInt(0xa_Z)) *
                   (poseidon__poseidon__full_rounds_state2_cubed_3))) +
                 ((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                  (poseidon__poseidon__partial_rounds_state0_column_row_expr701))) +
                ((FieldElementT::ConstexprFromBigInt(
                     0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff_Z)) *
                 (poseidon__poseidon__partial_rounds_state0_cubed_0))) +
               (FieldElementT::ConstexprFromBigInt(
                   0x46fb825257fec76c50fe043684d4e6d2d2f2fdfe9b7c8d7128ca7acc0f66f30_Z)));
          inner_sum += random_coefficients[340] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_full_to_partial2:
          const FieldElementT constraint =
              (poseidon__poseidon__partial_rounds_state0_column_row_expr731) -
              ((((((((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                     (poseidon__poseidon__full_rounds_state2_cubed_3)) +
                    ((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                     (poseidon__poseidon__partial_rounds_state0_column_row_expr701))) +
                   ((FieldElementT::ConstexprFromBigInt(0x6_Z)) *
                    (poseidon__poseidon__partial_rounds_state0_cubed_0))) +
                  (poseidon__poseidon__partial_rounds_state0_column_row_expr730)) +
                 (poseidon__poseidon__partial_rounds_state0_column_row_expr730)) +
                ((FieldElementT::ConstexprFromBigInt(
                     0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff_Z)) *
                 (poseidon__poseidon__partial_rounds_state0_cubed_1))) +
               (FieldElementT::ConstexprFromBigInt(
                   0xf2193ba0c7ea33ce6222d9446c1e166202ae5461005292f4a2bcb93420151a_Z)));
          inner_sum += random_coefficients[341] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_partial_to_full0:
          const FieldElementT constraint =
              (poseidon__poseidon__full_rounds_state0_column_row_expr738) -
              (((((((FieldElementT::ConstexprFromBigInt(0x10_Z)) *
                    (poseidon__poseidon__partial_rounds_state1_cubed_19)) +
                   ((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                    (poseidon__poseidon__partial_rounds_state1_column_row_expr741))) +
                  ((FieldElementT::ConstexprFromBigInt(0x10_Z)) *
                   (poseidon__poseidon__partial_rounds_state1_cubed_20))) +
                 ((FieldElementT::ConstexprFromBigInt(0x6_Z)) *
                  (poseidon__poseidon__partial_rounds_state1_column_row_expr743))) +
                (poseidon__poseidon__partial_rounds_state1_cubed_21)) +
               (FieldElementT::ConstexprFromBigInt(
                   0x13d1b5cfd87693224f0ac561ab2c15ca53365d768311af59cefaf701bc53b37_Z)));
          inner_sum += random_coefficients[344] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_partial_to_full1:
          const FieldElementT constraint =
              (poseidon__poseidon__full_rounds_state1_column_row_expr745) -
              ((((((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                   (poseidon__poseidon__partial_rounds_state1_cubed_20)) +
                  (poseidon__poseidon__partial_rounds_state1_column_row_expr743)) +
                 (poseidon__poseidon__partial_rounds_state1_column_row_expr743)) +
                (poseidon__poseidon__partial_rounds_state1_cubed_21)) +
               (FieldElementT::ConstexprFromBigInt(
                   0x3195d6b2d930e71cede286d5b8b41d49296ddf222bcd3bf3717a12a9a6947ff_Z)));
          inner_sum += random_coefficients[345] * constraint;
        }
        {
          // Constraint expression for poseidon/poseidon/margin_partial_to_full2:
          const FieldElementT constraint =
              (poseidon__poseidon__full_rounds_state2_column_row_expr746) -
              ((((((((FieldElementT::ConstexprFromBigInt(0x8_Z)) *
                     (poseidon__poseidon__partial_rounds_state1_cubed_19)) +
                    ((FieldElementT::ConstexprFromBigInt(0x4_Z)) *
                     (poseidon__poseidon__partial_rounds_state1_column_row_expr741))) +
                   ((FieldElementT::ConstexprFromBigInt(0x6_Z)) *
                    (poseidon__poseidon__partial_rounds_state1_cubed_20))) +
                  (poseidon__poseidon__partial_rounds_state1_column_row_expr743)) +
                 (poseidon__poseidon__partial_rounds_state1_column_row_expr743)) +
                ((FieldElementT::ConstexprFromBigInt(
                     0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff_Z)) *
                 (poseidon__poseidon__partial_rounds_state1_cubed_21))) +
               (FieldElementT::ConstexprFromBigInt(
                   0x2c14fccabc26929170cc7ac9989c823608b9008bef3b8e16b6089a5d33cd72e_Z)));
          inner_sum += random_coefficients[346] * constraint;
        }
        outer_sum += inner_sum;  // domain == FieldElementT::One()
      }
      res += FractionFieldElement<FieldElementT>(outer_sum, domain147);
    }
  }
  return res;
}

template <typename FieldElementT>
std::vector<FieldElementT> CpuAirDefinition<FieldElementT, 11>::DomainEvalsAtPoint(
    gsl::span<const FieldElementT> point_powers,
    [[maybe_unused]] gsl::span<const FieldElementT> shifts) const {
  [[maybe_unused]] const FieldElementT& point = point_powers[0];
  const FieldElementT& domain0 = ((uses_bitwise_builtin) != (0))
                                     ? ((point_powers[1]) - (FieldElementT::One()))
                                     : FieldElementT::Zero();
  const FieldElementT& domain1 =
      ((uses_bitwise_builtin) != (0)) ? ((point_powers[2]) - (shifts[0])) : FieldElementT::Zero();
  const FieldElementT& domain2 = ((uses_bitwise_builtin) != (0))
                                     ? ((point_powers[2]) - (FieldElementT::One()))
                                     : FieldElementT::Zero();
  const FieldElementT& domain3 =
      ((uses_bitwise_builtin) != (0))
          ? (((point_powers[2]) - (shifts[1])) * ((point_powers[2]) - (shifts[2])) *
             ((point_powers[2]) - (shifts[3])) * ((point_powers[2]) - (shifts[4])) *
             ((point_powers[2]) - (shifts[5])) * ((point_powers[2]) - (shifts[6])) *
             ((point_powers[2]) - (shifts[7])) * ((point_powers[2]) - (shifts[8])) *
             ((point_powers[2]) - (shifts[9])) * ((point_powers[2]) - (shifts[10])) *
             ((point_powers[2]) - (shifts[11])) * ((point_powers[2]) - (shifts[12])) *
             ((point_powers[2]) - (shifts[13])) * ((point_powers[2]) - (shifts[14])) *
             ((point_powers[2]) - (shifts[15])) * (domain2))
          : FieldElementT::Zero();
  const FieldElementT& domain4 = (point_powers[3]) - (FieldElementT::One());
  const FieldElementT& domain5 = (point_powers[4]) - (shifts[16]);
  const FieldElementT& domain6 = (point_powers[4]) - (FieldElementT::One());
  const FieldElementT& domain7 = (point_powers[5]) - (FieldElementT::One());
  const FieldElementT& domain8 = ((uses_ec_op_builtin) != (0))
                                     ? ((point_powers[6]) - (FieldElementT::One()))
                                     : FieldElementT::Zero();
  const FieldElementT& domain9 = ((uses_ec_op_builtin) != (0))
                                     ? ((point_powers[7]) - (FieldElementT::One()))
                                     : FieldElementT::Zero();
  const FieldElementT& domain10 =
      ((uses_ec_op_builtin) != (0)) ? ((point_powers[7]) - (shifts[17])) : FieldElementT::Zero();
  const FieldElementT& domain11 =
      ((uses_ec_op_builtin) != (0)) ? ((point_powers[7]) - (shifts[18])) : FieldElementT::Zero();
  const FieldElementT& domain12 = ((uses_ecdsa_builtin) != (0))
                                      ? ((point_powers[8]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain13 = ((uses_ecdsa_builtin) != (0))
                                      ? ((point_powers[9]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain14 =
      ((uses_ecdsa_builtin) != (0)) ? ((point_powers[10]) - (shifts[19])) : FieldElementT::Zero();
  const FieldElementT& domain15 =
      ((uses_ecdsa_builtin) != (0)) ? ((point_powers[10]) - (shifts[20])) : FieldElementT::Zero();
  const FieldElementT& domain16 = ((uses_ecdsa_builtin) != (0))
                                      ? ((point_powers[10]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain17 =
      ((uses_ecdsa_builtin) != (0)) ? ((point_powers[11]) - (shifts[19])) : FieldElementT::Zero();
  const FieldElementT& domain18 =
      ((uses_ecdsa_builtin) != (0)) ? ((point_powers[11]) - (shifts[20])) : FieldElementT::Zero();
  const FieldElementT& domain19 = ((uses_ecdsa_builtin) != (0))
                                      ? ((point_powers[11]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain20 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[12]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain21 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[13]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain22 = ((uses_keccak_builtin) != (0))
                                      ? (((point_powers[13]) - (shifts[21])) * (domain21))
                                      : FieldElementT::Zero();
  const FieldElementT& domain23 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[14]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain24 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (FieldElementT::One())) * ((point_powers[15]) - (shifts[22])) *
             ((point_powers[15]) - (shifts[23])) * ((point_powers[15]) - (shifts[24])) *
             ((point_powers[15]) - (shifts[25])) * ((point_powers[15]) - (shifts[26])) *
             ((point_powers[15]) - (shifts[27])) * ((point_powers[15]) - (shifts[28])))
          : FieldElementT::Zero();
  const FieldElementT& domain25 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (shifts[29])) * ((point_powers[15]) - (shifts[30])) *
             ((point_powers[15]) - (shifts[31])) * ((point_powers[15]) - (shifts[32])) *
             ((point_powers[15]) - (shifts[33])) * ((point_powers[15]) - (shifts[34])) *
             ((point_powers[15]) - (shifts[35])) * ((point_powers[15]) - (shifts[36])) *
             ((point_powers[15]) - (shifts[37])) * ((point_powers[15]) - (shifts[38])) *
             ((point_powers[15]) - (shifts[39])) * ((point_powers[15]) - (shifts[40])) *
             ((point_powers[15]) - (shifts[41])) * ((point_powers[15]) - (shifts[42])) *
             ((point_powers[15]) - (shifts[43])) * ((point_powers[15]) - (shifts[44])) * (domain24))
          : FieldElementT::Zero();
  const FieldElementT& domain26 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (shifts[45])) * ((point_powers[15]) - (shifts[46])) *
             ((point_powers[15]) - (shifts[47])) * ((point_powers[15]) - (shifts[48])) *
             ((point_powers[15]) - (shifts[49])) * ((point_powers[15]) - (shifts[50])) *
             ((point_powers[15]) - (shifts[51])) * ((point_powers[15]) - (shifts[52])) *
             ((point_powers[15]) - (shifts[53])) * ((point_powers[15]) - (shifts[54])) *
             ((point_powers[15]) - (shifts[55])) * ((point_powers[15]) - (shifts[56])) *
             ((point_powers[15]) - (shifts[57])) * ((point_powers[15]) - (shifts[58])) *
             ((point_powers[15]) - (shifts[59])) * ((point_powers[15]) - (shifts[60])) *
             ((point_powers[15]) - (shifts[61])) * ((point_powers[15]) - (shifts[62])) *
             ((point_powers[15]) - (shifts[63])) * ((point_powers[15]) - (shifts[64])) *
             ((point_powers[15]) - (shifts[65])) * ((point_powers[15]) - (shifts[66])) *
             ((point_powers[15]) - (shifts[67])) * ((point_powers[15]) - (shifts[68])) *
             ((point_powers[15]) - (shifts[69])) * ((point_powers[15]) - (shifts[70])) *
             ((point_powers[15]) - (shifts[71])) * ((point_powers[15]) - (shifts[72])) *
             ((point_powers[15]) - (shifts[73])) * ((point_powers[15]) - (shifts[74])) *
             ((point_powers[15]) - (shifts[75])) * ((point_powers[15]) - (shifts[76])) *
             ((point_powers[15]) - (shifts[77])) * ((point_powers[15]) - (shifts[78])) *
             ((point_powers[15]) - (shifts[79])) * ((point_powers[15]) - (shifts[80])) *
             ((point_powers[15]) - (shifts[81])) * ((point_powers[15]) - (shifts[82])) *
             ((point_powers[15]) - (shifts[83])) * ((point_powers[15]) - (shifts[84])) *
             ((point_powers[15]) - (shifts[85])) * ((point_powers[15]) - (shifts[86])) *
             ((point_powers[15]) - (shifts[87])) * ((point_powers[15]) - (shifts[88])) *
             ((point_powers[15]) - (shifts[89])) * ((point_powers[15]) - (shifts[90])) *
             ((point_powers[15]) - (shifts[91])) * ((point_powers[15]) - (shifts[92])) *
             ((point_powers[15]) - (shifts[93])) * ((point_powers[15]) - (shifts[94])) *
             ((point_powers[15]) - (shifts[95])) * ((point_powers[15]) - (shifts[96])) *
             ((point_powers[15]) - (shifts[97])) * ((point_powers[15]) - (shifts[98])) *
             ((point_powers[15]) - (shifts[99])) * ((point_powers[15]) - (shifts[100])) *
             ((point_powers[15]) - (shifts[101])) * ((point_powers[15]) - (shifts[102])) *
             ((point_powers[15]) - (shifts[103])) * ((point_powers[15]) - (shifts[104])) *
             ((point_powers[15]) - (shifts[105])) * ((point_powers[15]) - (shifts[106])) *
             ((point_powers[15]) - (shifts[107])) * ((point_powers[15]) - (shifts[108])) *
             ((point_powers[15]) - (shifts[109])) * ((point_powers[15]) - (shifts[110])) *
             ((point_powers[15]) - (shifts[111])) * ((point_powers[15]) - (shifts[112])) *
             ((point_powers[15]) - (shifts[113])) * ((point_powers[15]) - (shifts[114])) *
             ((point_powers[15]) - (shifts[115])) * ((point_powers[15]) - (shifts[116])) *
             ((point_powers[15]) - (shifts[117])) * ((point_powers[15]) - (shifts[118])) *
             ((point_powers[15]) - (shifts[119])) * ((point_powers[15]) - (shifts[120])) *
             ((point_powers[15]) - (shifts[121])) * ((point_powers[15]) - (shifts[122])) *
             ((point_powers[15]) - (shifts[123])) * ((point_powers[15]) - (shifts[124])) *
             ((point_powers[15]) - (shifts[125])) * ((point_powers[15]) - (shifts[126])) *
             ((point_powers[15]) - (shifts[127])) * ((point_powers[15]) - (shifts[128])) *
             ((point_powers[15]) - (shifts[129])) * ((point_powers[15]) - (shifts[130])) *
             ((point_powers[15]) - (shifts[131])) * ((point_powers[15]) - (shifts[132])) *
             ((point_powers[15]) - (shifts[133])) * ((point_powers[15]) - (shifts[134])) *
             ((point_powers[15]) - (shifts[135])) * ((point_powers[15]) - (shifts[136])) *
             ((point_powers[15]) - (shifts[137])) * ((point_powers[15]) - (shifts[138])) *
             ((point_powers[15]) - (shifts[139])) * ((point_powers[15]) - (shifts[140])) *
             (domain25))
          : FieldElementT::Zero();
  const FieldElementT& domain27 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (shifts[21])) * ((point_powers[15]) - (shifts[141])) *
             ((point_powers[15]) - (shifts[142])) * ((point_powers[15]) - (shifts[143])) *
             ((point_powers[15]) - (shifts[144])) * ((point_powers[15]) - (shifts[145])) *
             ((point_powers[15]) - (shifts[146])) * ((point_powers[15]) - (shifts[147])) *
             ((point_powers[15]) - (shifts[148])) * ((point_powers[15]) - (shifts[149])) *
             ((point_powers[15]) - (shifts[150])) * ((point_powers[15]) - (shifts[151])) *
             ((point_powers[15]) - (shifts[152])) * ((point_powers[15]) - (shifts[153])) *
             ((point_powers[15]) - (shifts[154])) * ((point_powers[15]) - (shifts[155])) *
             ((point_powers[15]) - (shifts[156])) * ((point_powers[15]) - (shifts[157])) *
             ((point_powers[15]) - (shifts[158])) * ((point_powers[15]) - (shifts[159])) *
             ((point_powers[15]) - (shifts[160])) * ((point_powers[15]) - (shifts[161])) *
             ((point_powers[15]) - (shifts[162])) * ((point_powers[15]) - (shifts[163])) *
             ((point_powers[15]) - (shifts[164])) * ((point_powers[15]) - (shifts[165])) *
             ((point_powers[15]) - (shifts[166])) * ((point_powers[15]) - (shifts[167])) *
             ((point_powers[15]) - (shifts[168])) * ((point_powers[15]) - (shifts[169])) *
             ((point_powers[15]) - (shifts[170])) * ((point_powers[15]) - (shifts[171])) *
             ((point_powers[15]) - (shifts[172])) * ((point_powers[15]) - (shifts[173])) *
             ((point_powers[15]) - (shifts[174])) * ((point_powers[15]) - (shifts[175])) *
             ((point_powers[15]) - (shifts[176])) * ((point_powers[15]) - (shifts[177])) *
             ((point_powers[15]) - (shifts[178])) * ((point_powers[15]) - (shifts[179])) *
             ((point_powers[15]) - (shifts[180])) * ((point_powers[15]) - (shifts[181])) *
             ((point_powers[15]) - (shifts[182])) * ((point_powers[15]) - (shifts[183])) *
             ((point_powers[15]) - (shifts[184])) * ((point_powers[15]) - (shifts[185])) *
             ((point_powers[15]) - (shifts[186])) * ((point_powers[15]) - (shifts[187])) *
             ((point_powers[15]) - (shifts[188])) * ((point_powers[15]) - (shifts[189])) *
             ((point_powers[15]) - (shifts[190])) * ((point_powers[15]) - (shifts[191])) *
             ((point_powers[15]) - (shifts[192])) * ((point_powers[15]) - (shifts[193])) *
             ((point_powers[15]) - (shifts[194])) * ((point_powers[15]) - (shifts[195])) *
             ((point_powers[15]) - (shifts[196])) * ((point_powers[15]) - (shifts[197])) *
             ((point_powers[15]) - (shifts[198])) * ((point_powers[15]) - (shifts[199])) *
             ((point_powers[15]) - (shifts[200])) * ((point_powers[15]) - (shifts[201])) *
             ((point_powers[15]) - (shifts[202])) * ((point_powers[15]) - (shifts[203])) *
             ((point_powers[15]) - (shifts[204])) * ((point_powers[15]) - (shifts[205])) *
             ((point_powers[15]) - (shifts[206])) * ((point_powers[15]) - (shifts[207])) *
             ((point_powers[15]) - (shifts[208])) * ((point_powers[15]) - (shifts[209])) *
             ((point_powers[15]) - (shifts[210])) * ((point_powers[15]) - (shifts[211])) *
             ((point_powers[15]) - (shifts[212])) * ((point_powers[15]) - (shifts[213])) *
             ((point_powers[15]) - (shifts[214])) * ((point_powers[15]) - (shifts[215])) *
             ((point_powers[15]) - (shifts[216])) * ((point_powers[15]) - (shifts[217])) *
             ((point_powers[15]) - (shifts[218])) * ((point_powers[15]) - (shifts[219])) *
             ((point_powers[15]) - (shifts[220])) * ((point_powers[15]) - (shifts[221])) *
             ((point_powers[15]) - (shifts[222])) * ((point_powers[15]) - (shifts[223])) *
             ((point_powers[15]) - (shifts[224])) * ((point_powers[15]) - (shifts[225])) *
             ((point_powers[15]) - (shifts[226])) * ((point_powers[15]) - (shifts[227])) *
             ((point_powers[15]) - (shifts[228])) * ((point_powers[15]) - (shifts[229])) *
             ((point_powers[15]) - (shifts[230])) * ((point_powers[15]) - (shifts[231])) *
             ((point_powers[15]) - (shifts[232])) * ((point_powers[15]) - (shifts[233])) *
             ((point_powers[15]) - (shifts[234])) * ((point_powers[15]) - (shifts[235])) *
             ((point_powers[15]) - (shifts[236])) * ((point_powers[15]) - (shifts[237])) *
             ((point_powers[15]) - (shifts[238])) * ((point_powers[15]) - (shifts[239])) *
             ((point_powers[15]) - (shifts[240])) * ((point_powers[15]) - (shifts[241])) *
             ((point_powers[15]) - (shifts[242])) * ((point_powers[15]) - (shifts[243])) *
             ((point_powers[15]) - (shifts[244])) * ((point_powers[15]) - (shifts[245])) *
             ((point_powers[15]) - (shifts[246])) * ((point_powers[15]) - (shifts[247])) *
             ((point_powers[15]) - (shifts[248])) * ((point_powers[15]) - (shifts[249])) *
             ((point_powers[15]) - (shifts[250])) * ((point_powers[15]) - (shifts[251])) *
             ((point_powers[15]) - (shifts[252])) * ((point_powers[15]) - (shifts[253])) *
             ((point_powers[15]) - (shifts[254])) * ((point_powers[15]) - (shifts[255])) *
             ((point_powers[15]) - (shifts[256])) * ((point_powers[15]) - (shifts[257])) *
             ((point_powers[15]) - (shifts[258])) * ((point_powers[15]) - (shifts[259])) *
             ((point_powers[15]) - (shifts[260])) * ((point_powers[15]) - (shifts[261])) *
             ((point_powers[15]) - (shifts[262])) * ((point_powers[15]) - (shifts[263])) *
             ((point_powers[15]) - (shifts[264])) * ((point_powers[15]) - (shifts[265])) *
             ((point_powers[15]) - (shifts[266])) * ((point_powers[15]) - (shifts[267])) *
             ((point_powers[15]) - (shifts[268])) * ((point_powers[15]) - (shifts[269])) *
             ((point_powers[15]) - (shifts[270])) * ((point_powers[15]) - (shifts[271])) *
             ((point_powers[15]) - (shifts[272])) * ((point_powers[15]) - (shifts[273])) *
             ((point_powers[15]) - (shifts[274])) * ((point_powers[15]) - (shifts[275])) *
             ((point_powers[15]) - (shifts[276])) * ((point_powers[15]) - (shifts[277])) *
             ((point_powers[15]) - (shifts[278])) * ((point_powers[15]) - (shifts[279])) *
             ((point_powers[15]) - (shifts[280])) * ((point_powers[15]) - (shifts[281])) *
             ((point_powers[15]) - (shifts[282])) * ((point_powers[15]) - (shifts[283])) *
             ((point_powers[15]) - (shifts[284])) * ((point_powers[15]) - (shifts[285])) *
             ((point_powers[15]) - (shifts[286])) * ((point_powers[15]) - (shifts[287])) *
             ((point_powers[15]) - (shifts[288])) * ((point_powers[15]) - (shifts[289])) *
             ((point_powers[15]) - (shifts[290])) * ((point_powers[15]) - (shifts[291])) *
             ((point_powers[15]) - (shifts[292])) * ((point_powers[15]) - (shifts[293])) *
             ((point_powers[15]) - (shifts[294])) * ((point_powers[15]) - (shifts[295])) *
             ((point_powers[15]) - (shifts[296])) * ((point_powers[15]) - (shifts[297])) *
             ((point_powers[15]) - (shifts[298])) * ((point_powers[15]) - (shifts[299])) *
             ((point_powers[15]) - (shifts[300])) * ((point_powers[15]) - (shifts[301])) *
             ((point_powers[15]) - (shifts[302])) * ((point_powers[15]) - (shifts[303])) *
             ((point_powers[15]) - (shifts[304])) * ((point_powers[15]) - (shifts[305])) *
             ((point_powers[15]) - (shifts[306])) * ((point_powers[15]) - (shifts[307])) *
             ((point_powers[15]) - (shifts[308])) * ((point_powers[15]) - (shifts[309])) *
             ((point_powers[15]) - (shifts[310])) * ((point_powers[15]) - (shifts[311])) *
             ((point_powers[15]) - (shifts[312])) * ((point_powers[15]) - (shifts[313])) *
             ((point_powers[15]) - (shifts[314])) * ((point_powers[15]) - (shifts[315])) *
             ((point_powers[15]) - (shifts[316])) * ((point_powers[15]) - (shifts[317])) *
             ((point_powers[15]) - (shifts[318])) * ((point_powers[15]) - (shifts[319])) *
             ((point_powers[15]) - (shifts[320])) * ((point_powers[15]) - (shifts[321])) *
             ((point_powers[15]) - (shifts[322])) * ((point_powers[15]) - (shifts[323])) *
             ((point_powers[15]) - (shifts[324])) * ((point_powers[15]) - (shifts[325])) *
             ((point_powers[15]) - (shifts[326])) * ((point_powers[15]) - (shifts[327])) *
             ((point_powers[15]) - (shifts[328])) * ((point_powers[15]) - (shifts[329])) *
             ((point_powers[15]) - (shifts[330])) * ((point_powers[15]) - (shifts[331])) *
             ((point_powers[15]) - (shifts[332])) * ((point_powers[15]) - (shifts[333])) *
             ((point_powers[15]) - (shifts[334])) * ((point_powers[15]) - (shifts[335])) *
             ((point_powers[15]) - (shifts[336])) * ((point_powers[15]) - (shifts[337])) *
             ((point_powers[15]) - (shifts[338])) * ((point_powers[15]) - (shifts[339])) *
             ((point_powers[15]) - (shifts[340])) * ((point_powers[15]) - (shifts[341])) *
             ((point_powers[15]) - (shifts[342])) * ((point_powers[15]) - (shifts[343])) *
             ((point_powers[15]) - (shifts[344])) * ((point_powers[15]) - (shifts[345])) *
             ((point_powers[15]) - (shifts[346])) * ((point_powers[15]) - (shifts[347])) *
             ((point_powers[15]) - (shifts[348])) * ((point_powers[15]) - (shifts[349])) *
             ((point_powers[15]) - (shifts[350])) * ((point_powers[15]) - (shifts[351])) *
             ((point_powers[15]) - (shifts[352])) * ((point_powers[15]) - (shifts[353])) *
             ((point_powers[15]) - (shifts[354])) * ((point_powers[15]) - (shifts[355])) *
             ((point_powers[15]) - (shifts[356])) * ((point_powers[15]) - (shifts[357])) *
             ((point_powers[15]) - (shifts[358])) * ((point_powers[15]) - (shifts[359])) *
             ((point_powers[15]) - (shifts[360])) * ((point_powers[15]) - (shifts[361])) *
             ((point_powers[15]) - (shifts[362])) * ((point_powers[15]) - (shifts[363])) *
             ((point_powers[15]) - (shifts[364])) * ((point_powers[15]) - (shifts[365])) *
             ((point_powers[15]) - (shifts[366])) * ((point_powers[15]) - (shifts[367])) *
             ((point_powers[15]) - (shifts[368])) * ((point_powers[15]) - (shifts[369])) *
             ((point_powers[15]) - (shifts[370])) * ((point_powers[15]) - (shifts[371])) *
             ((point_powers[15]) - (shifts[372])) * ((point_powers[15]) - (shifts[373])) *
             ((point_powers[15]) - (shifts[374])) * ((point_powers[15]) - (shifts[375])) *
             ((point_powers[15]) - (shifts[376])) * ((point_powers[15]) - (shifts[377])) *
             ((point_powers[15]) - (shifts[378])) * ((point_powers[15]) - (shifts[379])) *
             (domain26))
          : FieldElementT::Zero();
  const FieldElementT& domain28 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[16]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain29 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (FieldElementT::One()))
                                      : FieldElementT::Zero();
  const FieldElementT& domain30 = ((uses_keccak_builtin) != (0))
                                      ? (((point_powers[17]) - (shifts[380])) * (domain29))
                                      : FieldElementT::Zero();
  const FieldElementT& domain31 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[381])) * ((point_powers[17]) - (shifts[382])) *
             ((point_powers[17]) - (shifts[383])) * ((point_powers[17]) - (shifts[384])) *
             ((point_powers[17]) - (shifts[385])) * ((point_powers[17]) - (shifts[386])) *
             ((point_powers[17]) - (shifts[387])) * ((point_powers[17]) - (shifts[388])) *
             ((point_powers[17]) - (shifts[389])) * ((point_powers[17]) - (shifts[390])) *
             ((point_powers[17]) - (shifts[391])) * ((point_powers[17]) - (shifts[392])) *
             ((point_powers[17]) - (shifts[393])) * ((point_powers[17]) - (shifts[394])) *
             (domain30))
          : FieldElementT::Zero();
  const FieldElementT& domain32 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[395])) * ((point_powers[17]) - (shifts[396])) *
             ((point_powers[17]) - (shifts[397])) * ((point_powers[17]) - (shifts[398])) *
             ((point_powers[17]) - (shifts[399])) * ((point_powers[17]) - (shifts[400])) *
             (domain30))
          : FieldElementT::Zero();
  const FieldElementT& domain33 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[401])) * ((point_powers[17]) - (shifts[402])) *
             ((point_powers[17]) - (shifts[403])) * ((point_powers[17]) - (shifts[404])) *
             ((point_powers[17]) - (shifts[405])) * ((point_powers[17]) - (shifts[406])) *
             ((point_powers[17]) - (shifts[407])) * ((point_powers[17]) - (shifts[408])) *
             ((point_powers[17]) - (shifts[409])) * ((point_powers[17]) - (shifts[410])) *
             ((point_powers[17]) - (shifts[411])) * ((point_powers[17]) - (shifts[412])) *
             ((point_powers[17]) - (shifts[413])) * ((point_powers[17]) - (shifts[414])) *
             ((point_powers[17]) - (shifts[415])) * ((point_powers[17]) - (shifts[416])) *
             (domain32))
          : FieldElementT::Zero();
  const FieldElementT& domain34 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[417])) * ((point_powers[17]) - (shifts[418])) *
             ((point_powers[17]) - (shifts[419])) * ((point_powers[17]) - (shifts[420])) *
             ((point_powers[17]) - (shifts[421])) * ((point_powers[17]) - (shifts[422])) *
             (domain33))
          : FieldElementT::Zero();
  const FieldElementT& domain35 = ((uses_keccak_builtin) != (0))
                                      ? (((point_powers[17]) - (shifts[423])) *
                                         ((point_powers[17]) - (shifts[424])) * (domain34))
                                      : FieldElementT::Zero();
  const FieldElementT& domain36 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[425])) * ((point_powers[17]) - (shifts[22])) *
             ((point_powers[17]) - (shifts[426])) * ((point_powers[17]) - (shifts[23])) *
             ((point_powers[17]) - (shifts[427])) * ((point_powers[17]) - (shifts[24])) *
             ((point_powers[17]) - (shifts[428])) * ((point_powers[17]) - (shifts[25])) *
             ((point_powers[17]) - (shifts[429])) * ((point_powers[17]) - (shifts[26])) *
             ((point_powers[17]) - (shifts[430])) * ((point_powers[17]) - (shifts[27])) *
             ((point_powers[17]) - (shifts[431])) * ((point_powers[17]) - (shifts[28])) *
             ((point_powers[17]) - (shifts[432])) * ((point_powers[17]) - (shifts[29])) *
             ((point_powers[17]) - (shifts[433])) * ((point_powers[17]) - (shifts[30])) *
             ((point_powers[17]) - (shifts[434])) * ((point_powers[17]) - (shifts[31])) *
             ((point_powers[17]) - (shifts[435])) * ((point_powers[17]) - (shifts[32])) *
             ((point_powers[17]) - (shifts[436])) * ((point_powers[17]) - (shifts[33])))
          : FieldElementT::Zero();
  const FieldElementT& domain37 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[437])) * ((point_powers[17]) - (shifts[438])) *
             ((point_powers[17]) - (shifts[439])) * ((point_powers[17]) - (shifts[440])) *
             ((point_powers[17]) - (shifts[441])) * ((point_powers[17]) - (shifts[442])) *
             ((point_powers[17]) - (shifts[443])) * ((point_powers[17]) - (shifts[444])) *
             ((point_powers[17]) - (shifts[445])) * ((point_powers[17]) - (shifts[446])) *
             ((point_powers[17]) - (shifts[447])) * ((point_powers[17]) - (shifts[448])) *
             ((point_powers[17]) - (shifts[449])) * ((point_powers[17]) - (shifts[450])) *
             ((point_powers[17]) - (shifts[451])) * ((point_powers[17]) - (shifts[452])) *
             ((point_powers[17]) - (shifts[453])) * ((point_powers[17]) - (shifts[454])) *
             ((point_powers[17]) - (shifts[455])) * ((point_powers[17]) - (shifts[456])) *
             ((point_powers[17]) - (shifts[457])) * ((point_powers[17]) - (shifts[458])) *
             ((point_powers[17]) - (shifts[459])) * ((point_powers[17]) - (shifts[460])) *
             (domain36))
          : FieldElementT::Zero();
  const FieldElementT& domain38 =
      ((uses_keccak_builtin) != (0)) ? ((domain30) * (domain37)) : FieldElementT::Zero();
  const FieldElementT& domain39 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[461])) * ((point_powers[17]) - (shifts[462])) *
             ((point_powers[17]) - (shifts[463])) * ((point_powers[17]) - (shifts[464])) *
             ((point_powers[17]) - (shifts[465])) * ((point_powers[17]) - (shifts[466])) *
             ((point_powers[17]) - (shifts[467])) * ((point_powers[17]) - (shifts[468])) *
             ((point_powers[17]) - (shifts[469])) * ((point_powers[17]) - (shifts[470])) *
             ((point_powers[17]) - (shifts[471])) * ((point_powers[17]) - (shifts[472])) *
             ((point_powers[17]) - (shifts[473])) * ((point_powers[17]) - (shifts[474])) *
             ((point_powers[17]) - (shifts[475])) * ((point_powers[17]) - (shifts[476])) *
             ((point_powers[17]) - (shifts[477])) * ((point_powers[17]) - (shifts[478])) *
             ((point_powers[17]) - (shifts[479])) * ((point_powers[17]) - (shifts[480])) *
             ((point_powers[17]) - (shifts[481])) * ((point_powers[17]) - (shifts[482])) *
             ((point_powers[17]) - (shifts[483])) * ((point_powers[17]) - (shifts[484])) *
             ((point_powers[17]) - (shifts[485])) * ((point_powers[17]) - (shifts[486])) *
             ((point_powers[17]) - (shifts[487])) * ((point_powers[17]) - (shifts[488])) *
             ((point_powers[17]) - (shifts[489])) * ((point_powers[17]) - (shifts[490])) *
             ((point_powers[17]) - (shifts[491])) * ((point_powers[17]) - (shifts[492])) *
             ((point_powers[17]) - (shifts[493])) * ((point_powers[17]) - (shifts[494])) *
             ((point_powers[17]) - (shifts[495])) * ((point_powers[17]) - (shifts[496])) *
             ((point_powers[17]) - (shifts[497])) * ((point_powers[17]) - (shifts[498])) *
             ((point_powers[17]) - (shifts[499])) * ((point_powers[17]) - (shifts[500])) *
             ((point_powers[17]) - (shifts[501])) * ((point_powers[17]) - (shifts[502])) *
             ((point_powers[17]) - (shifts[503])) * ((point_powers[17]) - (shifts[504])) *
             ((point_powers[17]) - (shifts[505])) * ((point_powers[17]) - (shifts[506])) *
             ((point_powers[17]) - (shifts[507])) * ((point_powers[17]) - (shifts[508])) *
             ((point_powers[17]) - (shifts[509])) * ((point_powers[17]) - (shifts[510])) *
             ((point_powers[17]) - (shifts[511])) * ((point_powers[17]) - (shifts[512])) *
             ((point_powers[17]) - (shifts[513])) * ((point_powers[17]) - (shifts[514])) *
             ((point_powers[17]) - (shifts[515])) * ((point_powers[17]) - (shifts[516])) *
             ((point_powers[17]) - (shifts[517])) * ((point_powers[17]) - (shifts[518])) *
             ((point_powers[17]) - (shifts[519])) * ((point_powers[17]) - (shifts[520])) *
             ((point_powers[17]) - (shifts[521])) * ((point_powers[17]) - (shifts[522])) *
             ((point_powers[17]) - (shifts[523])) * ((point_powers[17]) - (shifts[524])) *
             ((point_powers[17]) - (shifts[525])) * ((point_powers[17]) - (shifts[526])) *
             ((point_powers[17]) - (shifts[527])) * ((point_powers[17]) - (shifts[528])) *
             ((point_powers[17]) - (shifts[529])) * ((point_powers[17]) - (shifts[530])) *
             ((point_powers[17]) - (shifts[531])) * ((point_powers[17]) - (shifts[532])) *
             ((point_powers[17]) - (shifts[533])) * ((point_powers[17]) - (shifts[534])) *
             ((point_powers[17]) - (shifts[535])) * ((point_powers[17]) - (shifts[536])) *
             ((point_powers[17]) - (shifts[537])) * ((point_powers[17]) - (shifts[538])) *
             ((point_powers[17]) - (shifts[539])) * ((point_powers[17]) - (shifts[540])) *
             ((point_powers[17]) - (shifts[541])) * ((point_powers[17]) - (shifts[542])) *
             ((point_powers[17]) - (shifts[543])) * ((point_powers[17]) - (shifts[544])) *
             ((point_powers[17]) - (shifts[545])) * ((point_powers[17]) - (shifts[546])) *
             ((point_powers[17]) - (shifts[547])) * ((point_powers[17]) - (shifts[548])) *
             ((point_powers[17]) - (shifts[549])) * ((point_powers[17]) - (shifts[550])) *
             ((point_powers[17]) - (shifts[551])) * ((point_powers[17]) - (shifts[552])) *
             ((point_powers[17]) - (shifts[553])) * ((point_powers[17]) - (shifts[554])) *
             ((point_powers[17]) - (shifts[555])) * ((point_powers[17]) - (shifts[556])) *
             ((point_powers[17]) - (shifts[557])) * ((point_powers[17]) - (shifts[558])) *
             ((point_powers[17]) - (shifts[559])) * ((point_powers[17]) - (shifts[560])) *
             ((point_powers[17]) - (shifts[561])) * ((point_powers[17]) - (shifts[562])) *
             ((point_powers[17]) - (shifts[563])) * ((point_powers[17]) - (shifts[564])) *
             ((point_powers[17]) - (shifts[565])) * ((point_powers[17]) - (shifts[566])) *
             ((point_powers[17]) - (shifts[567])) * ((point_powers[17]) - (shifts[568])) *
             ((point_powers[17]) - (shifts[569])) * ((point_powers[17]) - (shifts[570])) *
             ((point_powers[17]) - (shifts[571])) * ((point_powers[17]) - (shifts[572])) *
             ((point_powers[17]) - (shifts[573])) * ((point_powers[17]) - (shifts[574])) *
             ((point_powers[17]) - (shifts[575])) * ((point_powers[17]) - (shifts[576])) *
             ((point_powers[17]) - (shifts[577])) * ((point_powers[17]) - (shifts[578])) *
             ((point_powers[17]) - (shifts[579])) * ((point_powers[17]) - (shifts[580])) *
             ((point_powers[17]) - (shifts[581])) * ((point_powers[17]) - (shifts[582])) *
             ((point_powers[17]) - (shifts[583])) * ((point_powers[17]) - (shifts[584])) *
             ((point_powers[17]) - (shifts[585])) * ((point_powers[17]) - (shifts[586])) *
             ((point_powers[17]) - (shifts[587])) * ((point_powers[17]) - (shifts[588])) *
             ((point_powers[17]) - (shifts[589])) * ((point_powers[17]) - (shifts[590])) *
             ((point_powers[17]) - (shifts[591])) * ((point_powers[17]) - (shifts[592])) *
             ((point_powers[17]) - (shifts[593])) * ((point_powers[17]) - (shifts[594])) *
             ((point_powers[17]) - (shifts[595])) * ((point_powers[17]) - (shifts[596])) *
             ((point_powers[17]) - (shifts[597])) * ((point_powers[17]) - (shifts[598])) *
             ((point_powers[17]) - (shifts[599])) * ((point_powers[17]) - (shifts[600])) *
             ((point_powers[17]) - (shifts[601])) * ((point_powers[17]) - (shifts[602])) *
             ((point_powers[17]) - (shifts[603])) * ((point_powers[17]) - (shifts[604])) *
             ((point_powers[17]) - (shifts[605])) * ((point_powers[17]) - (shifts[606])) *
             ((point_powers[17]) - (shifts[607])) * ((point_powers[17]) - (shifts[608])) *
             ((point_powers[17]) - (shifts[609])) * ((point_powers[17]) - (shifts[610])) *
             ((point_powers[17]) - (shifts[611])) * ((point_powers[17]) - (shifts[612])) *
             ((point_powers[17]) - (shifts[613])) * ((point_powers[17]) - (shifts[614])) *
             ((point_powers[17]) - (shifts[615])) * ((point_powers[17]) - (shifts[616])) *
             ((point_powers[17]) - (shifts[617])) * ((point_powers[17]) - (shifts[618])) *
             ((point_powers[17]) - (shifts[619])) * ((point_powers[17]) - (shifts[620])) *
             ((point_powers[17]) - (shifts[621])) * ((point_powers[17]) - (shifts[622])) *
             ((point_powers[17]) - (shifts[623])) * ((point_powers[17]) - (shifts[624])) *
             ((point_powers[17]) - (shifts[625])) * ((point_powers[17]) - (shifts[626])) *
             ((point_powers[17]) - (shifts[627])) * ((point_powers[17]) - (shifts[628])) *
             ((point_powers[17]) - (shifts[629])) * ((point_powers[17]) - (shifts[630])) *
             ((point_powers[17]) - (shifts[631])) * ((point_powers[17]) - (shifts[632])) *
             ((point_powers[17]) - (shifts[633])) * ((point_powers[17]) - (shifts[634])) *
             ((point_powers[17]) - (shifts[635])) * ((point_powers[17]) - (shifts[636])) *
             ((point_powers[17]) - (shifts[637])) * ((point_powers[17]) - (shifts[638])) *
             ((point_powers[17]) - (shifts[639])) * ((point_powers[17]) - (shifts[640])) *
             ((point_powers[17]) - (shifts[641])) * ((point_powers[17]) - (shifts[642])) *
             ((point_powers[17]) - (shifts[643])) * ((point_powers[17]) - (shifts[644])) *
             ((point_powers[17]) - (shifts[645])) * ((point_powers[17]) - (shifts[646])) *
             ((point_powers[17]) - (shifts[647])) * ((point_powers[17]) - (shifts[648])) *
             ((point_powers[17]) - (shifts[649])) * ((point_powers[17]) - (shifts[650])) *
             ((point_powers[17]) - (shifts[651])) * ((point_powers[17]) - (shifts[652])) *
             ((point_powers[17]) - (shifts[653])) * ((point_powers[17]) - (shifts[654])) *
             ((point_powers[17]) - (shifts[655])) * ((point_powers[17]) - (shifts[656])) *
             ((point_powers[17]) - (shifts[657])) * ((point_powers[17]) - (shifts[658])) *
             ((point_powers[17]) - (shifts[659])) * ((point_powers[17]) - (shifts[660])) *
             ((point_powers[17]) - (shifts[661])) * ((point_powers[17]) - (shifts[662])) *
             ((point_powers[17]) - (shifts[663])) * ((point_powers[17]) - (shifts[664])) *
             ((point_powers[17]) - (shifts[665])) * ((point_powers[17]) - (shifts[666])) *
             ((point_powers[17]) - (shifts[667])) * ((point_powers[17]) - (shifts[668])) *
             ((point_powers[17]) - (shifts[669])) * ((point_powers[17]) - (shifts[670])) *
             ((point_powers[17]) - (shifts[671])) * ((point_powers[17]) - (shifts[672])) *
             ((point_powers[17]) - (shifts[673])) * ((point_powers[17]) - (shifts[674])) *
             ((point_powers[17]) - (shifts[675])) * ((point_powers[17]) - (shifts[676])) *
             ((point_powers[17]) - (shifts[677])) * ((point_powers[17]) - (shifts[678])) *
             ((point_powers[17]) - (shifts[679])) * ((point_powers[17]) - (shifts[680])) *
             ((point_powers[17]) - (shifts[681])) * ((point_powers[17]) - (shifts[682])) *
             ((point_powers[17]) - (shifts[683])) * ((point_powers[17]) - (shifts[684])) *
             ((point_powers[17]) - (shifts[685])) * ((point_powers[17]) - (shifts[686])) *
             ((point_powers[17]) - (shifts[687])) * ((point_powers[17]) - (shifts[688])) *
             ((point_powers[17]) - (shifts[689])) * ((point_powers[17]) - (shifts[690])) *
             ((point_powers[17]) - (shifts[691])) * ((point_powers[17]) - (shifts[692])) *
             ((point_powers[17]) - (shifts[693])) * ((point_powers[17]) - (shifts[694])) *
             ((point_powers[17]) - (shifts[695])) * ((point_powers[17]) - (shifts[696])) *
             ((point_powers[17]) - (shifts[697])) * ((point_powers[17]) - (shifts[698])) *
             ((point_powers[17]) - (shifts[699])) * ((point_powers[17]) - (shifts[700])) *
             ((point_powers[17]) - (shifts[701])) * ((point_powers[17]) - (shifts[702])) *
             ((point_powers[17]) - (shifts[703])) * ((point_powers[17]) - (shifts[704])) *
             ((point_powers[17]) - (shifts[705])) * ((point_powers[17]) - (shifts[706])) *
             ((point_powers[17]) - (shifts[707])) * ((point_powers[17]) - (shifts[708])) *
             ((point_powers[17]) - (shifts[709])) * ((point_powers[17]) - (shifts[710])) *
             ((point_powers[17]) - (shifts[711])) * ((point_powers[17]) - (shifts[712])) *
             ((point_powers[17]) - (shifts[713])) * ((point_powers[17]) - (shifts[714])) *
             ((point_powers[17]) - (shifts[715])) * ((point_powers[17]) - (shifts[716])) *
             ((point_powers[17]) - (shifts[717])) * ((point_powers[17]) - (shifts[718])) *
             ((point_powers[17]) - (shifts[719])) * ((point_powers[17]) - (shifts[720])) *
             ((point_powers[17]) - (shifts[721])) * ((point_powers[17]) - (shifts[722])) *
             ((point_powers[17]) - (shifts[723])) * ((point_powers[17]) - (shifts[724])) *
             ((point_powers[17]) - (shifts[725])) * ((point_powers[17]) - (shifts[726])) *
             ((point_powers[17]) - (shifts[727])) * ((point_powers[17]) - (shifts[728])) *
             ((point_powers[17]) - (shifts[729])) * ((point_powers[17]) - (shifts[730])) *
             ((point_powers[17]) - (shifts[731])) * ((point_powers[17]) - (shifts[732])) *
             ((point_powers[17]) - (shifts[733])) * ((point_powers[17]) - (shifts[734])) *
             ((point_powers[17]) - (shifts[735])) * ((point_powers[17]) - (shifts[736])) *
             ((point_powers[17]) - (shifts[737])) * ((point_powers[17]) - (shifts[738])) *
             ((point_powers[17]) - (shifts[739])) * ((point_powers[17]) - (shifts[740])) *
             ((point_powers[17]) - (shifts[741])) * ((point_powers[17]) - (shifts[742])) *
             ((point_powers[17]) - (shifts[743])) * ((point_powers[17]) - (shifts[744])) *
             ((point_powers[17]) - (shifts[745])) * ((point_powers[17]) - (shifts[746])) *
             ((point_powers[17]) - (shifts[747])) * ((point_powers[17]) - (shifts[748])) *
             ((point_powers[17]) - (shifts[749])) * ((point_powers[17]) - (shifts[750])) *
             ((point_powers[17]) - (shifts[751])) * ((point_powers[17]) - (shifts[752])) *
             ((point_powers[17]) - (shifts[753])) * ((point_powers[17]) - (shifts[754])) *
             ((point_powers[17]) - (shifts[755])) * ((point_powers[17]) - (shifts[756])) *
             ((point_powers[17]) - (shifts[757])) * ((point_powers[17]) - (shifts[758])) *
             ((point_powers[17]) - (shifts[759])) * ((point_powers[17]) - (shifts[760])) *
             ((point_powers[17]) - (shifts[761])) * ((point_powers[17]) - (shifts[762])) *
             ((point_powers[17]) - (shifts[763])) * ((point_powers[17]) - (shifts[764])) *
             ((point_powers[17]) - (shifts[765])) * ((point_powers[17]) - (shifts[766])) *
             ((point_powers[17]) - (shifts[767])) * ((point_powers[17]) - (shifts[768])) *
             ((point_powers[17]) - (shifts[769])) * ((point_powers[17]) - (shifts[770])) *
             ((point_powers[17]) - (shifts[771])) * ((point_powers[17]) - (shifts[772])) *
             ((point_powers[17]) - (shifts[773])) * ((point_powers[17]) - (shifts[774])) *
             ((point_powers[17]) - (shifts[775])) * ((point_powers[17]) - (shifts[776])) *
             ((point_powers[17]) - (shifts[777])) * ((point_powers[17]) - (shifts[778])) *
             ((point_powers[17]) - (shifts[779])) * ((point_powers[17]) - (shifts[780])) *
             ((point_powers[17]) - (shifts[781])) * ((point_powers[17]) - (shifts[782])) *
             ((point_powers[17]) - (shifts[783])) * ((point_powers[17]) - (shifts[784])) *
             ((point_powers[17]) - (shifts[785])) * ((point_powers[17]) - (shifts[786])) *
             ((point_powers[17]) - (shifts[787])) * ((point_powers[17]) - (shifts[788])) *
             ((point_powers[17]) - (shifts[789])) * ((point_powers[17]) - (shifts[790])) *
             ((point_powers[17]) - (shifts[791])) * ((point_powers[17]) - (shifts[792])) *
             ((point_powers[17]) - (shifts[793])) * ((point_powers[17]) - (shifts[794])) *
             ((point_powers[17]) - (shifts[795])) * ((point_powers[17]) - (shifts[796])) *
             ((point_powers[17]) - (shifts[797])) * ((point_powers[17]) - (shifts[798])) *
             ((point_powers[17]) - (shifts[799])) * ((point_powers[17]) - (shifts[800])) *
             ((point_powers[17]) - (shifts[801])) * ((point_powers[17]) - (shifts[802])) *
             ((point_powers[17]) - (shifts[803])) * ((point_powers[17]) - (shifts[804])) *
             ((point_powers[17]) - (shifts[805])) * ((point_powers[17]) - (shifts[806])) *
             ((point_powers[17]) - (shifts[807])) * ((point_powers[17]) - (shifts[808])) *
             ((point_powers[17]) - (shifts[809])) * ((point_powers[17]) - (shifts[810])) *
             ((point_powers[17]) - (shifts[811])) * ((point_powers[17]) - (shifts[812])) *
             ((point_powers[17]) - (shifts[813])) * ((point_powers[17]) - (shifts[814])) *
             ((point_powers[17]) - (shifts[815])) * ((point_powers[17]) - (shifts[816])) *
             ((point_powers[17]) - (shifts[817])) * ((point_powers[17]) - (shifts[818])) *
             ((point_powers[17]) - (shifts[819])) * ((point_powers[17]) - (shifts[820])) *
             ((point_powers[17]) - (shifts[821])) * ((point_powers[17]) - (shifts[822])) *
             ((point_powers[17]) - (shifts[823])) * ((point_powers[17]) - (shifts[824])) *
             ((point_powers[17]) - (shifts[825])) * ((point_powers[17]) - (shifts[826])) *
             ((point_powers[17]) - (shifts[827])) * ((point_powers[17]) - (shifts[828])) *
             ((point_powers[17]) - (shifts[829])) * ((point_powers[17]) - (shifts[830])) *
             ((point_powers[17]) - (shifts[831])) * ((point_powers[17]) - (shifts[832])) *
             ((point_powers[17]) - (shifts[833])) * ((point_powers[17]) - (shifts[834])) *
             ((point_powers[17]) - (shifts[835])) * ((point_powers[17]) - (shifts[836])) *
             ((point_powers[17]) - (shifts[837])) * ((point_powers[17]) - (shifts[838])) *
             ((point_powers[17]) - (shifts[839])) * ((point_powers[17]) - (shifts[840])) *
             ((point_powers[17]) - (shifts[841])) * ((point_powers[17]) - (shifts[842])) *
             ((point_powers[17]) - (shifts[843])) * ((point_powers[17]) - (shifts[844])) *
             ((point_powers[17]) - (shifts[845])) * ((point_powers[17]) - (shifts[846])) *
             ((point_powers[17]) - (shifts[847])) * ((point_powers[17]) - (shifts[848])) *
             ((point_powers[17]) - (shifts[849])) * ((point_powers[17]) - (shifts[850])) *
             ((point_powers[17]) - (shifts[851])) * ((point_powers[17]) - (shifts[852])) *
             ((point_powers[17]) - (shifts[853])) * ((point_powers[17]) - (shifts[854])) *
             ((point_powers[17]) - (shifts[855])) * ((point_powers[17]) - (shifts[856])) *
             ((point_powers[17]) - (shifts[857])) * ((point_powers[17]) - (shifts[858])) *
             ((point_powers[17]) - (shifts[859])) * ((point_powers[17]) - (shifts[860])) *
             ((point_powers[17]) - (shifts[861])) * ((point_powers[17]) - (shifts[862])) *
             ((point_powers[17]) - (shifts[863])) * ((point_powers[17]) - (shifts[864])) *
             ((point_powers[17]) - (shifts[865])) * ((point_powers[17]) - (shifts[866])) *
             ((point_powers[17]) - (shifts[867])) * ((point_powers[17]) - (shifts[868])) *
             ((point_powers[17]) - (shifts[869])) * ((point_powers[17]) - (shifts[870])) *
             ((point_powers[17]) - (shifts[871])) * ((point_powers[17]) - (shifts[872])) *
             ((point_powers[17]) - (shifts[873])) * ((point_powers[17]) - (shifts[874])) *
             ((point_powers[17]) - (shifts[875])) * ((point_powers[17]) - (shifts[876])) *
             ((point_powers[17]) - (shifts[877])) * ((point_powers[17]) - (shifts[878])) *
             ((point_powers[17]) - (shifts[879])) * ((point_powers[17]) - (shifts[880])) *
             ((point_powers[17]) - (shifts[881])) * ((point_powers[17]) - (shifts[882])) *
             ((point_powers[17]) - (shifts[883])) * ((point_powers[17]) - (shifts[884])) *
             ((point_powers[17]) - (shifts[885])) * ((point_powers[17]) - (shifts[886])) *
             ((point_powers[17]) - (shifts[887])) * ((point_powers[17]) - (shifts[888])) *
             ((point_powers[17]) - (shifts[889])) * ((point_powers[17]) - (shifts[890])) *
             ((point_powers[17]) - (shifts[891])) * ((point_powers[17]) - (shifts[892])) *
             ((point_powers[17]) - (shifts[893])) * ((point_powers[17]) - (shifts[894])) *
             ((point_powers[17]) - (shifts[895])) * ((point_powers[17]) - (shifts[896])) *
             ((point_powers[17]) - (shifts[897])) * ((point_powers[17]) - (shifts[898])) *
             ((point_powers[17]) - (shifts[899])) * ((point_powers[17]) - (shifts[900])) *
             ((point_powers[17]) - (shifts[901])) * ((point_powers[17]) - (shifts[902])) *
             ((point_powers[17]) - (shifts[903])) * ((point_powers[17]) - (shifts[904])) *
             ((point_powers[17]) - (shifts[905])) * ((point_powers[17]) - (shifts[906])) *
             ((point_powers[17]) - (shifts[907])) * ((point_powers[17]) - (shifts[908])) *
             ((point_powers[17]) - (shifts[909])) * ((point_powers[17]) - (shifts[910])) *
             ((point_powers[17]) - (shifts[911])) * ((point_powers[17]) - (shifts[912])) *
             ((point_powers[17]) - (shifts[913])) * ((point_powers[17]) - (shifts[914])) *
             ((point_powers[17]) - (shifts[915])) * ((point_powers[17]) - (shifts[916])) *
             ((point_powers[17]) - (shifts[917])) * ((point_powers[17]) - (shifts[918])) *
             ((point_powers[17]) - (shifts[919])) * ((point_powers[17]) - (shifts[920])) *
             ((point_powers[17]) - (shifts[921])) * ((point_powers[17]) - (shifts[922])) *
             ((point_powers[17]) - (shifts[923])) * ((point_powers[17]) - (shifts[924])) *
             ((point_powers[17]) - (shifts[925])) * ((point_powers[17]) - (shifts[926])) *
             ((point_powers[17]) - (shifts[927])) * ((point_powers[17]) - (shifts[928])) *
             ((point_powers[17]) - (shifts[929])) * ((point_powers[17]) - (shifts[930])) *
             ((point_powers[17]) - (shifts[931])) * ((point_powers[17]) - (shifts[932])) *
             ((point_powers[17]) - (shifts[933])) * ((point_powers[17]) - (shifts[934])) *
             ((point_powers[17]) - (shifts[935])) * ((point_powers[17]) - (shifts[936])) *
             ((point_powers[17]) - (shifts[937])) * ((point_powers[17]) - (shifts[938])) *
             ((point_powers[17]) - (shifts[939])) * ((point_powers[17]) - (shifts[940])) *
             ((point_powers[17]) - (shifts[941])) * ((point_powers[17]) - (shifts[942])) *
             ((point_powers[17]) - (shifts[943])) * ((point_powers[17]) - (shifts[944])) *
             ((point_powers[17]) - (shifts[945])) * ((point_powers[17]) - (shifts[946])) *
             ((point_powers[17]) - (shifts[947])) * ((point_powers[17]) - (shifts[948])) *
             ((point_powers[17]) - (shifts[949])) * ((point_powers[17]) - (shifts[950])) *
             ((point_powers[17]) - (shifts[951])) * ((point_powers[17]) - (shifts[952])) *
             ((point_powers[17]) - (shifts[953])) * ((point_powers[17]) - (shifts[954])) *
             ((point_powers[17]) - (shifts[955])) * ((point_powers[17]) - (shifts[956])) *
             ((point_powers[17]) - (shifts[957])) * ((point_powers[17]) - (shifts[958])) *
             ((point_powers[17]) - (shifts[959])) * ((point_powers[17]) - (shifts[960])) *
             ((point_powers[17]) - (shifts[961])) * ((point_powers[17]) - (shifts[962])) *
             ((point_powers[17]) - (shifts[963])) * ((point_powers[17]) - (shifts[964])) *
             ((point_powers[17]) - (shifts[965])) * ((point_powers[17]) - (shifts[966])) *
             ((point_powers[17]) - (shifts[967])) * ((point_powers[17]) - (shifts[968])) *
             ((point_powers[17]) - (shifts[969])) * ((point_powers[17]) - (shifts[970])) *
             ((point_powers[17]) - (shifts[971])) * ((point_powers[17]) - (shifts[972])) *
             ((point_powers[17]) - (shifts[973])) * ((point_powers[17]) - (shifts[974])) *
             ((point_powers[17]) - (shifts[975])) * ((point_powers[17]) - (shifts[976])) *
             ((point_powers[17]) - (shifts[977])) * ((point_powers[17]) - (shifts[978])) *
             ((point_powers[17]) - (shifts[979])) * ((point_powers[17]) - (shifts[980])) *
             ((point_powers[17]) - (shifts[981])) * ((point_powers[17]) - (shifts[982])) *
             ((point_powers[17]) - (shifts[983])) * ((point_powers[17]) - (shifts[984])) *
             ((point_powers[17]) - (shifts[985])) * ((point_powers[17]) - (shifts[986])) *
             ((point_powers[17]) - (shifts[987])) * ((point_powers[17]) - (shifts[988])) *
             ((point_powers[17]) - (shifts[989])) * ((point_powers[17]) - (shifts[990])) *
             ((point_powers[17]) - (shifts[991])) * ((point_powers[17]) - (shifts[992])) *
             ((point_powers[17]) - (shifts[993])) * ((point_powers[17]) - (shifts[994])) *
             ((point_powers[17]) - (shifts[995])) * ((point_powers[17]) - (shifts[996])) *
             ((point_powers[17]) - (shifts[997])) * ((point_powers[17]) - (shifts[998])) *
             ((point_powers[17]) - (shifts[999])) * ((point_powers[17]) - (shifts[1000])) *
             ((point_powers[17]) - (shifts[1001])) * ((point_powers[17]) - (shifts[1002])) *
             ((point_powers[17]) - (shifts[1003])) * ((point_powers[17]) - (shifts[1004])) *
             ((point_powers[17]) - (shifts[1005])) * ((point_powers[17]) - (shifts[1006])) *
             ((point_powers[17]) - (shifts[1007])) * ((point_powers[17]) - (shifts[1008])) *
             ((point_powers[17]) - (shifts[1009])) * ((point_powers[17]) - (shifts[1010])) *
             ((point_powers[17]) - (shifts[1011])) * ((point_powers[17]) - (shifts[1012])) *
             ((point_powers[17]) - (shifts[1013])) * ((point_powers[17]) - (shifts[1014])) *
             ((point_powers[17]) - (shifts[1015])) * ((point_powers[17]) - (shifts[1016])) *
             ((point_powers[17]) - (shifts[1017])) * ((point_powers[17]) - (shifts[1018])) *
             ((point_powers[17]) - (shifts[1019])) * ((point_powers[17]) - (shifts[1020])) *
             ((point_powers[17]) - (shifts[1021])) * ((point_powers[17]) - (shifts[1022])) *
             ((point_powers[17]) - (shifts[1023])) * ((point_powers[17]) - (shifts[1024])) *
             ((point_powers[17]) - (shifts[1025])) * ((point_powers[17]) - (shifts[1026])) *
             ((point_powers[17]) - (shifts[1027])) * ((point_powers[17]) - (shifts[1028])) *
             ((point_powers[17]) - (shifts[1029])) * ((point_powers[17]) - (shifts[1030])) *
             ((point_powers[17]) - (shifts[1031])) * ((point_powers[17]) - (shifts[1032])) *
             ((point_powers[17]) - (shifts[1033])) * ((point_powers[17]) - (shifts[1034])) *
             ((point_powers[17]) - (shifts[1035])) * ((point_powers[17]) - (shifts[1036])) *
             ((point_powers[17]) - (shifts[1037])) * ((point_powers[17]) - (shifts[1038])) *
             ((point_powers[17]) - (shifts[1039])) * ((point_powers[17]) - (shifts[1040])) *
             ((point_powers[17]) - (shifts[1041])) * ((point_powers[17]) - (shifts[1042])) *
             ((point_powers[17]) - (shifts[1043])) * ((point_powers[17]) - (shifts[1044])) *
             ((point_powers[17]) - (shifts[1045])) * ((point_powers[17]) - (shifts[1046])) *
             ((point_powers[17]) - (shifts[1047])) * ((point_powers[17]) - (shifts[1048])) *
             ((point_powers[17]) - (shifts[1049])) * ((point_powers[17]) - (shifts[1050])) *
             ((point_powers[17]) - (shifts[1051])) * ((point_powers[17]) - (shifts[1052])) *
             ((point_powers[17]) - (shifts[1053])) * ((point_powers[17]) - (shifts[1054])) *
             ((point_powers[17]) - (shifts[1055])) * ((point_powers[17]) - (shifts[1056])) *
             ((point_powers[17]) - (shifts[1057])) * ((point_powers[17]) - (shifts[1058])) *
             ((point_powers[17]) - (shifts[1059])) * ((point_powers[17]) - (shifts[1060])) *
             ((point_powers[17]) - (shifts[1061])) * ((point_powers[17]) - (shifts[1062])) *
             ((point_powers[17]) - (shifts[1063])) * ((point_powers[17]) - (shifts[1064])) *
             ((point_powers[17]) - (shifts[1065])) * ((point_powers[17]) - (shifts[1066])) *
             ((point_powers[17]) - (shifts[1067])) * ((point_powers[17]) - (shifts[1068])) *
             ((point_powers[17]) - (shifts[1069])) * ((point_powers[17]) - (shifts[1070])) *
             ((point_powers[17]) - (shifts[1071])) * ((point_powers[17]) - (shifts[1072])) *
             ((point_powers[17]) - (shifts[1073])) * ((point_powers[17]) - (shifts[1074])) *
             ((point_powers[17]) - (shifts[1075])) * ((point_powers[17]) - (shifts[1076])) *
             ((point_powers[17]) - (shifts[1077])) * ((point_powers[17]) - (shifts[1078])) *
             ((point_powers[17]) - (shifts[1079])) * ((point_powers[17]) - (shifts[1080])) *
             ((point_powers[17]) - (shifts[1081])) * ((point_powers[17]) - (shifts[1082])) *
             ((point_powers[17]) - (shifts[1083])) * ((point_powers[17]) - (shifts[1084])) *
             ((point_powers[17]) - (shifts[1085])) * ((point_powers[17]) - (shifts[1086])) *
             ((point_powers[17]) - (shifts[1087])) * ((point_powers[17]) - (shifts[1088])) *
             ((point_powers[17]) - (shifts[1089])) * ((point_powers[17]) - (shifts[1090])) *
             ((point_powers[17]) - (shifts[1091])) * ((point_powers[17]) - (shifts[1092])) *
             ((point_powers[17]) - (shifts[1093])) * ((point_powers[17]) - (shifts[1094])) *
             ((point_powers[17]) - (shifts[1095])) * ((point_powers[17]) - (shifts[1096])) *
             ((point_powers[17]) - (shifts[1097])) * ((point_powers[17]) - (shifts[1098])) *
             ((point_powers[17]) - (shifts[1099])) * ((point_powers[17]) - (shifts[1100])) *
             ((point_powers[17]) - (shifts[1101])) * ((point_powers[17]) - (shifts[1102])) *
             ((point_powers[17]) - (shifts[1103])) * ((point_powers[17]) - (shifts[1104])) *
             ((point_powers[17]) - (shifts[1105])) * ((point_powers[17]) - (shifts[1106])) *
             ((point_powers[17]) - (shifts[1107])) * ((point_powers[17]) - (shifts[1108])) *
             ((point_powers[17]) - (shifts[1109])) * ((point_powers[17]) - (shifts[1110])) *
             ((point_powers[17]) - (shifts[1111])) * ((point_powers[17]) - (shifts[1112])) *
             ((point_powers[17]) - (shifts[1113])) * ((point_powers[17]) - (shifts[1114])) *
             ((point_powers[17]) - (shifts[1115])) * ((point_powers[17]) - (shifts[1116])) *
             ((point_powers[17]) - (shifts[1117])) * ((point_powers[17]) - (shifts[1118])) *
             ((point_powers[17]) - (shifts[1119])) * ((point_powers[17]) - (shifts[1120])) *
             ((point_powers[17]) - (shifts[1121])) * ((point_powers[17]) - (shifts[1122])) *
             ((point_powers[17]) - (shifts[1123])) * ((point_powers[17]) - (shifts[1124])) *
             ((point_powers[17]) - (shifts[1125])) * ((point_powers[17]) - (shifts[1126])) *
             ((point_powers[17]) - (shifts[1127])) * ((point_powers[17]) - (shifts[1128])) *
             ((point_powers[17]) - (shifts[1129])) * ((point_powers[17]) - (shifts[1130])) *
             ((point_powers[17]) - (shifts[1131])) * ((point_powers[17]) - (shifts[1132])) *
             (domain34) * (domain37))
          : FieldElementT::Zero();
  const FieldElementT& domain40 =
      ((uses_keccak_builtin) != (0)) ? ((domain29) * (domain36)) : FieldElementT::Zero();
  const FieldElementT& domain41 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (shifts[1133]))
                                      : FieldElementT::Zero();
  const FieldElementT& domain42 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (shifts[1134])) * ((point_powers[15]) - (shifts[1135])) *
             ((point_powers[15]) - (shifts[1136])) * ((point_powers[15]) - (shifts[1137])) *
             ((point_powers[15]) - (shifts[1138])) * ((point_powers[15]) - (shifts[1139])) *
             ((point_powers[17]) - (shifts[1140])) * ((point_powers[17]) - (shifts[1141])) *
             ((point_powers[17]) - (shifts[1142])) * ((point_powers[17]) - (shifts[1143])) *
             ((point_powers[17]) - (shifts[1144])) * ((point_powers[17]) - (shifts[1145])) *
             ((point_powers[17]) - (shifts[1146])) * ((point_powers[17]) - (shifts[1147])) *
             ((point_powers[17]) - (shifts[1148])) * ((point_powers[17]) - (shifts[1149])) *
             ((point_powers[17]) - (shifts[1150])) * ((point_powers[17]) - (shifts[1151])) *
             ((point_powers[17]) - (shifts[1152])) * ((point_powers[17]) - (shifts[1153])) *
             ((point_powers[17]) - (shifts[1154])) * ((point_powers[17]) - (shifts[1155])) *
             ((point_powers[17]) - (shifts[1156])) * ((point_powers[17]) - (shifts[1157])) *
             ((point_powers[17]) - (shifts[1158])) * ((point_powers[17]) - (shifts[1159])) *
             ((point_powers[17]) - (shifts[1160])) * ((point_powers[17]) - (shifts[1161])) *
             ((point_powers[17]) - (shifts[1162])) * ((point_powers[17]) - (shifts[1163])) *
             (domain41))
          : FieldElementT::Zero();
  const FieldElementT& domain43 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (shifts[1164]))
                                      : FieldElementT::Zero();
  const FieldElementT& domain44 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[15]) - (shifts[1165])) * ((point_powers[15]) - (shifts[1166])) *
             ((point_powers[15]) - (shifts[1167])) * ((point_powers[15]) - (shifts[1168])) *
             ((point_powers[15]) - (shifts[1169])) * ((point_powers[15]) - (shifts[1170])) *
             ((point_powers[17]) - (shifts[1171])) * ((point_powers[17]) - (shifts[1172])) *
             ((point_powers[17]) - (shifts[1173])) * ((point_powers[17]) - (shifts[1174])) *
             ((point_powers[17]) - (shifts[1175])) * ((point_powers[17]) - (shifts[1176])) *
             ((point_powers[17]) - (shifts[1177])) * ((point_powers[17]) - (shifts[1178])) *
             ((point_powers[17]) - (shifts[1179])) * ((point_powers[17]) - (shifts[1180])) *
             ((point_powers[17]) - (shifts[1181])) * ((point_powers[17]) - (shifts[1182])) *
             ((point_powers[17]) - (shifts[1183])) * ((point_powers[17]) - (shifts[1184])) *
             ((point_powers[17]) - (shifts[1185])) * ((point_powers[17]) - (shifts[1186])) *
             ((point_powers[17]) - (shifts[1187])) * ((point_powers[17]) - (shifts[1188])) *
             ((point_powers[17]) - (shifts[1189])) * ((point_powers[17]) - (shifts[1190])) *
             ((point_powers[17]) - (shifts[1191])) * ((point_powers[17]) - (shifts[1192])) *
             ((point_powers[17]) - (shifts[1193])) * ((point_powers[17]) - (shifts[1194])) *
             ((point_powers[17]) - (shifts[1195])) * ((point_powers[17]) - (shifts[1196])) *
             (domain42) * (domain43))
          : FieldElementT::Zero();
  const FieldElementT& domain45 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1197])) * ((point_powers[17]) - (shifts[1198])) *
             ((point_powers[17]) - (shifts[1199])) * ((point_powers[17]) - (shifts[1200])) *
             ((point_powers[17]) - (shifts[1201])) * ((point_powers[17]) - (shifts[1202])))
          : FieldElementT::Zero();
  const FieldElementT& domain46 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1203])) * ((point_powers[17]) - (shifts[1204])) *
             ((point_powers[17]) - (shifts[1205])) * ((point_powers[17]) - (shifts[1206])) *
             ((point_powers[17]) - (shifts[1207])) * ((point_powers[17]) - (shifts[1208])) *
             ((point_powers[17]) - (shifts[1209])) * ((point_powers[17]) - (shifts[1210])) *
             ((point_powers[17]) - (shifts[1211])) * ((point_powers[17]) - (shifts[1212])) *
             ((point_powers[17]) - (shifts[1213])) * ((point_powers[17]) - (shifts[1214])) *
             ((point_powers[17]) - (shifts[1215])) * ((point_powers[17]) - (shifts[1216])) *
             ((point_powers[17]) - (shifts[1217])) * ((point_powers[17]) - (shifts[1218])) *
             (domain45))
          : FieldElementT::Zero();
  const FieldElementT& domain47 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[13]) - (shifts[1138])) * ((point_powers[13]) - (shifts[1139])) *
             ((point_powers[15]) - (shifts[1219])) * ((point_powers[15]) - (shifts[1220])) *
             ((point_powers[15]) - (shifts[1221])) * ((point_powers[15]) - (shifts[1222])) *
             ((point_powers[15]) - (shifts[1223])) * ((point_powers[15]) - (shifts[1224])) *
             ((point_powers[15]) - (shifts[1225])) * ((point_powers[15]) - (shifts[1226])) *
             ((point_powers[15]) - (shifts[1227])) * ((point_powers[15]) - (shifts[1228])) *
             ((point_powers[15]) - (shifts[1229])) * ((point_powers[15]) - (shifts[1230])) *
             ((point_powers[15]) - (shifts[1231])) * ((point_powers[15]) - (shifts[1232])) *
             ((point_powers[15]) - (shifts[1233])) * ((point_powers[15]) - (shifts[1234])) *
             ((point_powers[15]) - (shifts[1235])) * ((point_powers[15]) - (shifts[1236])) *
             ((point_powers[15]) - (shifts[1237])) * ((point_powers[15]) - (shifts[1238])) *
             ((point_powers[15]) - (shifts[1239])) * ((point_powers[15]) - (shifts[1240])) *
             ((point_powers[15]) - (shifts[1241])) * ((point_powers[15]) - (shifts[1242])) *
             ((point_powers[15]) - (shifts[1243])) * ((point_powers[15]) - (shifts[1244])) *
             ((point_powers[15]) - (shifts[1245])) * ((point_powers[15]) - (shifts[1246])) *
             ((point_powers[15]) - (shifts[1247])) * ((point_powers[15]) - (shifts[1248])) *
             ((point_powers[15]) - (shifts[1249])) * ((point_powers[15]) - (shifts[1250])) *
             ((point_powers[15]) - (shifts[1251])) * ((point_powers[15]) - (shifts[1252])) *
             ((point_powers[15]) - (shifts[1253])) * ((point_powers[15]) - (shifts[1254])) *
             ((point_powers[15]) - (shifts[1255])) * ((point_powers[15]) - (shifts[1256])) *
             ((point_powers[15]) - (shifts[1257])) * ((point_powers[15]) - (shifts[1258])) *
             ((point_powers[15]) - (shifts[1259])) * ((point_powers[15]) - (shifts[1260])) *
             ((point_powers[15]) - (shifts[1261])) * ((point_powers[15]) - (shifts[1262])) *
             ((point_powers[15]) - (shifts[1263])) * ((point_powers[15]) - (shifts[1264])) *
             ((point_powers[15]) - (shifts[1265])) * ((point_powers[15]) - (shifts[1266])) *
             ((point_powers[15]) - (shifts[1267])) * ((point_powers[15]) - (shifts[1268])) *
             ((point_powers[15]) - (shifts[1269])) * ((point_powers[15]) - (shifts[1270])) *
             ((point_powers[15]) - (shifts[1271])) * ((point_powers[15]) - (shifts[1272])) *
             ((point_powers[15]) - (shifts[1273])) * ((point_powers[15]) - (shifts[1274])) *
             ((point_powers[15]) - (shifts[1275])) * ((point_powers[15]) - (shifts[1276])) *
             ((point_powers[15]) - (shifts[1277])) * ((point_powers[15]) - (shifts[1278])) *
             ((point_powers[15]) - (shifts[1279])) * ((point_powers[15]) - (shifts[1280])) *
             ((point_powers[15]) - (shifts[1281])) * ((point_powers[15]) - (shifts[1282])) *
             ((point_powers[15]) - (shifts[1283])) * ((point_powers[15]) - (shifts[1284])) *
             ((point_powers[15]) - (shifts[1285])) * ((point_powers[15]) - (shifts[1286])) *
             ((point_powers[15]) - (shifts[1287])) * ((point_powers[15]) - (shifts[1288])) *
             ((point_powers[15]) - (shifts[1289])) * ((point_powers[15]) - (shifts[1290])) *
             ((point_powers[15]) - (shifts[1291])) * ((point_powers[15]) - (shifts[1292])) *
             ((point_powers[15]) - (shifts[1293])) * ((point_powers[15]) - (shifts[1294])) *
             ((point_powers[15]) - (shifts[1295])) * ((point_powers[15]) - (shifts[1296])) *
             ((point_powers[15]) - (shifts[1297])) * ((point_powers[15]) - (shifts[1298])) *
             ((point_powers[15]) - (shifts[1299])) * ((point_powers[15]) - (shifts[1300])) *
             ((point_powers[15]) - (shifts[1301])) * ((point_powers[15]) - (shifts[1302])) *
             ((point_powers[15]) - (shifts[1303])) * ((point_powers[15]) - (shifts[1304])) *
             ((point_powers[15]) - (shifts[1305])) * ((point_powers[15]) - (shifts[1306])) *
             ((point_powers[15]) - (shifts[1307])) * ((point_powers[15]) - (shifts[1308])) *
             ((point_powers[15]) - (shifts[1309])) * ((point_powers[15]) - (shifts[1310])) *
             ((point_powers[15]) - (shifts[1311])) * ((point_powers[15]) - (shifts[1312])) *
             ((point_powers[15]) - (shifts[1313])) * ((point_powers[15]) - (shifts[1314])) *
             ((point_powers[15]) - (shifts[1315])) * ((point_powers[15]) - (shifts[1316])) *
             ((point_powers[15]) - (shifts[1317])) * ((point_powers[15]) - (shifts[1318])) *
             ((point_powers[15]) - (shifts[1319])) * ((point_powers[15]) - (shifts[1320])) *
             ((point_powers[15]) - (shifts[1321])) * ((point_powers[15]) - (shifts[1322])) *
             ((point_powers[15]) - (shifts[1323])) * ((point_powers[15]) - (shifts[1324])) *
             ((point_powers[15]) - (shifts[1325])) * ((point_powers[15]) - (shifts[1326])) *
             ((point_powers[15]) - (shifts[1327])) * ((point_powers[15]) - (shifts[1328])) *
             ((point_powers[15]) - (shifts[1329])) * ((point_powers[15]) - (shifts[1330])) *
             ((point_powers[15]) - (shifts[1331])) * ((point_powers[15]) - (shifts[1332])) *
             ((point_powers[15]) - (shifts[1333])) * ((point_powers[15]) - (shifts[1334])) *
             ((point_powers[15]) - (shifts[1335])) * ((point_powers[15]) - (shifts[1336])) *
             ((point_powers[15]) - (shifts[1337])) * ((point_powers[15]) - (shifts[1338])) *
             ((point_powers[15]) - (shifts[1339])) * ((point_powers[15]) - (shifts[1340])) *
             ((point_powers[15]) - (shifts[1341])) * ((point_powers[15]) - (shifts[1342])) *
             ((point_powers[15]) - (shifts[1343])) * ((point_powers[15]) - (shifts[1344])) *
             ((point_powers[15]) - (shifts[1345])) * ((point_powers[15]) - (shifts[1346])) *
             ((point_powers[15]) - (shifts[1347])) * ((point_powers[15]) - (shifts[1348])) *
             ((point_powers[15]) - (shifts[1349])) * ((point_powers[15]) - (shifts[1350])) *
             ((point_powers[15]) - (shifts[1351])) * ((point_powers[15]) - (shifts[1352])) *
             ((point_powers[15]) - (shifts[1353])) * ((point_powers[15]) - (shifts[1354])) *
             ((point_powers[15]) - (shifts[1355])) * ((point_powers[15]) - (shifts[1356])) *
             ((point_powers[15]) - (shifts[1357])) * ((point_powers[15]) - (shifts[1358])) *
             ((point_powers[15]) - (shifts[1359])) * ((point_powers[15]) - (shifts[1360])) *
             ((point_powers[15]) - (shifts[1361])) * ((point_powers[15]) - (shifts[1362])) *
             ((point_powers[15]) - (shifts[1363])) * ((point_powers[15]) - (shifts[1364])) *
             ((point_powers[15]) - (shifts[1365])) * ((point_powers[15]) - (shifts[1366])) *
             ((point_powers[15]) - (shifts[1367])) * ((point_powers[15]) - (shifts[1368])) *
             ((point_powers[15]) - (shifts[1369])) * ((point_powers[15]) - (shifts[1370])) *
             ((point_powers[15]) - (shifts[1371])) * ((point_powers[15]) - (shifts[1372])) *
             ((point_powers[15]) - (shifts[1133])) * ((point_powers[15]) - (shifts[1141])) *
             ((point_powers[15]) - (shifts[1143])) * ((point_powers[15]) - (shifts[1145])) *
             ((point_powers[15]) - (shifts[1147])) * ((point_powers[15]) - (shifts[1149])) *
             ((point_powers[15]) - (shifts[1151])) * ((point_powers[15]) - (shifts[1153])) *
             ((point_powers[15]) - (shifts[1155])) * ((point_powers[15]) - (shifts[1157])) *
             ((point_powers[15]) - (shifts[1159])) * ((point_powers[15]) - (shifts[1161])) *
             ((point_powers[15]) - (shifts[1163])) * ((point_powers[15]) - (shifts[1373])) *
             ((point_powers[17]) - (shifts[1374])) * ((point_powers[17]) - (shifts[1375])) *
             ((point_powers[17]) - (shifts[1376])) * ((point_powers[17]) - (shifts[1377])) *
             ((point_powers[17]) - (shifts[1378])) * ((point_powers[17]) - (shifts[1379])) *
             ((point_powers[17]) - (shifts[1380])) * ((point_powers[17]) - (shifts[1381])) *
             ((point_powers[17]) - (shifts[1382])) * ((point_powers[17]) - (shifts[1383])) *
             ((point_powers[17]) - (shifts[1384])) * ((point_powers[17]) - (shifts[1385])) *
             ((point_powers[17]) - (shifts[1386])) * ((point_powers[17]) - (shifts[1387])) *
             ((point_powers[17]) - (shifts[1388])) * ((point_powers[17]) - (shifts[1389])) *
             ((point_powers[17]) - (shifts[1390])) * ((point_powers[17]) - (shifts[1391])) *
             ((point_powers[17]) - (shifts[1392])) * ((point_powers[17]) - (shifts[1393])) *
             ((point_powers[17]) - (shifts[1394])) * ((point_powers[17]) - (shifts[1395])) *
             ((point_powers[17]) - (shifts[1396])) * ((point_powers[17]) - (shifts[1397])) *
             ((point_powers[17]) - (shifts[1398])) * ((point_powers[17]) - (shifts[1399])) *
             ((point_powers[17]) - (shifts[1400])) * ((point_powers[17]) - (shifts[1401])) *
             ((point_powers[17]) - (shifts[1402])) * ((point_powers[17]) - (shifts[1403])) *
             ((point_powers[17]) - (shifts[1404])) * ((point_powers[17]) - (shifts[1405])) *
             ((point_powers[17]) - (shifts[1406])) * ((point_powers[17]) - (shifts[1407])) *
             ((point_powers[17]) - (shifts[1408])) * ((point_powers[17]) - (shifts[1409])) *
             ((point_powers[17]) - (shifts[1410])) * ((point_powers[17]) - (shifts[1411])) *
             ((point_powers[17]) - (shifts[1412])) * ((point_powers[17]) - (shifts[1413])) *
             ((point_powers[17]) - (shifts[1414])) * ((point_powers[17]) - (shifts[1415])) *
             ((point_powers[17]) - (shifts[1416])) * ((point_powers[17]) - (shifts[1417])) *
             ((point_powers[17]) - (shifts[1418])) * ((point_powers[17]) - (shifts[1419])) *
             ((point_powers[17]) - (shifts[1420])) * ((point_powers[17]) - (shifts[1421])) *
             ((point_powers[17]) - (shifts[1422])) * ((point_powers[17]) - (shifts[1423])) *
             ((point_powers[17]) - (shifts[1424])) * ((point_powers[17]) - (shifts[1425])) *
             ((point_powers[17]) - (shifts[1426])) * ((point_powers[17]) - (shifts[1427])) *
             ((point_powers[17]) - (shifts[1428])) * ((point_powers[17]) - (shifts[1429])) *
             ((point_powers[17]) - (shifts[1430])) * ((point_powers[17]) - (shifts[1431])) *
             ((point_powers[17]) - (shifts[1432])) * ((point_powers[17]) - (shifts[1433])) *
             ((point_powers[17]) - (shifts[1434])) * ((point_powers[17]) - (shifts[1435])) *
             ((point_powers[17]) - (shifts[1436])) * ((point_powers[17]) - (shifts[1437])) *
             ((point_powers[17]) - (shifts[1438])) * ((point_powers[17]) - (shifts[1439])) *
             ((point_powers[17]) - (shifts[1440])) * ((point_powers[17]) - (shifts[1441])) *
             ((point_powers[17]) - (shifts[1442])) * ((point_powers[17]) - (shifts[1443])) *
             ((point_powers[17]) - (shifts[1444])) * ((point_powers[17]) - (shifts[1445])) *
             ((point_powers[17]) - (shifts[1446])) * ((point_powers[17]) - (shifts[1447])) *
             ((point_powers[17]) - (shifts[1448])) * ((point_powers[17]) - (shifts[1449])) *
             ((point_powers[17]) - (shifts[1450])) * ((point_powers[17]) - (shifts[1451])) *
             ((point_powers[17]) - (shifts[1452])) * ((point_powers[17]) - (shifts[1453])) *
             ((point_powers[17]) - (shifts[1454])) * ((point_powers[17]) - (shifts[1455])) *
             ((point_powers[17]) - (shifts[1456])) * ((point_powers[17]) - (shifts[1457])) *
             ((point_powers[17]) - (shifts[1458])) * ((point_powers[17]) - (shifts[1459])) *
             ((point_powers[17]) - (shifts[1460])) * ((point_powers[17]) - (shifts[1461])) *
             ((point_powers[17]) - (shifts[1462])) * ((point_powers[17]) - (shifts[1463])) *
             ((point_powers[17]) - (shifts[1464])) * ((point_powers[17]) - (shifts[1465])) *
             ((point_powers[17]) - (shifts[1466])) * ((point_powers[17]) - (shifts[1467])) *
             ((point_powers[17]) - (shifts[1468])) * ((point_powers[17]) - (shifts[1469])) *
             ((point_powers[17]) - (shifts[1470])) * ((point_powers[17]) - (shifts[1471])) *
             ((point_powers[17]) - (shifts[1472])) * ((point_powers[17]) - (shifts[1473])) *
             ((point_powers[17]) - (shifts[1474])) * ((point_powers[17]) - (shifts[1475])) *
             ((point_powers[17]) - (shifts[1476])) * ((point_powers[17]) - (shifts[1477])) *
             ((point_powers[17]) - (shifts[1478])) * ((point_powers[17]) - (shifts[1479])) *
             ((point_powers[17]) - (shifts[1480])) * ((point_powers[17]) - (shifts[1481])) *
             ((point_powers[17]) - (shifts[1482])) * ((point_powers[17]) - (shifts[1483])) *
             ((point_powers[17]) - (shifts[1484])) * ((point_powers[17]) - (shifts[1485])) *
             ((point_powers[17]) - (shifts[1486])) * ((point_powers[17]) - (shifts[1487])) *
             ((point_powers[17]) - (shifts[1488])) * ((point_powers[17]) - (shifts[1489])) *
             ((point_powers[17]) - (shifts[1490])) * ((point_powers[17]) - (shifts[1491])) *
             ((point_powers[17]) - (shifts[1492])) * ((point_powers[17]) - (shifts[1493])) *
             ((point_powers[17]) - (shifts[1494])) * ((point_powers[17]) - (shifts[1495])) *
             ((point_powers[17]) - (shifts[1496])) * ((point_powers[17]) - (shifts[1497])) *
             ((point_powers[17]) - (shifts[1498])) * ((point_powers[17]) - (shifts[1499])) *
             ((point_powers[17]) - (shifts[1500])) * ((point_powers[17]) - (shifts[1501])) *
             ((point_powers[17]) - (shifts[1502])) * ((point_powers[17]) - (shifts[1503])) *
             ((point_powers[17]) - (shifts[1504])) * ((point_powers[17]) - (shifts[1505])) *
             ((point_powers[17]) - (shifts[1506])) * ((point_powers[17]) - (shifts[1507])) *
             ((point_powers[17]) - (shifts[1508])) * ((point_powers[17]) - (shifts[1509])) *
             ((point_powers[17]) - (shifts[1510])) * ((point_powers[17]) - (shifts[1511])) *
             ((point_powers[17]) - (shifts[1512])) * ((point_powers[17]) - (shifts[1513])) *
             ((point_powers[17]) - (shifts[1514])) * ((point_powers[17]) - (shifts[1515])) *
             ((point_powers[17]) - (shifts[1516])) * ((point_powers[17]) - (shifts[1517])) *
             ((point_powers[17]) - (shifts[1518])) * ((point_powers[17]) - (shifts[1519])) *
             ((point_powers[17]) - (shifts[1520])) * ((point_powers[17]) - (shifts[1521])) *
             ((point_powers[17]) - (shifts[1522])) * ((point_powers[17]) - (shifts[1523])) *
             ((point_powers[17]) - (shifts[1524])) * ((point_powers[17]) - (shifts[1525])) *
             ((point_powers[17]) - (shifts[1526])) * ((point_powers[17]) - (shifts[1527])) *
             ((point_powers[17]) - (shifts[1528])) * ((point_powers[17]) - (shifts[1529])) *
             ((point_powers[17]) - (shifts[1530])) * ((point_powers[17]) - (shifts[1531])) *
             ((point_powers[17]) - (shifts[1532])) * ((point_powers[17]) - (shifts[1533])) *
             ((point_powers[17]) - (shifts[1534])) * ((point_powers[17]) - (shifts[1535])) *
             ((point_powers[17]) - (shifts[1536])) * ((point_powers[17]) - (shifts[1537])) *
             ((point_powers[17]) - (shifts[1538])) * ((point_powers[17]) - (shifts[1539])) *
             ((point_powers[17]) - (shifts[1540])) * ((point_powers[17]) - (shifts[1541])) *
             ((point_powers[17]) - (shifts[1542])) * ((point_powers[17]) - (shifts[1543])) *
             ((point_powers[17]) - (shifts[1544])) * ((point_powers[17]) - (shifts[1545])) *
             ((point_powers[17]) - (shifts[1546])) * ((point_powers[17]) - (shifts[1547])) *
             ((point_powers[17]) - (shifts[1548])) * ((point_powers[17]) - (shifts[1549])) *
             ((point_powers[17]) - (shifts[1550])) * ((point_powers[17]) - (shifts[1551])) *
             ((point_powers[17]) - (shifts[1552])) * ((point_powers[17]) - (shifts[1553])) *
             ((point_powers[17]) - (shifts[1554])) * ((point_powers[17]) - (shifts[1555])) *
             ((point_powers[17]) - (shifts[1556])) * ((point_powers[17]) - (shifts[1557])) *
             ((point_powers[17]) - (shifts[1558])) * ((point_powers[17]) - (shifts[1559])) *
             ((point_powers[17]) - (shifts[1560])) * ((point_powers[17]) - (shifts[1561])) *
             ((point_powers[17]) - (shifts[1562])) * ((point_powers[17]) - (shifts[1563])) *
             ((point_powers[17]) - (shifts[1564])) * ((point_powers[17]) - (shifts[1565])) *
             ((point_powers[17]) - (shifts[1566])) * ((point_powers[17]) - (shifts[1567])) *
             ((point_powers[17]) - (shifts[1568])) * ((point_powers[17]) - (shifts[1569])) *
             ((point_powers[17]) - (shifts[1570])) * ((point_powers[17]) - (shifts[1571])) *
             ((point_powers[17]) - (shifts[1572])) * ((point_powers[17]) - (shifts[1573])) *
             ((point_powers[17]) - (shifts[1574])) * ((point_powers[17]) - (shifts[1575])) *
             ((point_powers[17]) - (shifts[1576])) * ((point_powers[17]) - (shifts[1577])) *
             ((point_powers[17]) - (shifts[1578])) * ((point_powers[17]) - (shifts[1579])) *
             ((point_powers[17]) - (shifts[1580])) * ((point_powers[17]) - (shifts[1581])) *
             ((point_powers[17]) - (shifts[1582])) * ((point_powers[17]) - (shifts[1583])) *
             ((point_powers[17]) - (shifts[1584])) * ((point_powers[17]) - (shifts[1585])) *
             ((point_powers[17]) - (shifts[1586])) * ((point_powers[17]) - (shifts[1587])) *
             ((point_powers[17]) - (shifts[1588])) * ((point_powers[17]) - (shifts[1589])) *
             ((point_powers[17]) - (shifts[1590])) * ((point_powers[17]) - (shifts[1591])) *
             ((point_powers[17]) - (shifts[1592])) * ((point_powers[17]) - (shifts[1593])) *
             ((point_powers[17]) - (shifts[1594])) * ((point_powers[17]) - (shifts[1595])) *
             ((point_powers[17]) - (shifts[1596])) * ((point_powers[17]) - (shifts[1597])) *
             ((point_powers[17]) - (shifts[1598])) * ((point_powers[17]) - (shifts[1599])) *
             ((point_powers[17]) - (shifts[1600])) * ((point_powers[17]) - (shifts[1601])) *
             ((point_powers[17]) - (shifts[1602])) * ((point_powers[17]) - (shifts[1603])) *
             ((point_powers[17]) - (shifts[1604])) * ((point_powers[17]) - (shifts[1605])) *
             ((point_powers[17]) - (shifts[1606])) * ((point_powers[17]) - (shifts[1607])) *
             ((point_powers[17]) - (shifts[1608])) * ((point_powers[17]) - (shifts[1609])) *
             ((point_powers[17]) - (shifts[1610])) * ((point_powers[17]) - (shifts[1611])) *
             ((point_powers[17]) - (shifts[1612])) * ((point_powers[17]) - (shifts[1613])) *
             ((point_powers[17]) - (shifts[1614])) * ((point_powers[17]) - (shifts[1615])) *
             ((point_powers[17]) - (shifts[1616])) * ((point_powers[17]) - (shifts[1617])) *
             ((point_powers[17]) - (shifts[1618])) * ((point_powers[17]) - (shifts[1619])) *
             ((point_powers[17]) - (shifts[1620])) * ((point_powers[17]) - (shifts[1621])) *
             ((point_powers[17]) - (shifts[1622])) * ((point_powers[17]) - (shifts[1623])) *
             ((point_powers[17]) - (shifts[1624])) * ((point_powers[17]) - (shifts[1625])) *
             ((point_powers[17]) - (shifts[1626])) * ((point_powers[17]) - (shifts[1627])) *
             ((point_powers[17]) - (shifts[1628])) * ((point_powers[17]) - (shifts[1629])) *
             ((point_powers[17]) - (shifts[1630])) * ((point_powers[17]) - (shifts[1631])) *
             ((point_powers[17]) - (shifts[1632])) * ((point_powers[17]) - (shifts[1633])) *
             ((point_powers[17]) - (shifts[1634])) * ((point_powers[17]) - (shifts[1635])) *
             ((point_powers[17]) - (shifts[1636])) * ((point_powers[17]) - (shifts[1637])) *
             ((point_powers[17]) - (shifts[1638])) * ((point_powers[17]) - (shifts[1639])) *
             ((point_powers[17]) - (shifts[1640])) * ((point_powers[17]) - (shifts[1641])) *
             ((point_powers[17]) - (shifts[1642])) * ((point_powers[17]) - (shifts[1643])) *
             ((point_powers[17]) - (shifts[1644])) * ((point_powers[17]) - (shifts[1645])) *
             ((point_powers[17]) - (shifts[1646])) * ((point_powers[17]) - (shifts[1647])) *
             ((point_powers[17]) - (shifts[1648])) * ((point_powers[17]) - (shifts[1649])) *
             ((point_powers[17]) - (shifts[1650])) * ((point_powers[17]) - (shifts[1651])) *
             ((point_powers[17]) - (shifts[1652])) * ((point_powers[17]) - (shifts[1653])) *
             ((point_powers[17]) - (shifts[1654])) * ((point_powers[17]) - (shifts[1655])) *
             ((point_powers[17]) - (shifts[1656])) * ((point_powers[17]) - (shifts[1657])) *
             ((point_powers[17]) - (shifts[1658])) * ((point_powers[17]) - (shifts[1659])) *
             ((point_powers[17]) - (shifts[1660])) * ((point_powers[17]) - (shifts[1661])) *
             ((point_powers[17]) - (shifts[1662])) * ((point_powers[17]) - (shifts[1663])) *
             ((point_powers[17]) - (shifts[1664])) * ((point_powers[17]) - (shifts[1665])) *
             ((point_powers[17]) - (shifts[1666])) * ((point_powers[17]) - (shifts[1667])) *
             ((point_powers[17]) - (shifts[1668])) * ((point_powers[17]) - (shifts[1669])) *
             ((point_powers[17]) - (shifts[1670])) * ((point_powers[17]) - (shifts[1671])) *
             ((point_powers[17]) - (shifts[1672])) * ((point_powers[17]) - (shifts[1673])) *
             ((point_powers[17]) - (shifts[1674])) * ((point_powers[17]) - (shifts[1675])) *
             ((point_powers[17]) - (shifts[1676])) * ((point_powers[17]) - (shifts[1677])) *
             ((point_powers[17]) - (shifts[1678])) * ((point_powers[17]) - (shifts[1679])) *
             ((point_powers[17]) - (shifts[1680])) * ((point_powers[17]) - (shifts[1681])) *
             ((point_powers[17]) - (shifts[1682])) * ((point_powers[17]) - (shifts[1683])) *
             ((point_powers[17]) - (shifts[1684])) * ((point_powers[17]) - (shifts[1685])) *
             ((point_powers[17]) - (shifts[1686])) * ((point_powers[17]) - (shifts[1687])) *
             ((point_powers[17]) - (shifts[1688])) * ((point_powers[17]) - (shifts[1689])) *
             ((point_powers[17]) - (shifts[1690])) * ((point_powers[17]) - (shifts[1691])) *
             ((point_powers[17]) - (shifts[1692])) * ((point_powers[17]) - (shifts[1693])) *
             ((point_powers[17]) - (shifts[1694])) * ((point_powers[17]) - (shifts[1695])) *
             ((point_powers[17]) - (shifts[1696])) * ((point_powers[17]) - (shifts[1697])) *
             ((point_powers[17]) - (shifts[1698])) * ((point_powers[17]) - (shifts[1699])) *
             ((point_powers[17]) - (shifts[1700])) * ((point_powers[17]) - (shifts[1701])) *
             ((point_powers[17]) - (shifts[1702])) * ((point_powers[17]) - (shifts[1703])) *
             ((point_powers[17]) - (shifts[1704])) * ((point_powers[17]) - (shifts[1705])) *
             ((point_powers[17]) - (shifts[1706])) * ((point_powers[17]) - (shifts[1707])) *
             ((point_powers[17]) - (shifts[1708])) * ((point_powers[17]) - (shifts[1709])) *
             ((point_powers[17]) - (shifts[1710])) * ((point_powers[17]) - (shifts[1711])) *
             ((point_powers[17]) - (shifts[1712])) * ((point_powers[17]) - (shifts[1713])) *
             ((point_powers[17]) - (shifts[1714])) * ((point_powers[17]) - (shifts[1715])) *
             ((point_powers[17]) - (shifts[1716])) * ((point_powers[17]) - (shifts[1717])) *
             ((point_powers[17]) - (shifts[1718])) * ((point_powers[17]) - (shifts[1719])) *
             ((point_powers[17]) - (shifts[1720])) * ((point_powers[17]) - (shifts[1721])) *
             ((point_powers[17]) - (shifts[1722])) * ((point_powers[17]) - (shifts[1723])) *
             ((point_powers[17]) - (shifts[1724])) * ((point_powers[17]) - (shifts[1725])) *
             ((point_powers[17]) - (shifts[1726])) * ((point_powers[17]) - (shifts[1727])) *
             ((point_powers[17]) - (shifts[1728])) * ((point_powers[17]) - (shifts[1729])) *
             ((point_powers[17]) - (shifts[1730])) * ((point_powers[17]) - (shifts[1731])) *
             ((point_powers[17]) - (shifts[1732])) * ((point_powers[17]) - (shifts[1733])) *
             ((point_powers[17]) - (shifts[1734])) * ((point_powers[17]) - (shifts[1735])) *
             ((point_powers[17]) - (shifts[1736])) * ((point_powers[17]) - (shifts[1737])) *
             ((point_powers[17]) - (shifts[1738])) * ((point_powers[17]) - (shifts[1739])) *
             ((point_powers[17]) - (shifts[1740])) * ((point_powers[17]) - (shifts[1741])) *
             ((point_powers[17]) - (shifts[1742])) * ((point_powers[17]) - (shifts[1743])) *
             ((point_powers[17]) - (shifts[1744])) * ((point_powers[17]) - (shifts[1745])) *
             ((point_powers[17]) - (shifts[1746])) * ((point_powers[17]) - (shifts[1747])) *
             ((point_powers[17]) - (shifts[1748])) * ((point_powers[17]) - (shifts[1749])) *
             ((point_powers[17]) - (shifts[1750])) * ((point_powers[17]) - (shifts[1751])) *
             ((point_powers[17]) - (shifts[1752])) * ((point_powers[17]) - (shifts[1753])) *
             ((point_powers[17]) - (shifts[1754])) * ((point_powers[17]) - (shifts[1755])) *
             ((point_powers[17]) - (shifts[1756])) * ((point_powers[17]) - (shifts[1757])) *
             ((point_powers[17]) - (shifts[1758])) * ((point_powers[17]) - (shifts[1759])) *
             ((point_powers[17]) - (shifts[1760])) * ((point_powers[17]) - (shifts[1761])) *
             ((point_powers[17]) - (shifts[1762])) * ((point_powers[17]) - (shifts[1763])) *
             ((point_powers[17]) - (shifts[1764])) * ((point_powers[17]) - (shifts[1765])) *
             ((point_powers[17]) - (shifts[1766])) * ((point_powers[17]) - (shifts[1767])) *
             ((point_powers[17]) - (shifts[1768])) * ((point_powers[17]) - (shifts[1769])) *
             ((point_powers[17]) - (shifts[1770])) * ((point_powers[17]) - (shifts[1771])) *
             ((point_powers[17]) - (shifts[1772])) * ((point_powers[17]) - (shifts[1773])) *
             ((point_powers[17]) - (shifts[1774])) * ((point_powers[17]) - (shifts[1775])) *
             ((point_powers[17]) - (shifts[1776])) * ((point_powers[17]) - (shifts[1777])) *
             ((point_powers[17]) - (shifts[1778])) * ((point_powers[17]) - (shifts[1779])) *
             ((point_powers[17]) - (shifts[1780])) * ((point_powers[17]) - (shifts[1781])) *
             ((point_powers[17]) - (shifts[1782])) * ((point_powers[17]) - (shifts[1783])) *
             ((point_powers[17]) - (shifts[1784])) * ((point_powers[17]) - (shifts[1785])) *
             ((point_powers[17]) - (shifts[1786])) * ((point_powers[17]) - (shifts[1787])) *
             ((point_powers[17]) - (shifts[1788])) * ((point_powers[17]) - (shifts[1789])) *
             ((point_powers[17]) - (shifts[1790])) * ((point_powers[17]) - (shifts[1791])) *
             ((point_powers[17]) - (shifts[1792])) * ((point_powers[17]) - (shifts[1793])) *
             ((point_powers[17]) - (shifts[1794])) * ((point_powers[17]) - (shifts[1795])) *
             ((point_powers[17]) - (shifts[1796])) * ((point_powers[17]) - (shifts[1797])) *
             ((point_powers[17]) - (shifts[1798])) * ((point_powers[17]) - (shifts[1799])) *
             ((point_powers[17]) - (shifts[1800])) * ((point_powers[17]) - (shifts[1801])) *
             ((point_powers[17]) - (shifts[1802])) * ((point_powers[17]) - (shifts[1803])) *
             ((point_powers[17]) - (shifts[1804])) * ((point_powers[17]) - (shifts[1805])) *
             ((point_powers[17]) - (shifts[1806])) * ((point_powers[17]) - (shifts[1807])) *
             ((point_powers[17]) - (shifts[1808])) * ((point_powers[17]) - (shifts[1809])) *
             ((point_powers[17]) - (shifts[1810])) * ((point_powers[17]) - (shifts[1811])) *
             ((point_powers[17]) - (shifts[1812])) * ((point_powers[17]) - (shifts[1813])) *
             ((point_powers[17]) - (shifts[1814])) * ((point_powers[17]) - (shifts[1815])) *
             ((point_powers[17]) - (shifts[1816])) * ((point_powers[17]) - (shifts[1817])) *
             ((point_powers[17]) - (shifts[1818])) * ((point_powers[17]) - (shifts[1819])) *
             ((point_powers[17]) - (shifts[1820])) * ((point_powers[17]) - (shifts[1821])) *
             ((point_powers[17]) - (shifts[1822])) * ((point_powers[17]) - (shifts[1823])) *
             ((point_powers[17]) - (shifts[1824])) * ((point_powers[17]) - (shifts[1825])) *
             ((point_powers[17]) - (shifts[1826])) * ((point_powers[17]) - (shifts[1827])) *
             ((point_powers[17]) - (shifts[1828])) * ((point_powers[17]) - (shifts[1829])) *
             ((point_powers[17]) - (shifts[1830])) * ((point_powers[17]) - (shifts[1831])) *
             ((point_powers[17]) - (shifts[1832])) * ((point_powers[17]) - (shifts[1833])) *
             ((point_powers[17]) - (shifts[1834])) * ((point_powers[17]) - (shifts[1835])) *
             ((point_powers[17]) - (shifts[1836])) * ((point_powers[17]) - (shifts[1837])) *
             ((point_powers[17]) - (shifts[1838])) * ((point_powers[17]) - (shifts[1839])) *
             ((point_powers[17]) - (shifts[1840])) * ((point_powers[17]) - (shifts[1841])) *
             ((point_powers[17]) - (shifts[1842])) * ((point_powers[17]) - (shifts[1843])) *
             ((point_powers[17]) - (shifts[1844])) * ((point_powers[17]) - (shifts[1845])) *
             ((point_powers[17]) - (shifts[1846])) * ((point_powers[17]) - (shifts[1847])) *
             ((point_powers[17]) - (shifts[1848])) * ((point_powers[17]) - (shifts[1849])) *
             ((point_powers[17]) - (shifts[1850])) * ((point_powers[17]) - (shifts[1851])) *
             ((point_powers[17]) - (shifts[1852])) * ((point_powers[17]) - (shifts[1853])) *
             ((point_powers[17]) - (shifts[1854])) * ((point_powers[17]) - (shifts[1855])) *
             ((point_powers[17]) - (shifts[1856])) * ((point_powers[17]) - (shifts[1857])) *
             ((point_powers[17]) - (shifts[1858])) * ((point_powers[17]) - (shifts[1859])) *
             ((point_powers[17]) - (shifts[1860])) * ((point_powers[17]) - (shifts[1861])) *
             ((point_powers[17]) - (shifts[1862])) * ((point_powers[17]) - (shifts[1863])) *
             ((point_powers[17]) - (shifts[1864])) * ((point_powers[17]) - (shifts[1865])) *
             ((point_powers[17]) - (shifts[1866])) * ((point_powers[17]) - (shifts[1867])) *
             ((point_powers[17]) - (shifts[1868])) * ((point_powers[17]) - (shifts[1869])) *
             ((point_powers[17]) - (shifts[1870])) * ((point_powers[17]) - (shifts[1871])) *
             ((point_powers[17]) - (shifts[1872])) * ((point_powers[17]) - (shifts[1873])) *
             ((point_powers[17]) - (shifts[1874])) * ((point_powers[17]) - (shifts[1875])) *
             ((point_powers[17]) - (shifts[1876])) * ((point_powers[17]) - (shifts[1877])) *
             ((point_powers[17]) - (shifts[1878])) * ((point_powers[17]) - (shifts[1879])) *
             ((point_powers[17]) - (shifts[1880])) * ((point_powers[17]) - (shifts[1881])) *
             ((point_powers[17]) - (shifts[1882])) * ((point_powers[17]) - (shifts[1883])) *
             ((point_powers[17]) - (shifts[1884])) * ((point_powers[17]) - (shifts[1885])) *
             ((point_powers[17]) - (shifts[1886])) * ((point_powers[17]) - (shifts[1887])) *
             ((point_powers[17]) - (shifts[1888])) * ((point_powers[17]) - (shifts[1889])) *
             ((point_powers[17]) - (shifts[1890])) * ((point_powers[17]) - (shifts[1891])) *
             ((point_powers[17]) - (shifts[1892])) * ((point_powers[17]) - (shifts[1893])) *
             ((point_powers[17]) - (shifts[1894])) * ((point_powers[17]) - (shifts[1895])) *
             ((point_powers[17]) - (shifts[1896])) * ((point_powers[17]) - (shifts[1897])) *
             ((point_powers[17]) - (shifts[1898])) * ((point_powers[17]) - (shifts[1899])) *
             ((point_powers[17]) - (shifts[1900])) * ((point_powers[17]) - (shifts[1901])) *
             ((point_powers[17]) - (shifts[1902])) * ((point_powers[17]) - (shifts[1903])) *
             ((point_powers[17]) - (shifts[1904])) * ((point_powers[17]) - (shifts[1905])) *
             ((point_powers[17]) - (shifts[1906])) * ((point_powers[17]) - (shifts[1907])) *
             ((point_powers[17]) - (shifts[1908])) * ((point_powers[17]) - (shifts[1909])) *
             ((point_powers[17]) - (shifts[1910])) * ((point_powers[17]) - (shifts[1911])) *
             ((point_powers[17]) - (shifts[1912])) * ((point_powers[17]) - (shifts[1913])) *
             ((point_powers[17]) - (shifts[1914])) * ((point_powers[17]) - (shifts[1915])) *
             ((point_powers[17]) - (shifts[1916])) * ((point_powers[17]) - (shifts[1917])) *
             ((point_powers[17]) - (shifts[1918])) * ((point_powers[17]) - (shifts[1919])) *
             ((point_powers[17]) - (shifts[1920])) * ((point_powers[17]) - (shifts[1921])) *
             ((point_powers[17]) - (shifts[1922])) * ((point_powers[17]) - (shifts[1923])) *
             ((point_powers[17]) - (shifts[1924])) * ((point_powers[17]) - (shifts[1925])) *
             ((point_powers[17]) - (shifts[1926])) * ((point_powers[17]) - (shifts[1927])) *
             ((point_powers[17]) - (shifts[1928])) * ((point_powers[17]) - (shifts[1929])) *
             ((point_powers[17]) - (shifts[1930])) * ((point_powers[17]) - (shifts[1931])) *
             ((point_powers[17]) - (shifts[1932])) * ((point_powers[17]) - (shifts[1933])) *
             ((point_powers[17]) - (shifts[1934])) * ((point_powers[17]) - (shifts[1935])) *
             ((point_powers[17]) - (shifts[1936])) * ((point_powers[17]) - (shifts[1937])) *
             ((point_powers[17]) - (shifts[1938])) * ((point_powers[17]) - (shifts[1939])) *
             ((point_powers[17]) - (shifts[1940])) * ((point_powers[17]) - (shifts[1941])) *
             ((point_powers[17]) - (shifts[1942])) * ((point_powers[17]) - (shifts[1943])) *
             ((point_powers[17]) - (shifts[1944])) * ((point_powers[17]) - (shifts[1945])) *
             ((point_powers[17]) - (shifts[1946])) * ((point_powers[17]) - (shifts[1947])) *
             ((point_powers[17]) - (shifts[1948])) * ((point_powers[17]) - (shifts[1949])) *
             ((point_powers[17]) - (shifts[1950])) * ((point_powers[17]) - (shifts[1951])) *
             ((point_powers[17]) - (shifts[1952])) * ((point_powers[17]) - (shifts[1953])) *
             ((point_powers[17]) - (shifts[1954])) * ((point_powers[17]) - (shifts[1955])) *
             ((point_powers[17]) - (shifts[1956])) * ((point_powers[17]) - (shifts[1957])) *
             ((point_powers[17]) - (shifts[1958])) * ((point_powers[17]) - (shifts[1959])) *
             ((point_powers[17]) - (shifts[1960])) * ((point_powers[17]) - (shifts[1961])) *
             ((point_powers[17]) - (shifts[1962])) * ((point_powers[17]) - (shifts[1963])) *
             ((point_powers[17]) - (shifts[1964])) * ((point_powers[17]) - (shifts[1965])) *
             ((point_powers[17]) - (shifts[1966])) * ((point_powers[17]) - (shifts[1967])) *
             ((point_powers[17]) - (shifts[1968])) * ((point_powers[17]) - (shifts[1969])) *
             ((point_powers[17]) - (shifts[1970])) * ((point_powers[17]) - (shifts[1971])) *
             ((point_powers[17]) - (shifts[1972])) * ((point_powers[17]) - (shifts[1973])) *
             ((point_powers[17]) - (shifts[1974])) * ((point_powers[17]) - (shifts[1975])) *
             ((point_powers[17]) - (shifts[1976])) * ((point_powers[17]) - (shifts[1977])) *
             ((point_powers[17]) - (shifts[1978])) * ((point_powers[17]) - (shifts[1979])) *
             ((point_powers[17]) - (shifts[1980])) * ((point_powers[17]) - (shifts[1981])) *
             ((point_powers[17]) - (shifts[1982])) * ((point_powers[17]) - (shifts[1983])) *
             ((point_powers[17]) - (shifts[1984])) * ((point_powers[17]) - (shifts[1985])) *
             ((point_powers[17]) - (shifts[1986])) * ((point_powers[17]) - (shifts[1987])) *
             ((point_powers[17]) - (shifts[1988])) * ((point_powers[17]) - (shifts[1989])) *
             ((point_powers[17]) - (shifts[1990])) * ((point_powers[17]) - (shifts[1991])) *
             ((point_powers[17]) - (shifts[1992])) * ((point_powers[17]) - (shifts[1993])) *
             ((point_powers[17]) - (shifts[1994])) * ((point_powers[17]) - (shifts[1995])) *
             ((point_powers[17]) - (shifts[1996])) * ((point_powers[17]) - (shifts[1997])) *
             ((point_powers[17]) - (shifts[1998])) * ((point_powers[17]) - (shifts[1999])) *
             ((point_powers[17]) - (shifts[2000])) * ((point_powers[17]) - (shifts[2001])) *
             ((point_powers[17]) - (shifts[2002])) * ((point_powers[17]) - (shifts[2003])) *
             ((point_powers[17]) - (shifts[2004])) * ((point_powers[17]) - (shifts[2005])) *
             ((point_powers[17]) - (shifts[2006])) * ((point_powers[17]) - (shifts[2007])) *
             ((point_powers[17]) - (shifts[2008])) * ((point_powers[17]) - (shifts[2009])) *
             ((point_powers[17]) - (shifts[2010])) * ((point_powers[17]) - (shifts[2011])) *
             ((point_powers[17]) - (shifts[2012])) * ((point_powers[17]) - (shifts[2013])) *
             ((point_powers[17]) - (shifts[2014])) * ((point_powers[17]) - (shifts[2015])) *
             ((point_powers[17]) - (shifts[2016])) * ((point_powers[17]) - (shifts[2017])) *
             ((point_powers[17]) - (shifts[2018])) * ((point_powers[17]) - (shifts[2019])) *
             ((point_powers[17]) - (shifts[2020])) * ((point_powers[17]) - (shifts[2021])) *
             ((point_powers[17]) - (shifts[2022])) * ((point_powers[17]) - (shifts[2023])) *
             ((point_powers[17]) - (shifts[2024])) * ((point_powers[17]) - (shifts[2025])) *
             ((point_powers[17]) - (shifts[2026])) * ((point_powers[17]) - (shifts[2027])) *
             ((point_powers[17]) - (shifts[2028])) * ((point_powers[17]) - (shifts[2029])) *
             ((point_powers[17]) - (shifts[2030])) * ((point_powers[17]) - (shifts[2031])) *
             ((point_powers[17]) - (shifts[2032])) * ((point_powers[17]) - (shifts[2033])) *
             ((point_powers[17]) - (shifts[2034])) * ((point_powers[17]) - (shifts[2035])) *
             ((point_powers[17]) - (shifts[2036])) * ((point_powers[17]) - (shifts[2037])) *
             ((point_powers[17]) - (shifts[2038])) * ((point_powers[17]) - (shifts[2039])) *
             ((point_powers[17]) - (shifts[2040])) * ((point_powers[17]) - (shifts[2041])) *
             ((point_powers[17]) - (shifts[2042])) * ((point_powers[17]) - (shifts[2043])) *
             ((point_powers[17]) - (shifts[2044])) * ((point_powers[17]) - (shifts[2045])) *
             ((point_powers[17]) - (shifts[2046])) * ((point_powers[17]) - (shifts[2047])) *
             ((point_powers[17]) - (shifts[2048])) * ((point_powers[17]) - (shifts[2049])) *
             ((point_powers[17]) - (shifts[2050])) * ((point_powers[17]) - (shifts[2051])) *
             ((point_powers[17]) - (shifts[2052])) * ((point_powers[17]) - (shifts[2053])) *
             ((point_powers[17]) - (shifts[2054])) * ((point_powers[17]) - (shifts[2055])) *
             ((point_powers[17]) - (shifts[2056])) * ((point_powers[17]) - (shifts[2057])) *
             ((point_powers[17]) - (shifts[2058])) * ((point_powers[17]) - (shifts[2059])) *
             ((point_powers[17]) - (shifts[2060])) * ((point_powers[17]) - (shifts[2061])) *
             ((point_powers[17]) - (shifts[2062])) * ((point_powers[17]) - (shifts[2063])) *
             ((point_powers[17]) - (shifts[2064])) * ((point_powers[17]) - (shifts[2065])) *
             ((point_powers[17]) - (shifts[2066])) * ((point_powers[17]) - (shifts[2067])) *
             ((point_powers[17]) - (shifts[2068])) * ((point_powers[17]) - (shifts[2069])) *
             ((point_powers[17]) - (shifts[2070])) * ((point_powers[17]) - (shifts[2071])) *
             ((point_powers[17]) - (shifts[2072])) * ((point_powers[17]) - (shifts[2073])) *
             ((point_powers[17]) - (shifts[2074])) * ((point_powers[17]) - (shifts[2075])) *
             ((point_powers[17]) - (shifts[2076])) * ((point_powers[17]) - (shifts[2077])) *
             ((point_powers[17]) - (shifts[2078])) * ((point_powers[17]) - (shifts[2079])) *
             (domain44) * (domain46))
          : FieldElementT::Zero();
  const FieldElementT& domain48 = ((uses_keccak_builtin) != (0))
                                      ? (((point_powers[15]) - (shifts[2080])) * (domain42))
                                      : FieldElementT::Zero();
  const FieldElementT& domain49 =
      ((uses_keccak_builtin) != (0)) ? ((domain41) * (domain43)) : FieldElementT::Zero();
  const FieldElementT& domain50 =
      ((uses_keccak_builtin) != (0)) ? ((domain46) * (domain49)) : FieldElementT::Zero();
  const FieldElementT& domain51 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1139])) * ((point_powers[17]) - (shifts[2081])) *
             ((point_powers[17]) - (shifts[2082])) * ((point_powers[17]) - (shifts[2083])) *
             ((point_powers[17]) - (shifts[2084])) * ((point_powers[17]) - (shifts[2085])) *
             ((point_powers[17]) - (shifts[2086])) * ((point_powers[17]) - (shifts[2087])))
          : FieldElementT::Zero();
  const FieldElementT& domain52 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2088])) * ((point_powers[17]) - (shifts[2089])) *
             ((point_powers[17]) - (shifts[2090])) * ((point_powers[17]) - (shifts[2091])) *
             ((point_powers[17]) - (shifts[2092])) * ((point_powers[17]) - (shifts[2093])) *
             ((point_powers[17]) - (shifts[2094])) * ((point_powers[17]) - (shifts[2095])) *
             ((point_powers[17]) - (shifts[2096])) * ((point_powers[17]) - (shifts[2097])) *
             ((point_powers[17]) - (shifts[2098])) * ((point_powers[17]) - (shifts[2099])) *
             ((point_powers[17]) - (shifts[2100])) * ((point_powers[17]) - (shifts[2101])) *
             ((point_powers[17]) - (shifts[2102])) * ((point_powers[17]) - (shifts[2103])) *
             (domain50) * (domain51))
          : FieldElementT::Zero();
  const FieldElementT& domain53 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1345])) * ((point_powers[17]) - (shifts[2104])) *
             ((point_powers[17]) - (shifts[2105])) * ((point_powers[17]) - (shifts[2106])) *
             ((point_powers[17]) - (shifts[2107])) * ((point_powers[17]) - (shifts[2108])) *
             ((point_powers[17]) - (shifts[2109])) * ((point_powers[17]) - (shifts[2110])))
          : FieldElementT::Zero();
  const FieldElementT& domain54 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2111])) * ((point_powers[17]) - (shifts[2112])) *
             ((point_powers[17]) - (shifts[2113])) * ((point_powers[17]) - (shifts[2114])) *
             ((point_powers[17]) - (shifts[2115])) * ((point_powers[17]) - (shifts[2116])) *
             ((point_powers[17]) - (shifts[2117])) * ((point_powers[17]) - (shifts[2118])) *
             ((point_powers[17]) - (shifts[2119])) * ((point_powers[17]) - (shifts[2120])) *
             ((point_powers[17]) - (shifts[2121])) * ((point_powers[17]) - (shifts[2122])) *
             ((point_powers[17]) - (shifts[2123])) * ((point_powers[17]) - (shifts[2124])) *
             ((point_powers[17]) - (shifts[2125])) * ((point_powers[17]) - (shifts[2126])) *
             (domain52) * (domain53))
          : FieldElementT::Zero();
  const FieldElementT& domain55 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1137])) * ((point_powers[17]) - (shifts[2127])) *
             ((point_powers[17]) - (shifts[2128])) * ((point_powers[17]) - (shifts[2129])) *
             ((point_powers[17]) - (shifts[2130])) * ((point_powers[17]) - (shifts[2131])) *
             ((point_powers[17]) - (shifts[2132])) * ((point_powers[17]) - (shifts[2133])) *
             ((point_powers[17]) - (shifts[1317])) * ((point_powers[17]) - (shifts[2134])) *
             ((point_powers[17]) - (shifts[2135])) * ((point_powers[17]) - (shifts[2136])) *
             ((point_powers[17]) - (shifts[2137])) * ((point_powers[17]) - (shifts[2138])) *
             ((point_powers[17]) - (shifts[2139])) * ((point_powers[17]) - (shifts[2140])) *
             ((point_powers[17]) - (shifts[1138])) * ((point_powers[17]) - (shifts[2141])) *
             ((point_powers[17]) - (shifts[2142])) * ((point_powers[17]) - (shifts[2143])) *
             ((point_powers[17]) - (shifts[2144])) * ((point_powers[17]) - (shifts[2145])) *
             ((point_powers[17]) - (shifts[2146])) * ((point_powers[17]) - (shifts[2147])))
          : FieldElementT::Zero();
  const FieldElementT& domain56 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2148])) * ((point_powers[17]) - (shifts[2149])) *
             ((point_powers[17]) - (shifts[2150])) * ((point_powers[17]) - (shifts[2151])) *
             ((point_powers[17]) - (shifts[2152])) * ((point_powers[17]) - (shifts[2153])) *
             ((point_powers[17]) - (shifts[2154])) * ((point_powers[17]) - (shifts[2155])) *
             ((point_powers[17]) - (shifts[2156])) * ((point_powers[17]) - (shifts[2157])) *
             ((point_powers[17]) - (shifts[2158])) * ((point_powers[17]) - (shifts[2159])) *
             ((point_powers[17]) - (shifts[2160])) * ((point_powers[17]) - (shifts[2161])) *
             ((point_powers[17]) - (shifts[2162])) * ((point_powers[17]) - (shifts[2163])) *
             ((point_powers[17]) - (shifts[2164])) * ((point_powers[17]) - (shifts[2165])) *
             ((point_powers[17]) - (shifts[2166])) * ((point_powers[17]) - (shifts[2167])) *
             ((point_powers[17]) - (shifts[2168])) * ((point_powers[17]) - (shifts[2169])) *
             ((point_powers[17]) - (shifts[2170])) * ((point_powers[17]) - (shifts[2171])) *
             ((point_powers[17]) - (shifts[2172])) * ((point_powers[17]) - (shifts[2173])) *
             ((point_powers[17]) - (shifts[2174])) * ((point_powers[17]) - (shifts[2175])) *
             ((point_powers[17]) - (shifts[2176])) * ((point_powers[17]) - (shifts[2177])) *
             ((point_powers[17]) - (shifts[2178])) * ((point_powers[17]) - (shifts[2179])) *
             ((point_powers[17]) - (shifts[2180])) * ((point_powers[17]) - (shifts[2181])) *
             ((point_powers[17]) - (shifts[2182])) * ((point_powers[17]) - (shifts[2183])) *
             ((point_powers[17]) - (shifts[2184])) * ((point_powers[17]) - (shifts[2185])) *
             ((point_powers[17]) - (shifts[2186])) * ((point_powers[17]) - (shifts[2187])) *
             ((point_powers[17]) - (shifts[2188])) * ((point_powers[17]) - (shifts[2189])) *
             ((point_powers[17]) - (shifts[2190])) * ((point_powers[17]) - (shifts[2191])) *
             ((point_powers[17]) - (shifts[2192])) * ((point_powers[17]) - (shifts[2193])) *
             ((point_powers[17]) - (shifts[2194])) * ((point_powers[17]) - (shifts[2195])) *
             (domain54) * (domain55))
          : FieldElementT::Zero();
  const FieldElementT& domain57 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1136])) * ((point_powers[17]) - (shifts[2196])) *
             ((point_powers[17]) - (shifts[2197])) * ((point_powers[17]) - (shifts[2198])) *
             ((point_powers[17]) - (shifts[2199])) * ((point_powers[17]) - (shifts[2200])) *
             ((point_powers[17]) - (shifts[2201])) * ((point_powers[17]) - (shifts[2202])) *
             ((point_powers[17]) - (shifts[1289])) * ((point_powers[17]) - (shifts[2203])) *
             ((point_powers[17]) - (shifts[2204])) * ((point_powers[17]) - (shifts[2205])) *
             ((point_powers[17]) - (shifts[2206])) * ((point_powers[17]) - (shifts[2207])) *
             ((point_powers[17]) - (shifts[2208])) * ((point_powers[17]) - (shifts[2209])))
          : FieldElementT::Zero();
  const FieldElementT& domain58 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2210])) * ((point_powers[17]) - (shifts[2211])) *
             ((point_powers[17]) - (shifts[2212])) * ((point_powers[17]) - (shifts[2213])) *
             ((point_powers[17]) - (shifts[2214])) * ((point_powers[17]) - (shifts[2215])) *
             ((point_powers[17]) - (shifts[2216])) * ((point_powers[17]) - (shifts[2217])) *
             ((point_powers[17]) - (shifts[2218])) * ((point_powers[17]) - (shifts[2219])) *
             ((point_powers[17]) - (shifts[2220])) * ((point_powers[17]) - (shifts[2221])) *
             ((point_powers[17]) - (shifts[2222])) * ((point_powers[17]) - (shifts[2223])) *
             ((point_powers[17]) - (shifts[2224])) * ((point_powers[17]) - (shifts[2225])) *
             ((point_powers[17]) - (shifts[2226])) * ((point_powers[17]) - (shifts[2227])) *
             ((point_powers[17]) - (shifts[2228])) * ((point_powers[17]) - (shifts[2229])) *
             ((point_powers[17]) - (shifts[2230])) * ((point_powers[17]) - (shifts[2231])) *
             ((point_powers[17]) - (shifts[2232])) * ((point_powers[17]) - (shifts[2233])) *
             ((point_powers[17]) - (shifts[2234])) * ((point_powers[17]) - (shifts[2235])) *
             ((point_powers[17]) - (shifts[2236])) * ((point_powers[17]) - (shifts[2237])) *
             ((point_powers[17]) - (shifts[2238])) * ((point_powers[17]) - (shifts[2239])) *
             ((point_powers[17]) - (shifts[2240])) * ((point_powers[17]) - (shifts[2241])) *
             (domain56) * (domain57))
          : FieldElementT::Zero();
  const FieldElementT& domain59 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1261])) * ((point_powers[17]) - (shifts[2242])) *
             ((point_powers[17]) - (shifts[2243])) * ((point_powers[17]) - (shifts[2244])) *
             ((point_powers[17]) - (shifts[2245])) * ((point_powers[17]) - (shifts[2246])) *
             ((point_powers[17]) - (shifts[2247])) * ((point_powers[17]) - (shifts[2248])))
          : FieldElementT::Zero();
  const FieldElementT& domain60 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[1135])) * ((point_powers[17]) - (shifts[2249])) *
             ((point_powers[17]) - (shifts[2250])) * ((point_powers[17]) - (shifts[2251])) *
             ((point_powers[17]) - (shifts[2252])) * ((point_powers[17]) - (shifts[2253])) *
             ((point_powers[17]) - (shifts[2254])) * ((point_powers[17]) - (shifts[2255])) *
             (domain59))
          : FieldElementT::Zero();
  const FieldElementT& domain61 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2256])) * ((point_powers[17]) - (shifts[2257])) *
             ((point_powers[17]) - (shifts[2258])) * ((point_powers[17]) - (shifts[2259])) *
             ((point_powers[17]) - (shifts[2260])) * ((point_powers[17]) - (shifts[2261])) *
             ((point_powers[17]) - (shifts[2262])) * ((point_powers[17]) - (shifts[2263])) *
             ((point_powers[17]) - (shifts[2264])) * ((point_powers[17]) - (shifts[2265])) *
             ((point_powers[17]) - (shifts[2266])) * ((point_powers[17]) - (shifts[2267])) *
             ((point_powers[17]) - (shifts[2268])) * ((point_powers[17]) - (shifts[2269])) *
             ((point_powers[17]) - (shifts[2270])) * ((point_powers[17]) - (shifts[2271])) *
             ((point_powers[17]) - (shifts[2272])) * ((point_powers[17]) - (shifts[2273])) *
             ((point_powers[17]) - (shifts[2274])) * ((point_powers[17]) - (shifts[2275])) *
             ((point_powers[17]) - (shifts[2276])) * ((point_powers[17]) - (shifts[2277])) *
             ((point_powers[17]) - (shifts[2278])) * ((point_powers[17]) - (shifts[2279])) *
             ((point_powers[17]) - (shifts[2280])) * ((point_powers[17]) - (shifts[2281])) *
             ((point_powers[17]) - (shifts[2282])) * ((point_powers[17]) - (shifts[2283])) *
             ((point_powers[17]) - (shifts[2284])) * ((point_powers[17]) - (shifts[2285])) *
             ((point_powers[17]) - (shifts[2286])) * ((point_powers[17]) - (shifts[2287])) *
             (domain58) * (domain60))
          : FieldElementT::Zero();
  const FieldElementT& domain62 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2080])) * ((point_powers[17]) - (shifts[2288])) *
             ((point_powers[17]) - (shifts[2289])) * ((point_powers[17]) - (shifts[2290])) *
             ((point_powers[17]) - (shifts[2291])) * ((point_powers[17]) - (shifts[2292])) *
             ((point_powers[17]) - (shifts[2293])) * ((point_powers[17]) - (shifts[2294])) *
             ((point_powers[17]) - (shifts[2295])) * ((point_powers[17]) - (shifts[2296])) *
             ((point_powers[17]) - (shifts[2297])) * ((point_powers[17]) - (shifts[2298])) *
             ((point_powers[17]) - (shifts[2299])) * ((point_powers[17]) - (shifts[2300])) *
             ((point_powers[17]) - (shifts[2301])) * ((point_powers[17]) - (shifts[2302])) *
             ((point_powers[17]) - (shifts[1134])) * ((point_powers[17]) - (shifts[2303])) *
             ((point_powers[17]) - (shifts[2304])) * ((point_powers[17]) - (shifts[2305])) *
             ((point_powers[17]) - (shifts[2306])) * ((point_powers[17]) - (shifts[2307])) *
             ((point_powers[17]) - (shifts[2308])) * ((point_powers[17]) - (shifts[2309])) *
             ((point_powers[17]) - (shifts[1233])) * ((point_powers[17]) - (shifts[2310])) *
             ((point_powers[17]) - (shifts[2311])) * ((point_powers[17]) - (shifts[2312])) *
             ((point_powers[17]) - (shifts[2313])) * ((point_powers[17]) - (shifts[2314])) *
             ((point_powers[17]) - (shifts[2315])) * ((point_powers[17]) - (shifts[2316])))
          : FieldElementT::Zero();
  const FieldElementT& domain63 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2317])) * ((point_powers[17]) - (shifts[2318])) *
             ((point_powers[17]) - (shifts[2319])) * ((point_powers[17]) - (shifts[2320])) *
             ((point_powers[17]) - (shifts[2321])) * ((point_powers[17]) - (shifts[2322])) *
             ((point_powers[17]) - (shifts[2323])) * ((point_powers[17]) - (shifts[2324])) *
             ((point_powers[17]) - (shifts[2325])) * ((point_powers[17]) - (shifts[2326])) *
             ((point_powers[17]) - (shifts[2327])) * ((point_powers[17]) - (shifts[2328])) *
             ((point_powers[17]) - (shifts[2329])) * ((point_powers[17]) - (shifts[2330])) *
             ((point_powers[17]) - (shifts[2331])) * ((point_powers[17]) - (shifts[2332])) *
             ((point_powers[17]) - (shifts[2333])) * ((point_powers[17]) - (shifts[2334])) *
             ((point_powers[17]) - (shifts[2335])) * ((point_powers[17]) - (shifts[2336])) *
             ((point_powers[17]) - (shifts[2337])) * ((point_powers[17]) - (shifts[2338])) *
             ((point_powers[17]) - (shifts[2339])) * ((point_powers[17]) - (shifts[2340])) *
             ((point_powers[17]) - (shifts[2341])) * ((point_powers[17]) - (shifts[2342])) *
             ((point_powers[17]) - (shifts[2343])) * ((point_powers[17]) - (shifts[2344])) *
             ((point_powers[17]) - (shifts[2345])) * ((point_powers[17]) - (shifts[2346])) *
             ((point_powers[17]) - (shifts[2347])) * ((point_powers[17]) - (shifts[2348])) *
             ((point_powers[17]) - (shifts[2349])) * ((point_powers[17]) - (shifts[2350])) *
             ((point_powers[17]) - (shifts[2351])) * ((point_powers[17]) - (shifts[2352])) *
             ((point_powers[17]) - (shifts[2353])) * ((point_powers[17]) - (shifts[2354])) *
             ((point_powers[17]) - (shifts[2355])) * ((point_powers[17]) - (shifts[2356])) *
             ((point_powers[17]) - (shifts[2357])) * ((point_powers[17]) - (shifts[2358])) *
             ((point_powers[17]) - (shifts[2359])) * ((point_powers[17]) - (shifts[2360])) *
             ((point_powers[17]) - (shifts[2361])) * ((point_powers[17]) - (shifts[2362])) *
             ((point_powers[17]) - (shifts[2363])) * ((point_powers[17]) - (shifts[2364])) *
             ((point_powers[17]) - (shifts[2365])) * ((point_powers[17]) - (shifts[2366])) *
             ((point_powers[17]) - (shifts[2367])) * ((point_powers[17]) - (shifts[2368])) *
             ((point_powers[17]) - (shifts[2369])) * ((point_powers[17]) - (shifts[2370])) *
             ((point_powers[17]) - (shifts[2371])) * ((point_powers[17]) - (shifts[2372])) *
             ((point_powers[17]) - (shifts[2373])) * ((point_powers[17]) - (shifts[2374])) *
             ((point_powers[17]) - (shifts[2375])) * ((point_powers[17]) - (shifts[2376])) *
             ((point_powers[17]) - (shifts[2377])) * ((point_powers[17]) - (shifts[2378])) *
             ((point_powers[17]) - (shifts[2379])) * ((point_powers[17]) - (shifts[2380])) *
             (domain61) * (domain62))
          : FieldElementT::Zero();
  const FieldElementT& domain64 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2381])) * ((point_powers[17]) - (shifts[2382])) *
             ((point_powers[17]) - (shifts[2383])) * ((point_powers[17]) - (shifts[2384])) *
             ((point_powers[17]) - (shifts[2385])) * ((point_powers[17]) - (shifts[2386])) *
             ((point_powers[17]) - (shifts[2387])) * ((point_powers[17]) - (shifts[2388])))
          : FieldElementT::Zero();
  const FieldElementT& domain65 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2389])) * ((point_powers[17]) - (shifts[2390])) *
             ((point_powers[17]) - (shifts[2391])) * ((point_powers[17]) - (shifts[2392])) *
             ((point_powers[17]) - (shifts[2393])) * ((point_powers[17]) - (shifts[2394])) *
             ((point_powers[17]) - (shifts[2395])) * ((point_powers[17]) - (shifts[2396])) *
             ((point_powers[17]) - (shifts[2397])) * ((point_powers[17]) - (shifts[2398])) *
             ((point_powers[17]) - (shifts[2399])) * ((point_powers[17]) - (shifts[2400])) *
             ((point_powers[17]) - (shifts[2401])) * ((point_powers[17]) - (shifts[2402])) *
             ((point_powers[17]) - (shifts[2403])) * ((point_powers[17]) - (shifts[2404])) *
             (domain63) * (domain64))
          : FieldElementT::Zero();
  const FieldElementT& domain66 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2405])) * ((point_powers[17]) - (shifts[2406])) *
             ((point_powers[17]) - (shifts[2407])) * ((point_powers[17]) - (shifts[2408])) *
             ((point_powers[17]) - (shifts[2409])) * ((point_powers[17]) - (shifts[2410])) *
             ((point_powers[17]) - (shifts[2411])) * ((point_powers[17]) - (shifts[2412])) *
             ((point_powers[17]) - (shifts[2413])) * ((point_powers[17]) - (shifts[2414])) *
             ((point_powers[17]) - (shifts[2415])) * ((point_powers[17]) - (shifts[2416])) *
             ((point_powers[17]) - (shifts[2417])) * ((point_powers[17]) - (shifts[2418])) *
             ((point_powers[17]) - (shifts[2419])) * ((point_powers[17]) - (shifts[2420])) *
             ((point_powers[17]) - (shifts[2421])) * ((point_powers[17]) - (shifts[2422])) *
             ((point_powers[17]) - (shifts[2423])) * ((point_powers[17]) - (shifts[2424])) *
             ((point_powers[17]) - (shifts[2425])) * ((point_powers[17]) - (shifts[2426])) *
             ((point_powers[17]) - (shifts[2427])) * ((point_powers[17]) - (shifts[2428])))
          : FieldElementT::Zero();
  const FieldElementT& domain67 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2429])) * ((point_powers[17]) - (shifts[2430])) *
             ((point_powers[17]) - (shifts[2431])) * ((point_powers[17]) - (shifts[2432])) *
             ((point_powers[17]) - (shifts[2433])) * ((point_powers[17]) - (shifts[2434])) *
             ((point_powers[17]) - (shifts[2435])) * ((point_powers[17]) - (shifts[2436])) *
             ((point_powers[17]) - (shifts[2437])) * ((point_powers[17]) - (shifts[2438])) *
             ((point_powers[17]) - (shifts[2439])) * ((point_powers[17]) - (shifts[2440])) *
             ((point_powers[17]) - (shifts[2441])) * ((point_powers[17]) - (shifts[2442])) *
             ((point_powers[17]) - (shifts[2443])) * ((point_powers[17]) - (shifts[2444])) *
             ((point_powers[17]) - (shifts[2445])) * ((point_powers[17]) - (shifts[2446])) *
             ((point_powers[17]) - (shifts[2447])) * ((point_powers[17]) - (shifts[2448])) *
             ((point_powers[17]) - (shifts[2449])) * ((point_powers[17]) - (shifts[2450])) *
             ((point_powers[17]) - (shifts[2451])) * ((point_powers[17]) - (shifts[2452])) *
             ((point_powers[17]) - (shifts[2453])) * ((point_powers[17]) - (shifts[2454])) *
             ((point_powers[17]) - (shifts[2455])) * ((point_powers[17]) - (shifts[2456])) *
             ((point_powers[17]) - (shifts[2457])) * ((point_powers[17]) - (shifts[2458])) *
             ((point_powers[17]) - (shifts[2459])) * ((point_powers[17]) - (shifts[2460])) *
             ((point_powers[17]) - (shifts[2461])) * ((point_powers[17]) - (shifts[2462])) *
             ((point_powers[17]) - (shifts[2463])) * ((point_powers[17]) - (shifts[2464])) *
             ((point_powers[17]) - (shifts[2465])) * ((point_powers[17]) - (shifts[2466])) *
             ((point_powers[17]) - (shifts[2467])) * ((point_powers[17]) - (shifts[2468])) *
             ((point_powers[17]) - (shifts[2469])) * ((point_powers[17]) - (shifts[2470])) *
             ((point_powers[17]) - (shifts[2471])) * ((point_powers[17]) - (shifts[2472])) *
             ((point_powers[17]) - (shifts[2473])) * ((point_powers[17]) - (shifts[2474])) *
             ((point_powers[17]) - (shifts[2475])) * ((point_powers[17]) - (shifts[2476])) *
             (domain65) * (domain66))
          : FieldElementT::Zero();
  const FieldElementT& domain68 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2477])) * ((point_powers[17]) - (shifts[2478])) *
             ((point_powers[17]) - (shifts[2479])) * ((point_powers[17]) - (shifts[2480])) *
             ((point_powers[17]) - (shifts[2481])) * ((point_powers[17]) - (shifts[2482])) *
             ((point_powers[17]) - (shifts[2483])) * ((point_powers[17]) - (shifts[2484])))
          : FieldElementT::Zero();
  const FieldElementT& domain69 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2485])) * ((point_powers[17]) - (shifts[2486])) *
             ((point_powers[17]) - (shifts[2487])) * ((point_powers[17]) - (shifts[2488])) *
             ((point_powers[17]) - (shifts[2489])) * ((point_powers[17]) - (shifts[2490])) *
             ((point_powers[17]) - (shifts[2491])) * ((point_powers[17]) - (shifts[2492])) *
             ((point_powers[17]) - (shifts[2493])) * ((point_powers[17]) - (shifts[2494])) *
             ((point_powers[17]) - (shifts[2495])) * ((point_powers[17]) - (shifts[2496])) *
             ((point_powers[17]) - (shifts[2497])) * ((point_powers[17]) - (shifts[2498])) *
             ((point_powers[17]) - (shifts[2499])) * ((point_powers[17]) - (shifts[2500])) *
             (domain67) * (domain68))
          : FieldElementT::Zero();
  const FieldElementT& domain70 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[356])) * ((point_powers[17]) - (shifts[2501])) *
             ((point_powers[17]) - (shifts[2502])) * ((point_powers[17]) - (shifts[2503])) *
             ((point_powers[17]) - (shifts[2504])) * ((point_powers[17]) - (shifts[2505])) *
             ((point_powers[17]) - (shifts[2506])) * ((point_powers[17]) - (shifts[2507])))
          : FieldElementT::Zero();
  const FieldElementT& domain71 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2508])) * ((point_powers[17]) - (shifts[2509])) *
             ((point_powers[17]) - (shifts[2510])) * ((point_powers[17]) - (shifts[2511])) *
             ((point_powers[17]) - (shifts[2512])) * ((point_powers[17]) - (shifts[2513])) *
             ((point_powers[17]) - (shifts[2514])) * ((point_powers[17]) - (shifts[2515])) *
             ((point_powers[17]) - (shifts[2516])) * ((point_powers[17]) - (shifts[2517])) *
             ((point_powers[17]) - (shifts[2518])) * ((point_powers[17]) - (shifts[2519])) *
             ((point_powers[17]) - (shifts[2520])) * ((point_powers[17]) - (shifts[2521])) *
             ((point_powers[17]) - (shifts[2522])) * ((point_powers[17]) - (shifts[2523])) *
             (domain69) * (domain70))
          : FieldElementT::Zero();
  const FieldElementT& domain72 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2524])) * ((point_powers[17]) - (shifts[2525])) *
             ((point_powers[17]) - (shifts[2526])) * ((point_powers[17]) - (shifts[2527])) *
             ((point_powers[17]) - (shifts[2528])) * ((point_powers[17]) - (shifts[2529])) *
             ((point_powers[17]) - (shifts[2530])) * ((point_powers[17]) - (shifts[2531])))
          : FieldElementT::Zero();
  const FieldElementT& domain73 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2532])) * ((point_powers[17]) - (shifts[2533])) *
             ((point_powers[17]) - (shifts[2534])) * ((point_powers[17]) - (shifts[2535])) *
             ((point_powers[17]) - (shifts[2536])) * ((point_powers[17]) - (shifts[2537])) *
             ((point_powers[17]) - (shifts[2538])) * ((point_powers[17]) - (shifts[2539])) *
             ((point_powers[17]) - (shifts[2540])) * ((point_powers[17]) - (shifts[2541])) *
             ((point_powers[17]) - (shifts[2542])) * ((point_powers[17]) - (shifts[2543])) *
             ((point_powers[17]) - (shifts[2544])) * ((point_powers[17]) - (shifts[2545])) *
             ((point_powers[17]) - (shifts[2546])) * ((point_powers[17]) - (shifts[2547])) *
             (domain71) * (domain72))
          : FieldElementT::Zero();
  const FieldElementT& domain74 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2548])) * ((point_powers[17]) - (shifts[2549])) *
             ((point_powers[17]) - (shifts[2550])) * ((point_powers[17]) - (shifts[2551])) *
             ((point_powers[17]) - (shifts[2552])) * ((point_powers[17]) - (shifts[2553])) *
             ((point_powers[17]) - (shifts[2554])) * ((point_powers[17]) - (shifts[2555])) *
             ((point_powers[17]) - (shifts[332])) * ((point_powers[17]) - (shifts[2556])) *
             ((point_powers[17]) - (shifts[2557])) * ((point_powers[17]) - (shifts[2558])) *
             ((point_powers[17]) - (shifts[2559])) * ((point_powers[17]) - (shifts[2560])) *
             ((point_powers[17]) - (shifts[2561])) * ((point_powers[17]) - (shifts[2562])))
          : FieldElementT::Zero();
  const FieldElementT& domain75 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2563])) * ((point_powers[17]) - (shifts[2564])) *
             ((point_powers[17]) - (shifts[2565])) * ((point_powers[17]) - (shifts[2566])) *
             ((point_powers[17]) - (shifts[2567])) * ((point_powers[17]) - (shifts[2568])) *
             ((point_powers[17]) - (shifts[2569])) * ((point_powers[17]) - (shifts[2570])) *
             ((point_powers[17]) - (shifts[117])) * ((point_powers[17]) - (shifts[2571])) *
             ((point_powers[17]) - (shifts[2572])) * ((point_powers[17]) - (shifts[2573])) *
             ((point_powers[17]) - (shifts[2574])) * ((point_powers[17]) - (shifts[2575])) *
             ((point_powers[17]) - (shifts[2576])) * ((point_powers[17]) - (shifts[2577])) *
             (domain74))
          : FieldElementT::Zero();
  const FieldElementT& domain76 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2578])) * ((point_powers[17]) - (shifts[2579])) *
             ((point_powers[17]) - (shifts[2580])) * ((point_powers[17]) - (shifts[2581])) *
             ((point_powers[17]) - (shifts[2582])) * ((point_powers[17]) - (shifts[2583])) *
             ((point_powers[17]) - (shifts[2584])) * ((point_powers[17]) - (shifts[2585])) *
             ((point_powers[17]) - (shifts[2586])) * ((point_powers[17]) - (shifts[2587])) *
             ((point_powers[17]) - (shifts[2588])) * ((point_powers[17]) - (shifts[2589])) *
             ((point_powers[17]) - (shifts[2590])) * ((point_powers[17]) - (shifts[2591])) *
             ((point_powers[17]) - (shifts[2592])) * ((point_powers[17]) - (shifts[2593])) *
             ((point_powers[17]) - (shifts[2594])) * ((point_powers[17]) - (shifts[2595])) *
             ((point_powers[17]) - (shifts[2596])) * ((point_powers[17]) - (shifts[2597])) *
             ((point_powers[17]) - (shifts[2598])) * ((point_powers[17]) - (shifts[2599])) *
             ((point_powers[17]) - (shifts[2600])) * ((point_powers[17]) - (shifts[2601])) *
             ((point_powers[17]) - (shifts[2602])) * ((point_powers[17]) - (shifts[2603])) *
             ((point_powers[17]) - (shifts[2604])) * ((point_powers[17]) - (shifts[2605])) *
             ((point_powers[17]) - (shifts[2606])) * ((point_powers[17]) - (shifts[2607])) *
             ((point_powers[17]) - (shifts[2608])) * ((point_powers[17]) - (shifts[2609])) *
             ((point_powers[17]) - (shifts[2610])) * ((point_powers[17]) - (shifts[2611])) *
             ((point_powers[17]) - (shifts[2612])) * ((point_powers[17]) - (shifts[2613])) *
             ((point_powers[17]) - (shifts[2614])) * ((point_powers[17]) - (shifts[2615])) *
             ((point_powers[17]) - (shifts[2616])) * ((point_powers[17]) - (shifts[2617])) *
             ((point_powers[17]) - (shifts[2618])) * ((point_powers[17]) - (shifts[2619])) *
             ((point_powers[17]) - (shifts[2620])) * ((point_powers[17]) - (shifts[2621])) *
             ((point_powers[17]) - (shifts[2622])) * ((point_powers[17]) - (shifts[2623])) *
             ((point_powers[17]) - (shifts[2624])) * ((point_powers[17]) - (shifts[2625])) *
             ((point_powers[17]) - (shifts[2626])) * ((point_powers[17]) - (shifts[2627])) *
             ((point_powers[17]) - (shifts[2628])) * ((point_powers[17]) - (shifts[2629])) *
             ((point_powers[17]) - (shifts[2630])) * ((point_powers[17]) - (shifts[2631])) *
             ((point_powers[17]) - (shifts[2632])) * ((point_powers[17]) - (shifts[2633])) *
             ((point_powers[17]) - (shifts[2634])) * ((point_powers[17]) - (shifts[2635])) *
             ((point_powers[17]) - (shifts[2636])) * ((point_powers[17]) - (shifts[2637])) *
             ((point_powers[17]) - (shifts[2638])) * ((point_powers[17]) - (shifts[2639])) *
             ((point_powers[17]) - (shifts[2640])) * ((point_powers[17]) - (shifts[2641])) *
             (domain73) * (domain75))
          : FieldElementT::Zero();
  const FieldElementT& domain77 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2642])) * ((point_powers[17]) - (shifts[2643])) *
             ((point_powers[17]) - (shifts[2644])) * ((point_powers[17]) - (shifts[2645])) *
             ((point_powers[17]) - (shifts[2646])) * ((point_powers[17]) - (shifts[2647])) *
             ((point_powers[17]) - (shifts[2648])) * ((point_powers[17]) - (shifts[2649])) *
             ((point_powers[17]) - (shifts[2650])) * ((point_powers[17]) - (shifts[2651])) *
             ((point_powers[17]) - (shifts[2652])) * ((point_powers[17]) - (shifts[2653])) *
             ((point_powers[17]) - (shifts[2654])) * ((point_powers[17]) - (shifts[2655])) *
             ((point_powers[17]) - (shifts[2656])) * ((point_powers[17]) - (shifts[2657])) *
             ((point_powers[17]) - (shifts[2658])) * ((point_powers[17]) - (shifts[2659])) *
             ((point_powers[17]) - (shifts[2660])) * ((point_powers[17]) - (shifts[2661])) *
             ((point_powers[17]) - (shifts[2662])) * ((point_powers[17]) - (shifts[2663])) *
             ((point_powers[17]) - (shifts[2664])) * ((point_powers[17]) - (shifts[2665])) *
             ((point_powers[17]) - (shifts[2666])) * ((point_powers[17]) - (shifts[2667])) *
             ((point_powers[17]) - (shifts[2668])) * ((point_powers[17]) - (shifts[2669])) *
             ((point_powers[17]) - (shifts[2670])) * ((point_powers[17]) - (shifts[2671])) *
             ((point_powers[17]) - (shifts[2672])) * ((point_powers[17]) - (shifts[2673])) *
             ((point_powers[17]) - (shifts[2674])) * ((point_powers[17]) - (shifts[2675])) *
             ((point_powers[17]) - (shifts[2676])) * ((point_powers[17]) - (shifts[2677])) *
             ((point_powers[17]) - (shifts[2678])) * ((point_powers[17]) - (shifts[2679])) *
             ((point_powers[17]) - (shifts[2680])) * ((point_powers[17]) - (shifts[2681])) *
             ((point_powers[17]) - (shifts[2682])) * ((point_powers[17]) - (shifts[2683])) *
             ((point_powers[17]) - (shifts[2684])) * ((point_powers[17]) - (shifts[2685])) *
             ((point_powers[17]) - (shifts[2686])) * ((point_powers[17]) - (shifts[2687])) *
             ((point_powers[17]) - (shifts[2688])) * ((point_powers[17]) - (shifts[2689])) *
             (domain76))
          : FieldElementT::Zero();
  const FieldElementT& domain78 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2690])) * ((point_powers[17]) - (shifts[2691])) *
             ((point_powers[17]) - (shifts[2692])) * ((point_powers[17]) - (shifts[2693])) *
             ((point_powers[17]) - (shifts[2694])) * ((point_powers[17]) - (shifts[2695])) *
             ((point_powers[17]) - (shifts[2696])) * ((point_powers[17]) - (shifts[2697])) *
             ((point_powers[17]) - (shifts[2698])) * ((point_powers[17]) - (shifts[2699])) *
             ((point_powers[17]) - (shifts[2700])) * ((point_powers[17]) - (shifts[2701])) *
             ((point_powers[17]) - (shifts[2702])) * ((point_powers[17]) - (shifts[2703])) *
             ((point_powers[17]) - (shifts[2704])) * ((point_powers[17]) - (shifts[2705])) *
             ((point_powers[17]) - (shifts[2706])) * ((point_powers[17]) - (shifts[2707])) *
             ((point_powers[17]) - (shifts[2708])) * ((point_powers[17]) - (shifts[2709])) *
             ((point_powers[17]) - (shifts[2710])) * ((point_powers[17]) - (shifts[2711])) *
             ((point_powers[17]) - (shifts[2712])) * ((point_powers[17]) - (shifts[2713])) *
             (domain77))
          : FieldElementT::Zero();
  const FieldElementT& domain79 =
      ((uses_keccak_builtin) != (0)) ? ((point_powers[17]) - (shifts[37])) : FieldElementT::Zero();
  const FieldElementT& domain80 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2714])) * ((point_powers[17]) - (shifts[2715])) *
             ((point_powers[17]) - (shifts[2716])) * ((point_powers[17]) - (shifts[2717])) *
             ((point_powers[17]) - (shifts[2718])) * ((point_powers[17]) - (shifts[2719])) *
             ((point_powers[17]) - (shifts[2720])) * (domain79))
          : FieldElementT::Zero();
  const FieldElementT& domain81 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2721])) * ((point_powers[17]) - (shifts[2722])) *
             ((point_powers[17]) - (shifts[2723])) * ((point_powers[17]) - (shifts[2724])) *
             ((point_powers[17]) - (shifts[2725])) * ((point_powers[17]) - (shifts[2726])) *
             ((point_powers[17]) - (shifts[2727])) * ((point_powers[17]) - (shifts[2728])) *
             ((point_powers[17]) - (shifts[2729])) * ((point_powers[17]) - (shifts[2730])) *
             ((point_powers[17]) - (shifts[2731])) * ((point_powers[17]) - (shifts[2732])) *
             ((point_powers[17]) - (shifts[2733])) * ((point_powers[17]) - (shifts[2734])) *
             ((point_powers[17]) - (shifts[2735])) * ((point_powers[17]) - (shifts[2736])) *
             (domain33) * (domain80))
          : FieldElementT::Zero();
  const FieldElementT& domain82 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[21])) * ((point_powers[17]) - (shifts[2737])) *
             ((point_powers[17]) - (shifts[2738])) * ((point_powers[17]) - (shifts[2739])) *
             ((point_powers[17]) - (shifts[2740])) * ((point_powers[17]) - (shifts[2741])) *
             ((point_powers[17]) - (shifts[2742])) * ((point_powers[17]) - (shifts[2743])))
          : FieldElementT::Zero();
  const FieldElementT& domain83 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (shifts[2744]))
                                      : FieldElementT::Zero();
  const FieldElementT& domain84 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2745])) * ((point_powers[17]) - (shifts[2746])) *
             ((point_powers[17]) - (shifts[2747])) * ((point_powers[17]) - (shifts[2748])) *
             ((point_powers[17]) - (shifts[2749])) * ((point_powers[17]) - (shifts[2750])) *
             ((point_powers[17]) - (shifts[2751])) * ((point_powers[17]) - (shifts[164])) *
             ((point_powers[17]) - (shifts[2752])) * ((point_powers[17]) - (shifts[2753])) *
             ((point_powers[17]) - (shifts[2754])) * ((point_powers[17]) - (shifts[2755])) *
             ((point_powers[17]) - (shifts[2756])) * ((point_powers[17]) - (shifts[2757])) *
             ((point_powers[17]) - (shifts[2758])) * ((point_powers[17]) - (shifts[2759])) *
             ((point_powers[17]) - (shifts[2760])) * ((point_powers[17]) - (shifts[2761])) *
             ((point_powers[17]) - (shifts[2762])) * ((point_powers[17]) - (shifts[2763])) *
             ((point_powers[17]) - (shifts[2764])) * ((point_powers[17]) - (shifts[2765])) *
             ((point_powers[17]) - (shifts[2766])) * (domain82) * (domain83))
          : FieldElementT::Zero();
  const FieldElementT& domain85 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2767])) * ((point_powers[17]) - (shifts[2768])) *
             ((point_powers[17]) - (shifts[2769])) * ((point_powers[17]) - (shifts[2770])) *
             ((point_powers[17]) - (shifts[2771])) * ((point_powers[17]) - (shifts[2772])) *
             ((point_powers[17]) - (shifts[2773])) * ((point_powers[17]) - (shifts[2774])) *
             ((point_powers[17]) - (shifts[2775])) * ((point_powers[17]) - (shifts[2776])) *
             ((point_powers[17]) - (shifts[2777])) * ((point_powers[17]) - (shifts[2778])) *
             ((point_powers[17]) - (shifts[2779])) * ((point_powers[17]) - (shifts[2780])) *
             ((point_powers[17]) - (shifts[2781])) * ((point_powers[17]) - (shifts[2782])) *
             (domain81))
          : FieldElementT::Zero();
  const FieldElementT& domain86 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2783])) * ((point_powers[17]) - (shifts[2784])) *
             ((point_powers[17]) - (shifts[2785])) * ((point_powers[17]) - (shifts[2786])) *
             ((point_powers[17]) - (shifts[2787])) * ((point_powers[17]) - (shifts[2788])) *
             ((point_powers[17]) - (shifts[2789])) * ((point_powers[17]) - (shifts[2790])) *
             ((point_powers[17]) - (shifts[2791])) * ((point_powers[17]) - (shifts[2792])) *
             ((point_powers[17]) - (shifts[2793])) * ((point_powers[17]) - (shifts[2794])) *
             ((point_powers[17]) - (shifts[2795])) * ((point_powers[17]) - (shifts[2796])) *
             ((point_powers[17]) - (shifts[2797])) * ((point_powers[17]) - (shifts[2798])) *
             ((point_powers[17]) - (shifts[2799])) * ((point_powers[17]) - (shifts[2800])) *
             ((point_powers[17]) - (shifts[2801])) * ((point_powers[17]) - (shifts[2802])) *
             ((point_powers[17]) - (shifts[2803])) * ((point_powers[17]) - (shifts[2804])) *
             ((point_powers[17]) - (shifts[2805])) * ((point_powers[17]) - (shifts[2806])) *
             ((point_powers[17]) - (shifts[2807])) * ((point_powers[17]) - (shifts[2808])) *
             ((point_powers[17]) - (shifts[2809])) * ((point_powers[17]) - (shifts[2810])) *
             ((point_powers[17]) - (shifts[2811])) * ((point_powers[17]) - (shifts[2812])) *
             ((point_powers[17]) - (shifts[2813])) * ((point_powers[17]) - (shifts[2814])) *
             ((point_powers[17]) - (shifts[2815])) * ((point_powers[17]) - (shifts[2816])) *
             ((point_powers[17]) - (shifts[2817])) * ((point_powers[17]) - (shifts[2818])) *
             ((point_powers[17]) - (shifts[2819])) * ((point_powers[17]) - (shifts[2820])) *
             ((point_powers[17]) - (shifts[2821])) * ((point_powers[17]) - (shifts[2822])) *
             ((point_powers[17]) - (shifts[2823])) * ((point_powers[17]) - (shifts[2824])) *
             ((point_powers[17]) - (shifts[2825])) * ((point_powers[17]) - (shifts[2826])) *
             ((point_powers[17]) - (shifts[2827])) * ((point_powers[17]) - (shifts[2828])) *
             ((point_powers[17]) - (shifts[2829])) * ((point_powers[17]) - (shifts[2830])) *
             (domain84) * (domain85))
          : FieldElementT::Zero();
  const FieldElementT& domain87 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (shifts[2831]))
                                      : FieldElementT::Zero();
  const FieldElementT& domain88 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2832])) * ((point_powers[17]) - (shifts[2833])) *
             ((point_powers[17]) - (shifts[2834])) * ((point_powers[17]) - (shifts[2835])) *
             ((point_powers[17]) - (shifts[2836])) * ((point_powers[17]) - (shifts[2837])) *
             ((point_powers[17]) - (shifts[2838])) * ((point_powers[17]) - (shifts[2839])) *
             ((point_powers[17]) - (shifts[2840])) * ((point_powers[17]) - (shifts[2841])) *
             ((point_powers[17]) - (shifts[2842])) * ((point_powers[17]) - (shifts[2843])) *
             ((point_powers[17]) - (shifts[2844])) * ((point_powers[17]) - (shifts[2845])) *
             ((point_powers[17]) - (shifts[2846])) * (domain87))
          : FieldElementT::Zero();
  const FieldElementT& domain89 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2847])) * ((point_powers[17]) - (shifts[2848])) *
             ((point_powers[17]) - (shifts[2849])) * ((point_powers[17]) - (shifts[2850])) *
             ((point_powers[17]) - (shifts[2851])) * ((point_powers[17]) - (shifts[2852])) *
             ((point_powers[17]) - (shifts[2853])) * ((point_powers[17]) - (shifts[2854])) *
             (domain88))
          : FieldElementT::Zero();
  const FieldElementT& domain90 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2855])) * ((point_powers[17]) - (shifts[2856])) *
             ((point_powers[17]) - (shifts[2857])) * ((point_powers[17]) - (shifts[2858])) *
             ((point_powers[17]) - (shifts[2859])) * ((point_powers[17]) - (shifts[2860])) *
             ((point_powers[17]) - (shifts[2861])) * ((point_powers[17]) - (shifts[2862])) *
             (domain89))
          : FieldElementT::Zero();
  const FieldElementT& domain91 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2863])) * ((point_powers[17]) - (shifts[2864])) *
             ((point_powers[17]) - (shifts[2865])) * ((point_powers[17]) - (shifts[2866])) *
             ((point_powers[17]) - (shifts[2867])) * ((point_powers[17]) - (shifts[2868])) *
             ((point_powers[17]) - (shifts[2869])) * ((point_powers[17]) - (shifts[2870])) *
             ((point_powers[17]) - (shifts[2871])) * ((point_powers[17]) - (shifts[2872])) *
             ((point_powers[17]) - (shifts[2873])) * ((point_powers[17]) - (shifts[2874])) *
             ((point_powers[17]) - (shifts[2875])) * ((point_powers[17]) - (shifts[2876])) *
             ((point_powers[17]) - (shifts[2877])) * ((point_powers[17]) - (shifts[2878])) *
             ((point_powers[17]) - (shifts[2879])) * ((point_powers[17]) - (shifts[2880])) *
             ((point_powers[17]) - (shifts[2881])) * ((point_powers[17]) - (shifts[2882])) *
             ((point_powers[17]) - (shifts[2883])) * ((point_powers[17]) - (shifts[2884])) *
             ((point_powers[17]) - (shifts[2885])) * ((point_powers[17]) - (shifts[2886])) *
             ((point_powers[17]) - (shifts[2887])) * ((point_powers[17]) - (shifts[2888])) *
             ((point_powers[17]) - (shifts[2889])) * ((point_powers[17]) - (shifts[2890])) *
             ((point_powers[17]) - (shifts[2891])) * ((point_powers[17]) - (shifts[2892])) *
             ((point_powers[17]) - (shifts[2893])) * ((point_powers[17]) - (shifts[2894])) *
             (domain86))
          : FieldElementT::Zero();
  const FieldElementT& domain92 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2895])) * ((point_powers[17]) - (shifts[2896])) *
             ((point_powers[17]) - (shifts[2897])) * ((point_powers[17]) - (shifts[2898])) *
             ((point_powers[17]) - (shifts[2899])) * ((point_powers[17]) - (shifts[2900])) *
             ((point_powers[17]) - (shifts[2901])) * ((point_powers[17]) - (shifts[2902])) *
             ((point_powers[17]) - (shifts[2903])) * ((point_powers[17]) - (shifts[2904])) *
             ((point_powers[17]) - (shifts[2905])) * ((point_powers[17]) - (shifts[2906])) *
             ((point_powers[17]) - (shifts[2907])) * ((point_powers[17]) - (shifts[2908])) *
             ((point_powers[17]) - (shifts[2909])) * ((point_powers[17]) - (shifts[2910])) *
             ((point_powers[17]) - (shifts[2911])) * ((point_powers[17]) - (shifts[2912])) *
             ((point_powers[17]) - (shifts[2913])) * ((point_powers[17]) - (shifts[2914])) *
             ((point_powers[17]) - (shifts[2915])) * ((point_powers[17]) - (shifts[2916])) *
             ((point_powers[17]) - (shifts[2917])) * ((point_powers[17]) - (shifts[2918])) *
             ((point_powers[17]) - (shifts[2919])) * ((point_powers[17]) - (shifts[2920])) *
             ((point_powers[17]) - (shifts[2921])) * ((point_powers[17]) - (shifts[2922])) *
             ((point_powers[17]) - (shifts[2923])) * ((point_powers[17]) - (shifts[2924])) *
             ((point_powers[17]) - (shifts[2925])) * ((point_powers[17]) - (shifts[2926])) *
             (domain90) * (domain91))
          : FieldElementT::Zero();
  const FieldElementT& domain93 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[45])) * ((point_powers[17]) - (shifts[2927])) *
             ((point_powers[17]) - (shifts[2928])) * ((point_powers[17]) - (shifts[2929])) *
             ((point_powers[17]) - (shifts[2930])) * ((point_powers[17]) - (shifts[2931])) *
             ((point_powers[17]) - (shifts[2932])) * ((point_powers[17]) - (shifts[2933])) *
             ((point_powers[17]) - (shifts[2934])) * ((point_powers[17]) - (shifts[2935])) *
             ((point_powers[17]) - (shifts[2936])) * ((point_powers[17]) - (shifts[2937])) *
             ((point_powers[17]) - (shifts[2938])) * ((point_powers[17]) - (shifts[2939])) *
             ((point_powers[17]) - (shifts[2940])) * ((point_powers[17]) - (shifts[2941])) *
             ((point_powers[17]) - (shifts[188])) * ((point_powers[17]) - (shifts[2942])) *
             ((point_powers[17]) - (shifts[2943])) * ((point_powers[17]) - (shifts[2944])) *
             ((point_powers[17]) - (shifts[2945])) * ((point_powers[17]) - (shifts[2946])) *
             ((point_powers[17]) - (shifts[2947])) * ((point_powers[17]) - (shifts[2948])) *
             ((point_powers[17]) - (shifts[2949])) * ((point_powers[17]) - (shifts[2950])) *
             ((point_powers[17]) - (shifts[2951])) * ((point_powers[17]) - (shifts[2952])) *
             ((point_powers[17]) - (shifts[2953])) * ((point_powers[17]) - (shifts[2954])) *
             ((point_powers[17]) - (shifts[2955])) * ((point_powers[17]) - (shifts[2956])))
          : FieldElementT::Zero();
  const FieldElementT& domain94 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[212])) * ((point_powers[17]) - (shifts[2957])) *
             ((point_powers[17]) - (shifts[2958])) * ((point_powers[17]) - (shifts[2959])) *
             ((point_powers[17]) - (shifts[2960])) * ((point_powers[17]) - (shifts[2961])) *
             ((point_powers[17]) - (shifts[2962])) * ((point_powers[17]) - (shifts[2963])) *
             (domain93))
          : FieldElementT::Zero();
  const FieldElementT& domain95 = ((uses_keccak_builtin) != (0))
                                      ? ((point_powers[17]) - (shifts[2964]))
                                      : FieldElementT::Zero();
  const FieldElementT& domain96 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2965])) * ((point_powers[17]) - (shifts[2966])) *
             ((point_powers[17]) - (shifts[2967])) * ((point_powers[17]) - (shifts[2968])) *
             ((point_powers[17]) - (shifts[2969])) * ((point_powers[17]) - (shifts[2970])) *
             ((point_powers[17]) - (shifts[2971])) * ((point_powers[17]) - (shifts[2972])) *
             ((point_powers[17]) - (shifts[2973])) * ((point_powers[17]) - (shifts[2974])) *
             ((point_powers[17]) - (shifts[2975])) * ((point_powers[17]) - (shifts[2976])) *
             ((point_powers[17]) - (shifts[2977])) * ((point_powers[17]) - (shifts[2978])) *
             ((point_powers[17]) - (shifts[2979])) * ((point_powers[17]) - (shifts[2980])) *
             ((point_powers[17]) - (shifts[2981])) * ((point_powers[17]) - (shifts[2982])) *
             ((point_powers[17]) - (shifts[2983])) * ((point_powers[17]) - (shifts[2984])) *
             ((point_powers[17]) - (shifts[2985])) * ((point_powers[17]) - (shifts[2986])) *
             ((point_powers[17]) - (shifts[2987])) * (domain94) * (domain95))
          : FieldElementT::Zero();
  const FieldElementT& domain97 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2988])) * ((point_powers[17]) - (shifts[2989])) *
             ((point_powers[17]) - (shifts[2990])) * ((point_powers[17]) - (shifts[2991])) *
             ((point_powers[17]) - (shifts[2992])) * ((point_powers[17]) - (shifts[2993])) *
             ((point_powers[17]) - (shifts[2994])) * ((point_powers[17]) - (shifts[2995])) *
             (domain96))
          : FieldElementT::Zero();
  const FieldElementT& domain98 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[2996])) * ((point_powers[17]) - (shifts[2997])) *
             ((point_powers[17]) - (shifts[2998])) * ((point_powers[17]) - (shifts[2999])) *
             ((point_powers[17]) - (shifts[3000])) * ((point_powers[17]) - (shifts[3001])) *
             ((point_powers[17]) - (shifts[3002])) * ((point_powers[17]) - (shifts[3003])) *
             (domain97))
          : FieldElementT::Zero();
  const FieldElementT& domain99 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3004])) * ((point_powers[17]) - (shifts[3005])) *
             ((point_powers[17]) - (shifts[3006])) * ((point_powers[17]) - (shifts[3007])) *
             ((point_powers[17]) - (shifts[3008])) * ((point_powers[17]) - (shifts[3009])) *
             ((point_powers[17]) - (shifts[3010])) * ((point_powers[17]) - (shifts[3011])) *
             ((point_powers[17]) - (shifts[3012])) * ((point_powers[17]) - (shifts[3013])) *
             ((point_powers[17]) - (shifts[3014])) * ((point_powers[17]) - (shifts[3015])) *
             ((point_powers[17]) - (shifts[3016])) * ((point_powers[17]) - (shifts[3017])) *
             ((point_powers[17]) - (shifts[3018])) * ((point_powers[17]) - (shifts[3019])) *
             ((point_powers[17]) - (shifts[3020])) * ((point_powers[17]) - (shifts[3021])) *
             ((point_powers[17]) - (shifts[3022])) * ((point_powers[17]) - (shifts[3023])) *
             ((point_powers[17]) - (shifts[3024])) * ((point_powers[17]) - (shifts[3025])) *
             ((point_powers[17]) - (shifts[3026])) * ((point_powers[17]) - (shifts[3027])) *
             ((point_powers[17]) - (shifts[3028])) * ((point_powers[17]) - (shifts[3029])) *
             ((point_powers[17]) - (shifts[3030])) * ((point_powers[17]) - (shifts[3031])) *
             ((point_powers[17]) - (shifts[3032])) * ((point_powers[17]) - (shifts[3033])) *
             ((point_powers[17]) - (shifts[3034])) * ((point_powers[17]) - (shifts[3035])) *
             ((point_powers[17]) - (shifts[3036])) * ((point_powers[17]) - (shifts[3037])) *
             ((point_powers[17]) - (shifts[3038])) * ((point_powers[17]) - (shifts[3039])) *
             ((point_powers[17]) - (shifts[3040])) * ((point_powers[17]) - (shifts[3041])) *
             ((point_powers[17]) - (shifts[3042])) * ((point_powers[17]) - (shifts[3043])) *
             ((point_powers[17]) - (shifts[3044])) * ((point_powers[17]) - (shifts[3045])) *
             ((point_powers[17]) - (shifts[3046])) * ((point_powers[17]) - (shifts[3047])) *
             ((point_powers[17]) - (shifts[3048])) * ((point_powers[17]) - (shifts[3049])) *
             ((point_powers[17]) - (shifts[3050])) * ((point_powers[17]) - (shifts[3051])) *
             ((point_powers[17]) - (shifts[3052])) * ((point_powers[17]) - (shifts[3053])) *
             ((point_powers[17]) - (shifts[3054])) * ((point_powers[17]) - (shifts[3055])) *
             ((point_powers[17]) - (shifts[3056])) * ((point_powers[17]) - (shifts[3057])) *
             ((point_powers[17]) - (shifts[3058])) * ((point_powers[17]) - (shifts[3059])) *
             ((point_powers[17]) - (shifts[3060])) * ((point_powers[17]) - (shifts[3061])) *
             ((point_powers[17]) - (shifts[3062])) * ((point_powers[17]) - (shifts[3063])) *
             ((point_powers[17]) - (shifts[3064])) * ((point_powers[17]) - (shifts[3065])) *
             ((point_powers[17]) - (shifts[3066])) * ((point_powers[17]) - (shifts[3067])) *
             (domain92))
          : FieldElementT::Zero();
  const FieldElementT& domain100 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3068])) * ((point_powers[17]) - (shifts[3069])) *
             ((point_powers[17]) - (shifts[3070])) * ((point_powers[17]) - (shifts[3071])) *
             ((point_powers[17]) - (shifts[3072])) * ((point_powers[17]) - (shifts[3073])) *
             ((point_powers[17]) - (shifts[3074])) * ((point_powers[17]) - (shifts[3075])) *
             ((point_powers[17]) - (shifts[3076])) * ((point_powers[17]) - (shifts[3077])) *
             ((point_powers[17]) - (shifts[3078])) * ((point_powers[17]) - (shifts[3079])) *
             ((point_powers[17]) - (shifts[3080])) * ((point_powers[17]) - (shifts[3081])) *
             ((point_powers[17]) - (shifts[3082])) * ((point_powers[17]) - (shifts[3083])) *
             (domain99))
          : FieldElementT::Zero();
  const FieldElementT& domain101 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3084])) * ((point_powers[17]) - (shifts[3085])) *
             ((point_powers[17]) - (shifts[3086])) * ((point_powers[17]) - (shifts[3087])) *
             ((point_powers[17]) - (shifts[3088])) * ((point_powers[17]) - (shifts[3089])) *
             ((point_powers[17]) - (shifts[3090])) * ((point_powers[17]) - (shifts[3091])) *
             ((point_powers[17]) - (shifts[3092])) * ((point_powers[17]) - (shifts[3093])) *
             ((point_powers[17]) - (shifts[3094])) * ((point_powers[17]) - (shifts[3095])) *
             ((point_powers[17]) - (shifts[3096])) * ((point_powers[17]) - (shifts[3097])) *
             ((point_powers[17]) - (shifts[3098])) * ((point_powers[17]) - (shifts[3099])) *
             ((point_powers[17]) - (shifts[3100])) * ((point_powers[17]) - (shifts[3101])) *
             ((point_powers[17]) - (shifts[3102])) * ((point_powers[17]) - (shifts[3103])) *
             ((point_powers[17]) - (shifts[3104])) * ((point_powers[17]) - (shifts[3105])) *
             ((point_powers[17]) - (shifts[3106])) * ((point_powers[17]) - (shifts[3107])) *
             ((point_powers[17]) - (shifts[3108])) * ((point_powers[17]) - (shifts[3109])) *
             ((point_powers[17]) - (shifts[3110])) * ((point_powers[17]) - (shifts[3111])) *
             ((point_powers[17]) - (shifts[3112])) * ((point_powers[17]) - (shifts[3113])) *
             ((point_powers[17]) - (shifts[3114])) * ((point_powers[17]) - (shifts[3115])) *
             ((point_powers[17]) - (shifts[3116])) * ((point_powers[17]) - (shifts[3117])) *
             ((point_powers[17]) - (shifts[3118])) * ((point_powers[17]) - (shifts[3119])) *
             ((point_powers[17]) - (shifts[3120])) * ((point_powers[17]) - (shifts[3121])) *
             ((point_powers[17]) - (shifts[3122])) * ((point_powers[17]) - (shifts[3123])) *
             ((point_powers[17]) - (shifts[3124])) * ((point_powers[17]) - (shifts[3125])) *
             ((point_powers[17]) - (shifts[3126])) * ((point_powers[17]) - (shifts[3127])) *
             ((point_powers[17]) - (shifts[3128])) * ((point_powers[17]) - (shifts[3129])) *
             ((point_powers[17]) - (shifts[3130])) * ((point_powers[17]) - (shifts[3131])) *
             (domain100))
          : FieldElementT::Zero();
  const FieldElementT& domain102 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3132])) * ((point_powers[17]) - (shifts[3133])) *
             ((point_powers[17]) - (shifts[3134])) * ((point_powers[17]) - (shifts[3135])) *
             ((point_powers[17]) - (shifts[3136])) * ((point_powers[17]) - (shifts[3137])) *
             ((point_powers[17]) - (shifts[3138])) * ((point_powers[17]) - (shifts[3139])) *
             ((point_powers[17]) - (shifts[3140])) * ((point_powers[17]) - (shifts[3141])) *
             ((point_powers[17]) - (shifts[3142])) * ((point_powers[17]) - (shifts[3143])) *
             ((point_powers[17]) - (shifts[3144])) * ((point_powers[17]) - (shifts[3145])) *
             ((point_powers[17]) - (shifts[3146])) * ((point_powers[17]) - (shifts[3147])) *
             (domain101))
          : FieldElementT::Zero();
  const FieldElementT& domain103 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3148])) * ((point_powers[17]) - (shifts[3149])) *
             ((point_powers[17]) - (shifts[3150])) * ((point_powers[17]) - (shifts[3151])) *
             ((point_powers[17]) - (shifts[3152])) * ((point_powers[17]) - (shifts[3153])) *
             ((point_powers[17]) - (shifts[3154])) * ((point_powers[17]) - (shifts[3155])) *
             ((point_powers[17]) - (shifts[3156])) * ((point_powers[17]) - (shifts[3157])) *
             ((point_powers[17]) - (shifts[3158])) * ((point_powers[17]) - (shifts[3159])) *
             ((point_powers[17]) - (shifts[3160])) * ((point_powers[17]) - (shifts[3161])) *
             ((point_powers[17]) - (shifts[3162])) * ((point_powers[17]) - (shifts[3163])) *
             (domain98) * (domain102))
          : FieldElementT::Zero();
  const FieldElementT& domain104 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[69])) * ((point_powers[17]) - (shifts[3164])) *
             ((point_powers[17]) - (shifts[3165])) * ((point_powers[17]) - (shifts[3166])) *
             ((point_powers[17]) - (shifts[3167])) * ((point_powers[17]) - (shifts[3168])) *
             ((point_powers[17]) - (shifts[3169])) * ((point_powers[17]) - (shifts[3170])))
          : FieldElementT::Zero();
  const FieldElementT& domain105 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3171])) * ((point_powers[17]) - (shifts[3172])) *
             ((point_powers[17]) - (shifts[3173])) * ((point_powers[17]) - (shifts[3174])) *
             ((point_powers[17]) - (shifts[3175])) * ((point_powers[17]) - (shifts[3176])) *
             ((point_powers[17]) - (shifts[3177])) * ((point_powers[17]) - (shifts[3178])) *
             ((point_powers[17]) - (shifts[3179])) * ((point_powers[17]) - (shifts[3180])) *
             ((point_powers[17]) - (shifts[3181])) * ((point_powers[17]) - (shifts[3182])) *
             ((point_powers[17]) - (shifts[3183])) * ((point_powers[17]) - (shifts[3184])) *
             ((point_powers[17]) - (shifts[3185])) * ((point_powers[17]) - (shifts[3186])) *
             (domain103) * (domain104))
          : FieldElementT::Zero();
  const FieldElementT& domain106 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3187])) * ((point_powers[17]) - (shifts[3188])) *
             ((point_powers[17]) - (shifts[3189])) * ((point_powers[17]) - (shifts[3190])) *
             ((point_powers[17]) - (shifts[3191])) * ((point_powers[17]) - (shifts[3192])) *
             ((point_powers[17]) - (shifts[3193])) * ((point_powers[17]) - (shifts[3194])) *
             ((point_powers[17]) - (shifts[236])) * ((point_powers[17]) - (shifts[3195])) *
             ((point_powers[17]) - (shifts[3196])) * ((point_powers[17]) - (shifts[3197])) *
             ((point_powers[17]) - (shifts[3198])) * ((point_powers[17]) - (shifts[3199])) *
             ((point_powers[17]) - (shifts[3200])) * ((point_powers[17]) - (shifts[3201])))
          : FieldElementT::Zero();
  const FieldElementT& domain107 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3202])) * ((point_powers[17]) - (shifts[3203])) *
             ((point_powers[17]) - (shifts[3204])) * ((point_powers[17]) - (shifts[3205])) *
             ((point_powers[17]) - (shifts[3206])) * ((point_powers[17]) - (shifts[3207])) *
             ((point_powers[17]) - (shifts[3208])) * ((point_powers[17]) - (shifts[3209])) *
             ((point_powers[17]) - (shifts[260])) * ((point_powers[17]) - (shifts[3210])) *
             ((point_powers[17]) - (shifts[3211])) * ((point_powers[17]) - (shifts[3212])) *
             ((point_powers[17]) - (shifts[3213])) * ((point_powers[17]) - (shifts[3214])) *
             ((point_powers[17]) - (shifts[3215])) * ((point_powers[17]) - (shifts[3216])) *
             (domain106))
          : FieldElementT::Zero();
  const FieldElementT& domain108 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3217])) * ((point_powers[17]) - (shifts[3218])) *
             ((point_powers[17]) - (shifts[3219])) * ((point_powers[17]) - (shifts[3220])) *
             ((point_powers[17]) - (shifts[3221])) * ((point_powers[17]) - (shifts[3222])) *
             ((point_powers[17]) - (shifts[3223])) * ((point_powers[17]) - (shifts[3224])) *
             ((point_powers[17]) - (shifts[3225])) * ((point_powers[17]) - (shifts[3226])) *
             ((point_powers[17]) - (shifts[3227])) * ((point_powers[17]) - (shifts[3228])) *
             ((point_powers[17]) - (shifts[3229])) * ((point_powers[17]) - (shifts[3230])) *
             ((point_powers[17]) - (shifts[3231])) * ((point_powers[17]) - (shifts[3232])) *
             ((point_powers[17]) - (shifts[3233])) * ((point_powers[17]) - (shifts[3234])) *
             ((point_powers[17]) - (shifts[3235])) * ((point_powers[17]) - (shifts[3236])) *
             ((point_powers[17]) - (shifts[3237])) * ((point_powers[17]) - (shifts[3238])) *
             ((point_powers[17]) - (shifts[3239])) * ((point_powers[17]) - (shifts[3240])) *
             ((point_powers[17]) - (shifts[3241])) * ((point_powers[17]) - (shifts[3242])) *
             ((point_powers[17]) - (shifts[3243])) * ((point_powers[17]) - (shifts[3244])) *
             ((point_powers[17]) - (shifts[3245])) * ((point_powers[17]) - (shifts[3246])) *
             ((point_powers[17]) - (shifts[3247])) * ((point_powers[17]) - (shifts[3248])) *
             ((point_powers[17]) - (shifts[3249])) * ((point_powers[17]) - (shifts[3250])) *
             ((point_powers[17]) - (shifts[3251])) * ((point_powers[17]) - (shifts[3252])) *
             ((point_powers[17]) - (shifts[3253])) * ((point_powers[17]) - (shifts[3254])) *
             ((point_powers[17]) - (shifts[3255])) * ((point_powers[17]) - (shifts[3256])) *
             ((point_powers[17]) - (shifts[3257])) * ((point_powers[17]) - (shifts[3258])) *
             ((point_powers[17]) - (shifts[3259])) * ((point_powers[17]) - (shifts[3260])) *
             ((point_powers[17]) - (shifts[3261])) * ((point_powers[17]) - (shifts[3262])) *
             ((point_powers[17]) - (shifts[3263])) * ((point_powers[17]) - (shifts[3264])) *
             ((point_powers[17]) - (shifts[3265])) * ((point_powers[17]) - (shifts[3266])) *
             ((point_powers[17]) - (shifts[3267])) * ((point_powers[17]) - (shifts[3268])) *
             ((point_powers[17]) - (shifts[3269])) * ((point_powers[17]) - (shifts[3270])) *
             ((point_powers[17]) - (shifts[3271])) * ((point_powers[17]) - (shifts[3272])) *
             ((point_powers[17]) - (shifts[3273])) * ((point_powers[17]) - (shifts[3274])) *
             ((point_powers[17]) - (shifts[3275])) * ((point_powers[17]) - (shifts[3276])) *
             ((point_powers[17]) - (shifts[3277])) * ((point_powers[17]) - (shifts[3278])) *
             ((point_powers[17]) - (shifts[3279])) * ((point_powers[17]) - (shifts[3280])) *
             (domain105) * (domain107))
          : FieldElementT::Zero();
  const FieldElementT& domain109 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3281])) * ((point_powers[17]) - (shifts[3282])) *
             ((point_powers[17]) - (shifts[3283])) * ((point_powers[17]) - (shifts[3284])) *
             ((point_powers[17]) - (shifts[3285])) * ((point_powers[17]) - (shifts[3286])) *
             ((point_powers[17]) - (shifts[3287])) * ((point_powers[17]) - (shifts[3288])) *
             ((point_powers[17]) - (shifts[3289])) * ((point_powers[17]) - (shifts[3290])) *
             ((point_powers[17]) - (shifts[3291])) * ((point_powers[17]) - (shifts[3292])) *
             ((point_powers[17]) - (shifts[3293])) * ((point_powers[17]) - (shifts[3294])) *
             ((point_powers[17]) - (shifts[3295])) * ((point_powers[17]) - (shifts[3296])) *
             ((point_powers[17]) - (shifts[3297])) * ((point_powers[17]) - (shifts[3298])) *
             ((point_powers[17]) - (shifts[3299])) * ((point_powers[17]) - (shifts[3300])) *
             ((point_powers[17]) - (shifts[3301])) * ((point_powers[17]) - (shifts[3302])) *
             ((point_powers[17]) - (shifts[3303])) * ((point_powers[17]) - (shifts[3304])) *
             ((point_powers[17]) - (shifts[3305])) * ((point_powers[17]) - (shifts[3306])) *
             ((point_powers[17]) - (shifts[3307])) * ((point_powers[17]) - (shifts[3308])) *
             ((point_powers[17]) - (shifts[3309])) * ((point_powers[17]) - (shifts[3310])) *
             ((point_powers[17]) - (shifts[3311])) * ((point_powers[17]) - (shifts[3312])) *
             ((point_powers[17]) - (shifts[3313])) * ((point_powers[17]) - (shifts[3314])) *
             ((point_powers[17]) - (shifts[3315])) * ((point_powers[17]) - (shifts[3316])) *
             ((point_powers[17]) - (shifts[3317])) * ((point_powers[17]) - (shifts[3318])) *
             ((point_powers[17]) - (shifts[3319])) * ((point_powers[17]) - (shifts[3320])) *
             ((point_powers[17]) - (shifts[3321])) * ((point_powers[17]) - (shifts[3322])) *
             ((point_powers[17]) - (shifts[3323])) * ((point_powers[17]) - (shifts[3324])) *
             ((point_powers[17]) - (shifts[3325])) * ((point_powers[17]) - (shifts[3326])) *
             ((point_powers[17]) - (shifts[3327])) * ((point_powers[17]) - (shifts[3328])) *
             (domain108))
          : FieldElementT::Zero();
  const FieldElementT& domain110 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3329])) * ((point_powers[17]) - (shifts[3330])) *
             ((point_powers[17]) - (shifts[3331])) * ((point_powers[17]) - (shifts[3332])) *
             ((point_powers[17]) - (shifts[3333])) * ((point_powers[17]) - (shifts[3334])) *
             ((point_powers[17]) - (shifts[3335])) * ((point_powers[17]) - (shifts[3336])) *
             ((point_powers[17]) - (shifts[3337])) * ((point_powers[17]) - (shifts[3338])) *
             ((point_powers[17]) - (shifts[3339])) * ((point_powers[17]) - (shifts[3340])) *
             ((point_powers[17]) - (shifts[3341])) * ((point_powers[17]) - (shifts[3342])) *
             ((point_powers[17]) - (shifts[3343])) * ((point_powers[17]) - (shifts[3344])) *
             ((point_powers[17]) - (shifts[3345])) * ((point_powers[17]) - (shifts[3346])) *
             ((point_powers[17]) - (shifts[3347])) * ((point_powers[17]) - (shifts[3348])) *
             ((point_powers[17]) - (shifts[3349])) * ((point_powers[17]) - (shifts[3350])) *
             ((point_powers[17]) - (shifts[3351])) * ((point_powers[17]) - (shifts[3352])) *
             (domain109))
          : FieldElementT::Zero();
  const FieldElementT& domain111 =
      ((uses_keccak_builtin) != (0)) ? ((domain32) * (domain80)) : FieldElementT::Zero();
  const FieldElementT& domain112 =
      ((uses_keccak_builtin) != (0)) ? ((domain84) * (domain111)) : FieldElementT::Zero();
  const FieldElementT& domain113 =
      ((uses_keccak_builtin) != (0)) ? ((domain89) * (domain112)) : FieldElementT::Zero();
  const FieldElementT& domain114 = ((uses_keccak_builtin) != (0))
                                       ? ((domain45) * (domain49) * (domain51))
                                       : FieldElementT::Zero();
  const FieldElementT& domain115 = ((uses_keccak_builtin) != (0))
                                       ? ((domain53) * (domain55) * (domain57) * (domain114))
                                       : FieldElementT::Zero();
  const FieldElementT& domain116 =
      ((uses_keccak_builtin) != (0)) ? ((domain59) * (domain115)) : FieldElementT::Zero();
  const FieldElementT& domain117 = ((uses_keccak_builtin) != (0))
                                       ? ((domain60) * (domain62) * (domain64) * (domain66) *
                                          (domain68) * (domain70) * (domain72) * (domain115))
                                       : FieldElementT::Zero();
  const FieldElementT& domain118 =
      ((uses_keccak_builtin) != (0)) ? ((domain75) * (domain117)) : FieldElementT::Zero();
  const FieldElementT& domain119 =
      ((uses_keccak_builtin) != (0)) ? ((domain74) * (domain117)) : FieldElementT::Zero();
  const FieldElementT& domain120 =
      ((uses_keccak_builtin) != (0)) ? ((domain82) * (domain85)) : FieldElementT::Zero();
  const FieldElementT& domain121 = ((uses_keccak_builtin) != (0))
                                       ? ((domain90) * (domain98) * (domain104) * (domain112))
                                       : FieldElementT::Zero();
  const FieldElementT& domain122 =
      ((uses_keccak_builtin) != (0)) ? ((domain107) * (domain121)) : FieldElementT::Zero();
  const FieldElementT& domain123 =
      ((uses_keccak_builtin) != (0)) ? ((domain106) * (domain121)) : FieldElementT::Zero();
  const FieldElementT& domain124 =
      ((uses_keccak_builtin) != (0)) ? ((domain97) * (domain102)) : FieldElementT::Zero();
  const FieldElementT& domain125 =
      ((uses_keccak_builtin) != (0)) ? ((domain94) * (domain100)) : FieldElementT::Zero();
  const FieldElementT& domain126 =
      ((uses_keccak_builtin) != (0)) ? ((domain88) * (domain91)) : FieldElementT::Zero();
  const FieldElementT& domain127 =
      ((uses_keccak_builtin) != (0)) ? ((domain96) * (domain101)) : FieldElementT::Zero();
  const FieldElementT& domain128 =
      ((uses_keccak_builtin) != (0)) ? ((domain93) * (domain99)) : FieldElementT::Zero();
  const FieldElementT& domain129 =
      ((uses_keccak_builtin) != (0))
          ? (((point_powers[17]) - (shifts[3353])) * ((point_powers[17]) - (shifts[3354])) *
             ((point_powers[17]) - (shifts[3355])) * ((point_powers[17]) - (shifts[3356])) *
             ((point_powers[17]) - (shifts[3357])) * ((point_powers[17]) - (shifts[3358])) *
             ((point_powers[17]) - (shifts[3359])) * ((point_powers[17]) - (shifts[3360])) *
             ((point_powers[17]) - (shifts[3361])) * ((point_powers[17]) - (shifts[3362])) *
             ((point_powers[17]) - (shifts[3363])) * ((point_powers[17]) - (shifts[3364])) *
             ((point_powers[17]) - (shifts[3365])) * ((point_powers[17]) - (shifts[3366])) *
             ((point_powers[17]) - (shifts[3367])) * ((point_powers[17]) - (shifts[3368])) *
             ((point_powers[17]) - (shifts[3369])) * ((point_powers[17]) - (shifts[3370])) *
             ((point_powers[17]) - (shifts[3371])) * ((point_powers[17]) - (shifts[3372])) *
             ((point_powers[17]) - (shifts[3373])) * ((point_powers[17]) - (shifts[3374])) *
             ((point_powers[17]) - (shifts[3375])) * ((point_powers[17]) - (shifts[3376])) *
             ((point_powers[17]) - (shifts[3377])) * ((point_powers[17]) - (shifts[3378])) *
             ((point_powers[17]) - (shifts[3379])) * ((point_powers[17]) - (shifts[3380])) *
             ((point_powers[17]) - (shifts[3381])) * ((point_powers[17]) - (shifts[3382])) *
             ((point_powers[17]) - (shifts[3383])) * ((point_powers[17]) - (shifts[3384])) *
             ((point_powers[17]) - (shifts[3385])) * ((point_powers[17]) - (shifts[3386])) *
             ((point_powers[17]) - (shifts[3387])) * ((point_powers[17]) - (shifts[3388])) *
             ((point_powers[17]) - (shifts[3389])) * ((point_powers[17]) - (shifts[3390])) *
             ((point_powers[17]) - (shifts[3391])) * ((point_powers[17]) - (shifts[3392])) *
             ((point_powers[17]) - (shifts[3393])) * ((point_powers[17]) - (shifts[3394])) *
             ((point_powers[17]) - (shifts[3395])) * ((point_powers[17]) - (shifts[3396])) *
             ((point_powers[17]) - (shifts[3397])) * ((point_powers[17]) - (shifts[3398])) *
             ((point_powers[17]) - (shifts[3399])) * ((point_powers[17]) - (shifts[3400])) *
             ((point_powers[17]) - (shifts[3401])) * ((point_powers[17]) - (shifts[3402])) *
             ((point_powers[17]) - (shifts[3403])) * ((point_powers[17]) - (shifts[3404])) *
             ((point_powers[17]) - (shifts[3405])) * ((point_powers[17]) - (shifts[3406])) *
             ((point_powers[17]) - (shifts[3407])) * ((point_powers[17]) - (shifts[3408])) *
             ((point_powers[17]) - (shifts[3409])) * ((point_powers[17]) - (shifts[3410])) *
             ((point_powers[17]) - (shifts[3411])) * ((point_powers[17]) - (shifts[3412])) *
             ((point_powers[17]) - (shifts[3413])) * ((point_powers[17]) - (shifts[3414])) *
             ((point_powers[17]) - (shifts[3415])) * ((point_powers[17]) - (shifts[3416])) *
             ((point_powers[17]) - (shifts[3417])) * ((point_powers[17]) - (shifts[3418])) *
             ((point_powers[17]) - (shifts[3419])) * ((point_powers[17]) - (shifts[3420])) *
             ((point_powers[17]) - (shifts[3421])) * ((point_powers[17]) - (shifts[3422])) *
             ((point_powers[17]) - (shifts[3423])) * ((point_powers[17]) - (shifts[3424])) *
             ((point_powers[17]) - (shifts[3425])) * ((point_powers[17]) - (shifts[3426])) *
             ((point_powers[17]) - (shifts[3427])) * ((point_powers[17]) - (shifts[3428])) *
             ((point_powers[17]) - (shifts[3429])) * ((point_powers[17]) - (shifts[3430])) *
             ((point_powers[17]) - (shifts[3431])) * ((point_powers[17]) - (shifts[3432])) *
             ((point_powers[17]) - (shifts[3433])) * ((point_powers[17]) - (shifts[3434])) *
             ((point_powers[17]) - (shifts[3435])) * ((point_powers[17]) - (shifts[3436])) *
             ((point_powers[17]) - (shifts[3437])) * ((point_powers[17]) - (shifts[3438])) *
             ((point_powers[17]) - (shifts[3439])) * ((point_powers[17]) - (shifts[3440])) *
             ((point_powers[17]) - (shifts[3441])) * ((point_powers[17]) - (shifts[3442])) *
             ((point_powers[17]) - (shifts[3443])) * ((point_powers[17]) - (shifts[3444])) *
             ((point_powers[17]) - (shifts[3445])) * ((point_powers[17]) - (shifts[3446])) *
             ((point_powers[17]) - (shifts[3447])) * ((point_powers[17]) - (shifts[3448])) *
             ((point_powers[17]) - (shifts[3449])) * ((point_powers[17]) - (shifts[3450])) *
             ((point_powers[17]) - (shifts[3451])) * ((point_powers[17]) - (shifts[3452])) *
             ((point_powers[17]) - (shifts[3453])) * ((point_powers[17]) - (shifts[3454])) *
             ((point_powers[17]) - (shifts[3455])) * ((point_powers[17]) - (shifts[3456])) *
             ((point_powers[17]) - (shifts[3457])) * ((point_powers[17]) - (shifts[3458])) *
             ((point_powers[17]) - (shifts[3459])) * ((point_powers[17]) - (shifts[3460])) *
             ((point_powers[17]) - (shifts[3461])) * ((point_powers[17]) - (shifts[3462])) *
             ((point_powers[17]) - (shifts[3463])) * ((point_powers[17]) - (shifts[3464])) *
             ((point_powers[17]) - (shifts[3465])) * ((point_powers[17]) - (shifts[3466])) *
             ((point_powers[17]) - (shifts[3467])) * ((point_powers[17]) - (shifts[3468])) *
             ((point_powers[17]) - (shifts[3469])) * ((point_powers[17]) - (shifts[3470])) *
             ((point_powers[17]) - (shifts[3471])) * ((point_powers[17]) - (shifts[3472])) *
             ((point_powers[17]) - (shifts[3473])) * ((point_powers[17]) - (shifts[3474])) *
             ((point_powers[17]) - (shifts[3475])) * ((point_powers[17]) - (shifts[3476])) *
             ((point_powers[17]) - (shifts[3477])) * ((point_powers[17]) - (shifts[3478])) *
             ((point_powers[17]) - (shifts[3479])) * ((point_powers[17]) - (shifts[3480])) *
             ((point_powers[17]) - (shifts[3481])) * ((point_powers[17]) - (shifts[3482])) *
             ((point_powers[17]) - (shifts[3483])) * ((point_powers[17]) - (shifts[3484])) *
             ((point_powers[17]) - (shifts[3485])) * ((point_powers[17]) - (shifts[3486])) *
             ((point_powers[17]) - (shifts[3487])) * ((point_powers[17]) - (shifts[3488])) *
             ((point_powers[17]) - (shifts[3489])) * ((point_powers[17]) - (shifts[3490])) *
             ((point_powers[17]) - (shifts[3491])) * (domain33) * (domain41) * (domain79) *
             (domain83) * (domain87) * (domain95))
          : FieldElementT::Zero();
  const FieldElementT& domain130 = (point_powers[18]) - (FieldElementT::One());
  const FieldElementT& domain131 = (point_powers[19]) - (FieldElementT::One());
  const FieldElementT& domain132 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[20]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain133 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[21]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain134 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[21]) - (shifts[3492]))
                                       : FieldElementT::Zero();
  const FieldElementT& domain135 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[21]) - (shifts[3493]))
                                       : FieldElementT::Zero();
  const FieldElementT& domain136 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[22]) - (shifts[3494]))
                                       : FieldElementT::Zero();
  const FieldElementT& domain137 = ((uses_pedersen_builtin) != (0))
                                       ? ((point_powers[22]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain138 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[23]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain139 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[24]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain140 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[25]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain141 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[26]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain142 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[26]) - (shifts[3495]))
                                       : FieldElementT::Zero();
  const FieldElementT& domain143 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[27]) - (shifts[3496]))
                                       : FieldElementT::Zero();
  const FieldElementT& domain144 = ((uses_poseidon_builtin) != (0))
                                       ? (((point_powers[27]) - (shifts[3497])) *
                                          ((point_powers[27]) - (shifts[3498])) * (domain143))
                                       : FieldElementT::Zero();
  const FieldElementT& domain145 =
      ((uses_poseidon_builtin) != (0))
          ? (((point_powers[27]) - (shifts[3499])) * ((point_powers[27]) - (shifts[3500])) *
             ((point_powers[27]) - (shifts[3495])) * ((point_powers[27]) - (shifts[3501])) *
             ((point_powers[27]) - (shifts[3502])) * ((point_powers[27]) - (shifts[3503])) *
             ((point_powers[27]) - (shifts[3504])) * ((point_powers[27]) - (shifts[3505])) *
             ((point_powers[27]) - (shifts[3506])) * (domain143))
          : FieldElementT::Zero();
  const FieldElementT& domain146 =
      ((uses_poseidon_builtin) != (0))
          ? (((point_powers[27]) - (shifts[3507])) * ((point_powers[27]) - (shifts[3508])) *
             ((point_powers[27]) - (shifts[3509])) * (domain145))
          : FieldElementT::Zero();
  const FieldElementT& domain147 = ((uses_poseidon_builtin) != (0))
                                       ? ((point_powers[27]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain148 = ((uses_range_check_builtin) != (0))
                                       ? ((point_powers[28]) - (FieldElementT::One()))
                                       : FieldElementT::Zero();
  const FieldElementT& domain149 = (point_powers[29]) - (FieldElementT::One());
  return {
      domain0,   domain1,   domain2,   domain3,   domain4,   domain5,   domain6,   domain7,
      domain8,   domain9,   domain10,  domain11,  domain12,  domain13,  domain14,  domain15,
      domain16,  domain17,  domain18,  domain19,  domain20,  domain21,  domain22,  domain23,
      domain24,  domain25,  domain26,  domain27,  domain28,  domain29,  domain30,  domain31,
      domain32,  domain33,  domain34,  domain35,  domain36,  domain37,  domain38,  domain39,
      domain40,  domain41,  domain42,  domain43,  domain44,  domain45,  domain46,  domain47,
      domain48,  domain49,  domain50,  domain51,  domain52,  domain53,  domain54,  domain55,
      domain56,  domain57,  domain58,  domain59,  domain60,  domain61,  domain62,  domain63,
      domain64,  domain65,  domain66,  domain67,  domain68,  domain69,  domain70,  domain71,
      domain72,  domain73,  domain74,  domain75,  domain76,  domain77,  domain78,  domain79,
      domain80,  domain81,  domain82,  domain83,  domain84,  domain85,  domain86,  domain87,
      domain88,  domain89,  domain90,  domain91,  domain92,  domain93,  domain94,  domain95,
      domain96,  domain97,  domain98,  domain99,  domain100, domain101, domain102, domain103,
      domain104, domain105, domain106, domain107, domain108, domain109, domain110, domain111,
      domain112, domain113, domain114, domain115, domain116, domain117, domain118, domain119,
      domain120, domain121, domain122, domain123, domain124, domain125, domain126, domain127,
      domain128, domain129, domain130, domain131, domain132, domain133, domain134, domain135,
      domain136, domain137, domain138, domain139, domain140, domain141, domain142, domain143,
      domain144, domain145, domain146, domain147, domain148, domain149,
  };
}

template <typename FieldElementT>
std::vector<uint64_t> CpuAirDefinition<FieldElementT, 11>::ParseDynamicParams(
    [[maybe_unused]] const std::map<std::string, uint64_t>& params) const {
  std::vector<uint64_t> result;

  ASSERT_RELEASE(params.size() == kNumDynamicParams, "Inconsistent dynamic data.");
  result.reserve(kNumDynamicParams);
  result.push_back(params.at("bitwise__diluted_var_pool_suboffset"));
  result.push_back(params.at("bitwise__row_ratio"));
  result.push_back(params.at("bitwise__trim_unpacking192_suboffset"));
  result.push_back(params.at("bitwise__trim_unpacking193_suboffset"));
  result.push_back(params.at("bitwise__trim_unpacking194_suboffset"));
  result.push_back(params.at("bitwise__trim_unpacking195_suboffset"));
  result.push_back(params.at("bitwise__var_pool_suboffset"));
  result.push_back(params.at("bitwise__x_or_y_suboffset"));
  result.push_back(params.at("cpu__decode__mem_inst_suboffset"));
  result.push_back(params.at("cpu__decode__off0_suboffset"));
  result.push_back(params.at("cpu__decode__off1_suboffset"));
  result.push_back(params.at("cpu__decode__off2_suboffset"));
  result.push_back(params.at("cpu__decode__opcode_range_check__column_column"));
  result.push_back(params.at("cpu__decode__opcode_range_check__column_offset"));
  result.push_back(params.at("cpu__operands__mem_dst_suboffset"));
  result.push_back(params.at("cpu__operands__mem_op0_suboffset"));
  result.push_back(params.at("cpu__operands__mem_op1_suboffset"));
  result.push_back(params.at("cpu__operands__ops_mul_column"));
  result.push_back(params.at("cpu__operands__ops_mul_offset"));
  result.push_back(params.at("cpu__operands__res_column"));
  result.push_back(params.at("cpu__operands__res_offset"));
  result.push_back(params.at("cpu__registers__ap_column"));
  result.push_back(params.at("cpu__registers__ap_offset"));
  result.push_back(params.at("cpu__registers__fp_column"));
  result.push_back(params.at("cpu__registers__fp_offset"));
  result.push_back(params.at("cpu__update_registers__update_pc__tmp0_column"));
  result.push_back(params.at("cpu__update_registers__update_pc__tmp0_offset"));
  result.push_back(params.at("cpu__update_registers__update_pc__tmp1_column"));
  result.push_back(params.at("cpu__update_registers__update_pc__tmp1_offset"));
  result.push_back(params.at("cpu_component_step"));
  result.push_back(params.at("diluted_check__cumulative_value_column"));
  result.push_back(params.at("diluted_check__cumulative_value_offset"));
  result.push_back(params.at("diluted_check__permutation__cum_prod0_column"));
  result.push_back(params.at("diluted_check__permutation__cum_prod0_offset"));
  result.push_back(params.at("diluted_check__permuted_values_column"));
  result.push_back(params.at("diluted_check__permuted_values_offset"));
  result.push_back(params.at("diluted_pool_column"));
  result.push_back(params.at("diluted_pool_offset"));
  result.push_back(params.at("diluted_units_row_ratio"));
  result.push_back(params.at("ec_op__doubled_points__x_column"));
  result.push_back(params.at("ec_op__doubled_points__x_offset"));
  result.push_back(params.at("ec_op__doubled_points__y_column"));
  result.push_back(params.at("ec_op__doubled_points__y_offset"));
  result.push_back(params.at("ec_op__doubling_slope_column"));
  result.push_back(params.at("ec_op__doubling_slope_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__bit_unpacking__prod_ones192_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__bit_unpacking__prod_ones196_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__partial_sum__x_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__partial_sum__x_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__partial_sum__y_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__partial_sum__y_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__selector_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__selector_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__slope_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__slope_offset"));
  result.push_back(params.at("ec_op__ec_subset_sum__x_diff_inv_column"));
  result.push_back(params.at("ec_op__ec_subset_sum__x_diff_inv_offset"));
  result.push_back(params.at("ec_op__m_suboffset"));
  result.push_back(params.at("ec_op__p_x_suboffset"));
  result.push_back(params.at("ec_op__p_y_suboffset"));
  result.push_back(params.at("ec_op__q_x_suboffset"));
  result.push_back(params.at("ec_op__q_y_suboffset"));
  result.push_back(params.at("ec_op__r_x_suboffset"));
  result.push_back(params.at("ec_op__r_y_suboffset"));
  result.push_back(params.at("ec_op_builtin_row_ratio"));
  result.push_back(params.at("ecdsa__message_suboffset"));
  result.push_back(params.at("ecdsa__pubkey_suboffset"));
  result.push_back(params.at("ecdsa__signature0__add_results_inv_column"));
  result.push_back(params.at("ecdsa__signature0__add_results_inv_offset"));
  result.push_back(params.at("ecdsa__signature0__add_results_slope_column"));
  result.push_back(params.at("ecdsa__signature0__add_results_slope_offset"));
  result.push_back(params.at("ecdsa__signature0__doubling_slope_column"));
  result.push_back(params.at("ecdsa__signature0__doubling_slope_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__partial_sum__x_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__partial_sum__x_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__partial_sum__y_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__partial_sum__y_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__selector_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__selector_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__slope_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__slope_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__x_diff_inv_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_generator__x_diff_inv_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__partial_sum__x_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__partial_sum__x_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__partial_sum__y_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__partial_sum__y_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__selector_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__selector_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__slope_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__slope_offset"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__x_diff_inv_column"));
  result.push_back(params.at("ecdsa__signature0__exponentiate_key__x_diff_inv_offset"));
  result.push_back(params.at("ecdsa__signature0__extract_r_inv_column"));
  result.push_back(params.at("ecdsa__signature0__extract_r_inv_offset"));
  result.push_back(params.at("ecdsa__signature0__extract_r_slope_column"));
  result.push_back(params.at("ecdsa__signature0__extract_r_slope_offset"));
  result.push_back(params.at("ecdsa__signature0__key_points__x_column"));
  result.push_back(params.at("ecdsa__signature0__key_points__x_offset"));
  result.push_back(params.at("ecdsa__signature0__key_points__y_column"));
  result.push_back(params.at("ecdsa__signature0__key_points__y_offset"));
  result.push_back(params.at("ecdsa__signature0__q_x_squared_column"));
  result.push_back(params.at("ecdsa__signature0__q_x_squared_offset"));
  result.push_back(params.at("ecdsa__signature0__r_w_inv_column"));
  result.push_back(params.at("ecdsa__signature0__r_w_inv_offset"));
  result.push_back(params.at("ecdsa__signature0__z_inv_column"));
  result.push_back(params.at("ecdsa__signature0__z_inv_offset"));
  result.push_back(params.at("ecdsa_builtin_row_ratio"));
  result.push_back(params.at("keccak__input_output_suboffset"));
  result.push_back(params.at("keccak__keccak__diluted_column0_suboffset"));
  result.push_back(params.at("keccak__keccak__diluted_column1_suboffset"));
  result.push_back(params.at("keccak__keccak__diluted_column2_suboffset"));
  result.push_back(params.at("keccak__keccak__diluted_column3_suboffset"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__cumulative_sum_column"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__cumulative_sum_offset"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__final_reshaped_input_column"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__final_reshaped_input_offset"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__reshaped_intermediate_column"));
  result.push_back(params.at("keccak__keccak__parse_to_diluted__reshaped_intermediate_offset"));
  result.push_back(params.at("keccak__keccak__rotated_parity0_column"));
  result.push_back(params.at("keccak__keccak__rotated_parity0_offset"));
  result.push_back(params.at("keccak__keccak__rotated_parity1_column"));
  result.push_back(params.at("keccak__keccak__rotated_parity1_offset"));
  result.push_back(params.at("keccak__keccak__rotated_parity2_column"));
  result.push_back(params.at("keccak__keccak__rotated_parity2_offset"));
  result.push_back(params.at("keccak__keccak__rotated_parity3_column"));
  result.push_back(params.at("keccak__keccak__rotated_parity3_offset"));
  result.push_back(params.at("keccak__keccak__rotated_parity4_column"));
  result.push_back(params.at("keccak__keccak__rotated_parity4_offset"));
  result.push_back(params.at("keccak__row_ratio"));
  result.push_back(params.at("mem_pool__addr_column"));
  result.push_back(params.at("mem_pool__addr_offset"));
  result.push_back(params.at("mem_pool__value_column"));
  result.push_back(params.at("mem_pool__value_offset"));
  result.push_back(params.at("memory__multi_column_perm__perm__cum_prod0_column"));
  result.push_back(params.at("memory__multi_column_perm__perm__cum_prod0_offset"));
  result.push_back(params.at("memory__sorted__addr_column"));
  result.push_back(params.at("memory__sorted__addr_offset"));
  result.push_back(params.at("memory__sorted__value_column"));
  result.push_back(params.at("memory__sorted__value_offset"));
  result.push_back(params.at("memory_units_row_ratio"));
  result.push_back(params.at("num_columns_first"));
  result.push_back(params.at("num_columns_second"));
  result.push_back(params.at("orig__public_memory_suboffset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_offset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_offset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__partial_sum__x_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__partial_sum__x_offset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__partial_sum__y_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__partial_sum__y_offset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__selector_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__selector_offset"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__slope_column"));
  result.push_back(params.at("pedersen__hash0__ec_subset_sum__slope_offset"));
  result.push_back(params.at("pedersen__input0_suboffset"));
  result.push_back(params.at("pedersen__input1_suboffset"));
  result.push_back(params.at("pedersen__output_suboffset"));
  result.push_back(params.at("pedersen_builtin_row_ratio"));
  result.push_back(params.at("poseidon__param_0__input_output_suboffset"));
  result.push_back(params.at("poseidon__param_1__input_output_suboffset"));
  result.push_back(params.at("poseidon__param_2__input_output_suboffset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state0_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state0_offset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state0_squared_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state0_squared_offset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state1_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state1_offset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state1_squared_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state1_squared_offset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state2_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state2_offset"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state2_squared_column"));
  result.push_back(params.at("poseidon__poseidon__full_rounds_state2_squared_offset"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state0_column"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state0_offset"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state0_squared_column"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state0_squared_offset"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state1_column"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state1_offset"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state1_squared_column"));
  result.push_back(params.at("poseidon__poseidon__partial_rounds_state1_squared_offset"));
  result.push_back(params.at("poseidon__row_ratio"));
  result.push_back(params.at("range_check16__perm__cum_prod0_column"));
  result.push_back(params.at("range_check16__perm__cum_prod0_offset"));
  result.push_back(params.at("range_check16__sorted_column"));
  result.push_back(params.at("range_check16__sorted_offset"));
  result.push_back(params.at("range_check16_pool_column"));
  result.push_back(params.at("range_check16_pool_offset"));
  result.push_back(params.at("range_check_builtin__inner_range_check_suboffset"));
  result.push_back(params.at("range_check_builtin__mem_suboffset"));
  result.push_back(params.at("range_check_builtin_row_ratio"));
  result.push_back(params.at("range_check_units_row_ratio"));
  result.push_back(params.at("uses_bitwise_builtin"));
  result.push_back(params.at("uses_ec_op_builtin"));
  result.push_back(params.at("uses_ecdsa_builtin"));
  result.push_back(params.at("uses_keccak_builtin"));
  result.push_back(params.at("uses_pedersen_builtin"));
  result.push_back(params.at("uses_poseidon_builtin"));
  result.push_back(params.at("uses_range_check_builtin"));

  return result;
}

template <typename FieldElementT>
TraceGenerationContext CpuAirDefinition<FieldElementT, 11>::GetTraceGenerationContext() const {
  TraceGenerationContext ctx;

  ASSERT_RELEASE(
      IsPowerOfTwo(diluted_units_row_ratio),
      "Coset step (DynamicParam(diluted_units_row_ratio)) must be a power of two");

  ASSERT_RELEASE(
      IsPowerOfTwo(SafeDiv(trace_length_, diluted_units_row_ratio)),
      "Dimension should be a power of 2.");

  ASSERT_RELEASE(
      ((SafeDiv(trace_length_, diluted_units_row_ratio)) - (1)) >= (0), "Index out of range.");

  ASSERT_RELEASE(
      IsPowerOfTwo(trace_length_),
      "Coset step (MemberExpression(trace_length)) must be a power of two");

  ASSERT_RELEASE(
      (SafeDiv(trace_length_, diluted_units_row_ratio)) >= (0), "Index should be non negative.");

  ASSERT_RELEASE(
      IsPowerOfTwo(range_check_units_row_ratio),
      "Coset step (DynamicParam(range_check_units_row_ratio)) must be a power of two");

  ASSERT_RELEASE(
      IsPowerOfTwo(SafeDiv(trace_length_, range_check_units_row_ratio)),
      "Dimension should be a power of 2.");

  ASSERT_RELEASE(
      ((SafeDiv(trace_length_, range_check_units_row_ratio)) - (1)) >= (0), "Index out of range.");

  ASSERT_RELEASE(
      (SafeDiv(trace_length_, range_check_units_row_ratio)) >= (0),
      "Index should be non negative.");

  ASSERT_RELEASE(
      IsPowerOfTwo((8) * (memory_units_row_ratio)),
      "Coset step ((8) * (DynamicParam(memory_units_row_ratio))) must be a power of two");

  ASSERT_RELEASE(
      IsPowerOfTwo(SafeDiv(trace_length_, (8) * (memory_units_row_ratio))),
      "Dimension should be a power of 2.");

  ASSERT_RELEASE(
      IsPowerOfTwo(memory_units_row_ratio),
      "Coset step (DynamicParam(memory_units_row_ratio)) must be a power of two");

  ASSERT_RELEASE(
      IsPowerOfTwo(SafeDiv(trace_length_, memory_units_row_ratio)),
      "Dimension should be a power of 2.");

  ASSERT_RELEASE(
      ((SafeDiv(trace_length_, memory_units_row_ratio)) - (1)) >= (0), "Index out of range.");

  ASSERT_RELEASE(
      (SafeDiv(trace_length_, memory_units_row_ratio)) >= (0), "Index should be non negative.");

  ASSERT_RELEASE(
      IsPowerOfTwo((16) * (cpu_component_step)),
      "Coset step ((16) * (DynamicParam(cpu_component_step))) must be a power of two");

  ASSERT_RELEASE(
      IsPowerOfTwo(SafeDiv(trace_length_, (16) * (cpu_component_step))),
      "Dimension should be a power of 2.");

  ASSERT_RELEASE(
      ((SafeDiv(trace_length_, (16) * (cpu_component_step))) - (1)) >= (0),
      "step must not exceed dimension.");

  ASSERT_RELEASE(
      IsPowerOfTwo(cpu_component_step),
      "Coset step (DynamicParam(cpu_component_step)) must be a power of two");

  ASSERT_RELEASE(
      (SafeDiv(trace_length_, (16) * (cpu_component_step))) >= (0), "Index out of range.");

  ASSERT_RELEASE(((64) - (cpu_component_step)) >= (0), "cpu_component_step is out of range.");

  ASSERT_RELEASE(
      (((16) * (cpu_component_step)) - ((4) * (memory_units_row_ratio))) >= (0),
      "memory_units_row_ratio is out of range.");

  ASSERT_RELEASE(
      (cpu__decode__mem_inst_suboffset) >= (0),
      "Offset of cpu/decode/mem_inst must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__decode__mem_inst_suboffset)) - (1)) >= (0),
      "Offset of cpu/decode/mem_inst is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/decode/mem_inst is too big.");

  ASSERT_RELEASE(
      (cpu__decode__off0_suboffset) >= (0), "Offset of cpu/decode/off0 must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__decode__off0_suboffset)) - (1)) >= (0),
      "Offset of cpu/decode/off0 is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__decode__off0_suboffset) * (range_check_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/decode/off0 is too big.");

  ASSERT_RELEASE(
      (cpu__decode__off1_suboffset) >= (0), "Offset of cpu/decode/off1 must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__decode__off1_suboffset)) - (1)) >= (0),
      "Offset of cpu/decode/off1 is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__decode__off1_suboffset) * (range_check_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/decode/off1 is too big.");

  ASSERT_RELEASE(
      (cpu__decode__off2_suboffset) >= (0), "Offset of cpu/decode/off2 must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__decode__off2_suboffset)) - (1)) >= (0),
      "Offset of cpu/decode/off2 is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__decode__off2_suboffset) * (range_check_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/decode/off2 is too big.");

  ASSERT_RELEASE(
      (cpu__operands__mem_dst_suboffset) >= (0),
      "Offset of cpu/operands/mem_dst must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__operands__mem_dst_suboffset)) - (1)) >= (0),
      "Offset of cpu/operands/mem_dst is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__operands__mem_dst_suboffset) * (memory_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/operands/mem_dst is too big.");

  ASSERT_RELEASE(
      (cpu__operands__mem_op0_suboffset) >= (0),
      "Offset of cpu/operands/mem_op0 must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__operands__mem_op0_suboffset)) - (1)) >= (0),
      "Offset of cpu/operands/mem_op0 is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__operands__mem_op0_suboffset) * (memory_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/operands/mem_op0 is too big.");

  ASSERT_RELEASE(
      (cpu__operands__mem_op1_suboffset) >= (0),
      "Offset of cpu/operands/mem_op1 must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__operands__mem_op1_suboffset)) - (1)) >= (0),
      "Offset of cpu/operands/mem_op1 is too big.");

  ASSERT_RELEASE(
      ((((16) * (cpu_component_step)) -
        ((cpu__operands__mem_op1_suboffset) * (memory_units_row_ratio))) -
       (1)) >= (0),
      "Offset of cpu/operands/mem_op1 is too big.");

  ASSERT_RELEASE(
      (orig__public_memory_suboffset) >= (0), "Offset of orig/public_memory must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (orig__public_memory_suboffset)) - (1)) >= (0),
      "Offset of orig/public_memory is too big.");

  ASSERT_RELEASE(
      ((((8) * (memory_units_row_ratio)) -
        ((orig__public_memory_suboffset) * (memory_units_row_ratio))) -
       (1)) >= (0),
      "Offset of orig/public_memory is too big.");

  ASSERT_RELEASE(
      (((uses_pedersen_builtin) * (uses_pedersen_builtin)) - (uses_pedersen_builtin)) == (0),
      "uses_pedersen_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_range_check_builtin) * (uses_range_check_builtin)) - (uses_range_check_builtin)) ==
          (0),
      "uses_range_check_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_ecdsa_builtin) * (uses_ecdsa_builtin)) - (uses_ecdsa_builtin)) == (0),
      "uses_ecdsa_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_bitwise_builtin) * (uses_bitwise_builtin)) - (uses_bitwise_builtin)) == (0),
      "uses_bitwise_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_ec_op_builtin) * (uses_ec_op_builtin)) - (uses_ec_op_builtin)) == (0),
      "uses_ec_op_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_keccak_builtin) * (uses_keccak_builtin)) - (uses_keccak_builtin)) == (0),
      "uses_keccak_builtin should be a boolean");

  ASSERT_RELEASE(
      (((uses_poseidon_builtin) * (uses_poseidon_builtin)) - (uses_poseidon_builtin)) == (0),
      "uses_poseidon_builtin should be a boolean");

  ASSERT_RELEASE(
      (((65536) - (num_columns_first)) - (1)) >= (0), "num_columns_first is out of range.");

  ASSERT_RELEASE(
      (((65536) - (num_columns_second)) - (1)) >= (0), "num_columns_second is out of range.");

  ASSERT_RELEASE((mem_pool__addr_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (mem_pool__addr_column)) - (1)) >= (0), "Column index out of range.");

  ASSERT_RELEASE((mem_pool__addr_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (mem_pool__addr_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((mem_pool__value_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (mem_pool__value_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((mem_pool__value_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (mem_pool__value_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((range_check16_pool_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (range_check16_pool_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((range_check16_pool_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (range_check16_pool_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (cpu__decode__opcode_range_check__column_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__decode__opcode_range_check__column_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (cpu__decode__opcode_range_check__column_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__decode__opcode_range_check__column_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((cpu__registers__ap_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__registers__ap_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((cpu__registers__ap_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__registers__ap_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((cpu__registers__fp_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__registers__fp_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((cpu__registers__fp_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__registers__fp_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((cpu__operands__ops_mul_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__operands__ops_mul_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((cpu__operands__ops_mul_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__operands__ops_mul_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((cpu__operands__res_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__operands__res_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((cpu__operands__res_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__operands__res_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (cpu__update_registers__update_pc__tmp0_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__update_registers__update_pc__tmp0_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (cpu__update_registers__update_pc__tmp0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__update_registers__update_pc__tmp0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (cpu__update_registers__update_pc__tmp1_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (cpu__update_registers__update_pc__tmp1_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (cpu__update_registers__update_pc__tmp1_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (cpu__update_registers__update_pc__tmp1_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((memory__sorted__addr_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (memory__sorted__addr_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((memory__sorted__addr_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (memory__sorted__addr_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((memory__sorted__value_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (memory__sorted__value_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((memory__sorted__value_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (memory__sorted__value_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((range_check16__sorted_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (range_check16__sorted_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((range_check16__sorted_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (range_check16__sorted_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((diluted_pool_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (diluted_pool_column)) - (1)) >= (0), "Column index out of range.");

  ASSERT_RELEASE((diluted_pool_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (diluted_pool_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((diluted_check__permuted_values_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (diluted_check__permuted_values_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((diluted_check__permuted_values_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (diluted_check__permuted_values_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__partial_sum__x_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (pedersen__hash0__ec_subset_sum__partial_sum__x_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__partial_sum__x_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__partial_sum__x_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__partial_sum__y_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (pedersen__hash0__ec_subset_sum__partial_sum__y_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__partial_sum__y_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__partial_sum__y_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (pedersen__hash0__ec_subset_sum__slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__selector_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (pedersen__hash0__ec_subset_sum__selector_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__selector_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__selector_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) -
        (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_offset)) -
       (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) -
        (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_offset)) -
       (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__key_points__x_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__key_points__x_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__key_points__x_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__key_points__x_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__key_points__y_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__key_points__y_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__key_points__y_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__key_points__y_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__doubling_slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__doubling_slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__doubling_slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__doubling_slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__partial_sum__x_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_generator__partial_sum__x_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__partial_sum__x_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_generator__partial_sum__x_offset)) -
       (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__partial_sum__y_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_generator__partial_sum__y_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__partial_sum__y_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_generator__partial_sum__y_offset)) -
       (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__slope_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_generator__slope_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__slope_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_generator__slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__selector_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_generator__selector_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__selector_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_generator__selector_offset)) - (1)) >=
          (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__x_diff_inv_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_generator__x_diff_inv_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_generator__x_diff_inv_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_generator__x_diff_inv_offset)) - (1)) >=
          (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__partial_sum__x_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_key__partial_sum__x_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__partial_sum__x_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_key__partial_sum__x_offset)) - (1)) >=
          (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__partial_sum__y_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_key__partial_sum__y_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__partial_sum__y_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_key__partial_sum__y_offset)) - (1)) >=
          (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_key__slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_key__slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__selector_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_key__selector_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__selector_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_key__selector_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__x_diff_inv_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__exponentiate_key__x_diff_inv_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__exponentiate_key__x_diff_inv_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__exponentiate_key__x_diff_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ecdsa__signature0__add_results_slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__add_results_slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ecdsa__signature0__add_results_slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__add_results_slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__add_results_inv_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__add_results_inv_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__add_results_inv_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__add_results_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__extract_r_slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__extract_r_slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__extract_r_slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__extract_r_slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__extract_r_inv_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__extract_r_inv_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__extract_r_inv_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__extract_r_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__z_inv_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__z_inv_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__z_inv_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__z_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__r_w_inv_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__r_w_inv_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__r_w_inv_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__r_w_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ecdsa__signature0__q_x_squared_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ecdsa__signature0__q_x_squared_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ecdsa__signature0__q_x_squared_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ecdsa__signature0__q_x_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__doubled_points__x_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__doubled_points__x_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__doubled_points__x_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__doubled_points__x_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__doubled_points__y_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__doubled_points__y_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__doubled_points__y_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__doubled_points__y_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__doubling_slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__doubling_slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__doubling_slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__doubling_slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__partial_sum__x_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__partial_sum__x_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__partial_sum__x_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__partial_sum__x_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__partial_sum__y_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__partial_sum__y_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__partial_sum__y_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__partial_sum__y_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__slope_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__slope_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__slope_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__slope_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__selector_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__selector_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__selector_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__selector_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__x_diff_inv_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__x_diff_inv_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((ec_op__ec_subset_sum__x_diff_inv_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__x_diff_inv_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__bit_unpacking__prod_ones196_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (ec_op__ec_subset_sum__bit_unpacking__prod_ones192_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__reshaped_intermediate_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__parse_to_diluted__reshaped_intermediate_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset)) -
       (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__final_reshaped_input_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__parse_to_diluted__final_reshaped_input_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__final_reshaped_input_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__parse_to_diluted__final_reshaped_input_offset)) - (1)) >=
          (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__cumulative_sum_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__parse_to_diluted__cumulative_sum_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (keccak__keccak__parse_to_diluted__cumulative_sum_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__parse_to_diluted__cumulative_sum_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity0_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__rotated_parity0_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__rotated_parity0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity1_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__rotated_parity1_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity1_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__rotated_parity1_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity2_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__rotated_parity2_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity2_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__rotated_parity2_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity3_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__rotated_parity3_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity3_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__rotated_parity3_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity4_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (keccak__keccak__rotated_parity4_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((keccak__keccak__rotated_parity4_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (keccak__keccak__rotated_parity4_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state0_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state0_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state1_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state1_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state1_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state1_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state2_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state2_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state2_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state2_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state0_squared_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state0_squared_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state0_squared_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state0_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state1_squared_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state1_squared_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state1_squared_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state1_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state2_squared_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__full_rounds_state2_squared_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__full_rounds_state2_squared_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__full_rounds_state2_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state0_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__partial_rounds_state0_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__partial_rounds_state0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state1_column) >= (0), "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__partial_rounds_state1_column)) - (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state1_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__partial_rounds_state1_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state0_squared_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__partial_rounds_state0_squared_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state0_squared_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__partial_rounds_state0_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state1_squared_column) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (((num_columns_first) - (poseidon__poseidon__partial_rounds_state1_squared_column)) - (1)) >=
          (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (poseidon__poseidon__partial_rounds_state1_squared_offset) >= (0),
      "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (poseidon__poseidon__partial_rounds_state1_squared_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      ((memory__multi_column_perm__perm__cum_prod0_column) - (num_columns_first)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      ((((num_columns_first) + (num_columns_second)) -
        (memory__multi_column_perm__perm__cum_prod0_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (memory__multi_column_perm__perm__cum_prod0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (memory__multi_column_perm__perm__cum_prod0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      ((range_check16__perm__cum_prod0_column) - (num_columns_first)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      ((((num_columns_first) + (num_columns_second)) - (range_check16__perm__cum_prod0_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((range_check16__perm__cum_prod0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (range_check16__perm__cum_prod0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      ((diluted_check__cumulative_value_column) - (num_columns_first)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      ((((num_columns_first) + (num_columns_second)) - (diluted_check__cumulative_value_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE((diluted_check__cumulative_value_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (diluted_check__cumulative_value_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  ASSERT_RELEASE(
      ((diluted_check__permutation__cum_prod0_column) - (num_columns_first)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      ((((num_columns_first) + (num_columns_second)) -
        (diluted_check__permutation__cum_prod0_column)) -
       (1)) >= (0),
      "Column index out of range.");

  ASSERT_RELEASE(
      (diluted_check__permutation__cum_prod0_offset) >= (0), "Offset must be nonnegative.");

  ASSERT_RELEASE(
      (((trace_length_) - (diluted_check__permutation__cum_prod0_offset)) - (1)) >= (0),
      "Offset must be smaller than trace length.");

  if ((uses_pedersen_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(pedersen_builtin_row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, pedersen_builtin_row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(pedersen_builtin_row_ratio, 512)),
        "Coset step ((DynamicParam(pedersen_builtin_row_ratio)) / (512)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(pedersen_builtin_row_ratio, 2)),
        "Coset step ((DynamicParam(pedersen_builtin_row_ratio)) / (2)) must be a power of two");

    ASSERT_RELEASE(
        ((SafeDiv(trace_length_, pedersen_builtin_row_ratio)) - (1)) >= (0),
        "step must not exceed dimension.");

    ASSERT_RELEASE(
        (SafeDiv(trace_length_, pedersen_builtin_row_ratio)) >= (0),
        "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        (pedersen__input0_suboffset) >= (0), "Offset of pedersen/input0 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (pedersen__input0_suboffset)) - (1)) >= (0),
        "Offset of pedersen/input0 is too big.");

    ASSERT_RELEASE(
        (((pedersen_builtin_row_ratio) -
          ((pedersen__input0_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of pedersen/input0 is too big.");

    ASSERT_RELEASE(
        (pedersen__input1_suboffset) >= (0), "Offset of pedersen/input1 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (pedersen__input1_suboffset)) - (1)) >= (0),
        "Offset of pedersen/input1 is too big.");

    ASSERT_RELEASE(
        (((pedersen_builtin_row_ratio) -
          ((pedersen__input1_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of pedersen/input1 is too big.");

    ASSERT_RELEASE(
        (pedersen__output_suboffset) >= (0), "Offset of pedersen/output must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (pedersen__output_suboffset)) - (1)) >= (0),
        "Offset of pedersen/output is too big.");

    ASSERT_RELEASE(
        (((pedersen_builtin_row_ratio) -
          ((pedersen__output_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of pedersen/output is too big.");
  }

  if ((uses_range_check_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(range_check_builtin_row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, range_check_builtin_row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        ((SafeDiv(trace_length_, range_check_builtin_row_ratio)) - (1)) >= (0),
        "step must not exceed dimension.");

    ASSERT_RELEASE(
        (SafeDiv(trace_length_, range_check_builtin_row_ratio)) >= (0),
        "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(range_check_builtin_row_ratio, 8)),
        "Coset step ((DynamicParam(range_check_builtin_row_ratio)) / (8)) must be a power of two");

    ASSERT_RELEASE(
        (range_check_builtin__mem_suboffset) >= (0),
        "Offset of range_check_builtin/mem must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (range_check_builtin__mem_suboffset)) - (1)) >= (0),
        "Offset of range_check_builtin/mem is too big.");

    ASSERT_RELEASE(
        (((range_check_builtin_row_ratio) -
          ((range_check_builtin__mem_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of range_check_builtin/mem is too big.");

    ASSERT_RELEASE(
        (range_check_builtin__inner_range_check_suboffset) >= (0),
        "Offset of range_check_builtin/inner_range_check must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (range_check_builtin__inner_range_check_suboffset)) - (1)) >= (0),
        "Offset of range_check_builtin/inner_range_check is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(range_check_builtin_row_ratio, 8)) -
          ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) -
         (1)) >= (0),
        "Offset of range_check_builtin/inner_range_check is too big.");
  }

  if ((uses_ecdsa_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(ecdsa_builtin_row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, ecdsa_builtin_row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(ecdsa_builtin_row_ratio, 512)),
        "Coset step ((DynamicParam(ecdsa_builtin_row_ratio)) / (512)) must be a power of two");

    ASSERT_RELEASE(
        ((SafeDiv(trace_length_, ecdsa_builtin_row_ratio)) - (1)) >= (0),
        "step must not exceed dimension.");

    ASSERT_RELEASE(
        (SafeDiv(trace_length_, ecdsa_builtin_row_ratio)) >= (0), "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(ecdsa_builtin_row_ratio, 256)),
        "Coset step ((DynamicParam(ecdsa_builtin_row_ratio)) / (256)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(ecdsa_builtin_row_ratio, 2)),
        "Coset step ((DynamicParam(ecdsa_builtin_row_ratio)) / (2)) must be a power of two");

    ASSERT_RELEASE((ecdsa__pubkey_suboffset) >= (0), "Offset of ecdsa/pubkey must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ecdsa__pubkey_suboffset)) - (1)) >= (0),
        "Offset of ecdsa/pubkey is too big.");

    ASSERT_RELEASE(
        (((ecdsa_builtin_row_ratio) - ((ecdsa__pubkey_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of ecdsa/pubkey is too big.");

    ASSERT_RELEASE(
        (ecdsa__message_suboffset) >= (0), "Offset of ecdsa/message must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ecdsa__message_suboffset)) - (1)) >= (0),
        "Offset of ecdsa/message is too big.");

    ASSERT_RELEASE(
        (((ecdsa_builtin_row_ratio) - ((ecdsa__message_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of ecdsa/message is too big.");
  }

  if ((uses_bitwise_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(bitwise__row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, bitwise__row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(bitwise__row_ratio, 64)),
        "Coset step ((DynamicParam(bitwise__row_ratio)) / (64)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(bitwise__row_ratio, 4)),
        "Coset step ((DynamicParam(bitwise__row_ratio)) / (4)) must be a power of two");

    ASSERT_RELEASE(
        ((SafeDiv(trace_length_, bitwise__row_ratio)) - (1)) >= (0), "Index out of range.");

    ASSERT_RELEASE(
        (SafeDiv(trace_length_, bitwise__row_ratio)) >= (0), "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        (bitwise__var_pool_suboffset) >= (0), "Offset of bitwise/var_pool must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__var_pool_suboffset)) - (1)) >= (0),
        "Offset of bitwise/var_pool is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(bitwise__row_ratio, 4)) -
          ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/var_pool is too big.");

    ASSERT_RELEASE(
        (bitwise__x_or_y_suboffset) >= (0), "Offset of bitwise/x_or_y must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__x_or_y_suboffset)) - (1)) >= (0),
        "Offset of bitwise/x_or_y is too big.");

    ASSERT_RELEASE(
        (((bitwise__row_ratio) - ((bitwise__x_or_y_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of bitwise/x_or_y is too big.");

    ASSERT_RELEASE(
        (bitwise__diluted_var_pool_suboffset) >= (0),
        "Offset of bitwise/diluted_var_pool must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__diluted_var_pool_suboffset)) - (1)) >= (0),
        "Offset of bitwise/diluted_var_pool is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(bitwise__row_ratio, 64)) -
          ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/diluted_var_pool is too big.");

    ASSERT_RELEASE(
        (bitwise__trim_unpacking192_suboffset) >= (0),
        "Offset of bitwise/trim_unpacking192 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__trim_unpacking192_suboffset)) - (1)) >= (0),
        "Offset of bitwise/trim_unpacking192 is too big.");

    ASSERT_RELEASE(
        (((bitwise__row_ratio) -
          ((bitwise__trim_unpacking192_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/trim_unpacking192 is too big.");

    ASSERT_RELEASE(
        (bitwise__trim_unpacking193_suboffset) >= (0),
        "Offset of bitwise/trim_unpacking193 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__trim_unpacking193_suboffset)) - (1)) >= (0),
        "Offset of bitwise/trim_unpacking193 is too big.");

    ASSERT_RELEASE(
        (((bitwise__row_ratio) -
          ((bitwise__trim_unpacking193_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/trim_unpacking193 is too big.");

    ASSERT_RELEASE(
        (bitwise__trim_unpacking194_suboffset) >= (0),
        "Offset of bitwise/trim_unpacking194 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__trim_unpacking194_suboffset)) - (1)) >= (0),
        "Offset of bitwise/trim_unpacking194 is too big.");

    ASSERT_RELEASE(
        (((bitwise__row_ratio) -
          ((bitwise__trim_unpacking194_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/trim_unpacking194 is too big.");

    ASSERT_RELEASE(
        (bitwise__trim_unpacking195_suboffset) >= (0),
        "Offset of bitwise/trim_unpacking195 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (bitwise__trim_unpacking195_suboffset)) - (1)) >= (0),
        "Offset of bitwise/trim_unpacking195 is too big.");

    ASSERT_RELEASE(
        (((bitwise__row_ratio) -
          ((bitwise__trim_unpacking195_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of bitwise/trim_unpacking195 is too big.");
  }

  if ((uses_ec_op_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(ec_op_builtin_row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, ec_op_builtin_row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(ec_op_builtin_row_ratio, 256)),
        "Coset step ((DynamicParam(ec_op_builtin_row_ratio)) / (256)) must be a power of two");

    ASSERT_RELEASE(
        ((SafeDiv(trace_length_, ec_op_builtin_row_ratio)) - (1)) >= (0), "Index out of range.");

    ASSERT_RELEASE(
        (SafeDiv(trace_length_, ec_op_builtin_row_ratio)) >= (0), "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE((ec_op__p_x_suboffset) >= (0), "Offset of ec_op/p_x must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__p_x_suboffset)) - (1)) >= (0),
        "Offset of ec_op/p_x is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__p_x_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/p_x is too big.");

    ASSERT_RELEASE((ec_op__p_y_suboffset) >= (0), "Offset of ec_op/p_y must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__p_y_suboffset)) - (1)) >= (0),
        "Offset of ec_op/p_y is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__p_y_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/p_y is too big.");

    ASSERT_RELEASE((ec_op__q_x_suboffset) >= (0), "Offset of ec_op/q_x must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__q_x_suboffset)) - (1)) >= (0),
        "Offset of ec_op/q_x is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__q_x_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/q_x is too big.");

    ASSERT_RELEASE((ec_op__q_y_suboffset) >= (0), "Offset of ec_op/q_y must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__q_y_suboffset)) - (1)) >= (0),
        "Offset of ec_op/q_y is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__q_y_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/q_y is too big.");

    ASSERT_RELEASE((ec_op__m_suboffset) >= (0), "Offset of ec_op/m must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__m_suboffset)) - (1)) >= (0), "Offset of ec_op/m is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__m_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/m is too big.");

    ASSERT_RELEASE((ec_op__r_x_suboffset) >= (0), "Offset of ec_op/r_x must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__r_x_suboffset)) - (1)) >= (0),
        "Offset of ec_op/r_x is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__r_x_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/r_x is too big.");

    ASSERT_RELEASE((ec_op__r_y_suboffset) >= (0), "Offset of ec_op/r_y must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (ec_op__r_y_suboffset)) - (1)) >= (0),
        "Offset of ec_op/r_y is too big.");

    ASSERT_RELEASE(
        (((ec_op_builtin_row_ratio) - ((ec_op__r_y_suboffset) * (memory_units_row_ratio))) - (1)) >=
            (0),
        "Offset of ec_op/r_y is too big.");
  }

  if ((uses_keccak_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(keccak__row_ratio, 4096)),
        "Coset step ((DynamicParam(keccak__row_ratio)) / (4096)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, (16) * (keccak__row_ratio))),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(keccak__row_ratio, 128)),
        "Coset step ((DynamicParam(keccak__row_ratio)) / (128)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(keccak__row_ratio, 32768)),
        "Coset step ((DynamicParam(keccak__row_ratio)) / (32768)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(keccak__row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(keccak__row_ratio, 16)),
        "Coset step ((DynamicParam(keccak__row_ratio)) / (16)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv((16) * (trace_length_), keccak__row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        ((SafeDiv((16) * (trace_length_), keccak__row_ratio)) - (1)) >= (0), "Index out of range.");

    ASSERT_RELEASE(
        (SafeDiv((16) * (trace_length_), keccak__row_ratio)) >= (0),
        "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        (keccak__input_output_suboffset) >= (0),
        "Offset of keccak/input_output must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (keccak__input_output_suboffset)) - (1)) >= (0),
        "Offset of keccak/input_output is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(keccak__row_ratio, 16)) -
          ((keccak__input_output_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of keccak/input_output is too big.");

    ASSERT_RELEASE(
        (keccak__keccak__diluted_column0_suboffset) >= (0),
        "Offset of keccak/keccak/diluted_column0 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (keccak__keccak__diluted_column0_suboffset)) - (1)) >= (0),
        "Offset of keccak/keccak/diluted_column0 is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(keccak__row_ratio, 4096)) -
          ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of keccak/keccak/diluted_column0 is too big.");

    ASSERT_RELEASE(
        (keccak__keccak__diluted_column1_suboffset) >= (0),
        "Offset of keccak/keccak/diluted_column1 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (keccak__keccak__diluted_column1_suboffset)) - (1)) >= (0),
        "Offset of keccak/keccak/diluted_column1 is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(keccak__row_ratio, 4096)) -
          ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of keccak/keccak/diluted_column1 is too big.");

    ASSERT_RELEASE(
        (keccak__keccak__diluted_column2_suboffset) >= (0),
        "Offset of keccak/keccak/diluted_column2 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (keccak__keccak__diluted_column2_suboffset)) - (1)) >= (0),
        "Offset of keccak/keccak/diluted_column2 is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(keccak__row_ratio, 4096)) -
          ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of keccak/keccak/diluted_column2 is too big.");

    ASSERT_RELEASE(
        (keccak__keccak__diluted_column3_suboffset) >= (0),
        "Offset of keccak/keccak/diluted_column3 must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (keccak__keccak__diluted_column3_suboffset)) - (1)) >= (0),
        "Offset of keccak/keccak/diluted_column3 is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(keccak__row_ratio, 4096)) -
          ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) -
         (1)) >= (0),
        "Offset of keccak/keccak/diluted_column3 is too big.");
  }

  if ((uses_poseidon_builtin) != (0)) {
    ASSERT_RELEASE(
        IsPowerOfTwo(poseidon__row_ratio),
        "Row ratio should be a power of 2, smaller than trace length.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(trace_length_, poseidon__row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(poseidon__row_ratio, 32)),
        "Coset step ((DynamicParam(poseidon__row_ratio)) / (32)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(poseidon__row_ratio, 8)),
        "Coset step ((DynamicParam(poseidon__row_ratio)) / (8)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(poseidon__row_ratio, 64)),
        "Coset step ((DynamicParam(poseidon__row_ratio)) / (64)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv(poseidon__row_ratio, 2)),
        "Coset step ((DynamicParam(poseidon__row_ratio)) / (2)) must be a power of two");

    ASSERT_RELEASE(
        IsPowerOfTwo(SafeDiv((2) * (trace_length_), poseidon__row_ratio)),
        "Dimension should be a power of 2.");

    ASSERT_RELEASE(
        ((SafeDiv((2) * (trace_length_), poseidon__row_ratio)) - (1)) >= (0),
        "Index out of range.");

    ASSERT_RELEASE(
        (SafeDiv((2) * (trace_length_), poseidon__row_ratio)) >= (0),
        "Index should be non negative.");

    ASSERT_RELEASE(
        IsPowerOfTwo(trace_length_),
        "Coset step (MemberExpression(trace_length)) must be a power of two");

    ASSERT_RELEASE(
        (poseidon__param_0__input_output_suboffset) >= (0),
        "Offset of poseidon/param_0/input_output must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (poseidon__param_0__input_output_suboffset)) - (1)) >= (0),
        "Offset of poseidon/param_0/input_output is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(poseidon__row_ratio, 2)) -
          ((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of poseidon/param_0/input_output is too big.");

    ASSERT_RELEASE(
        (poseidon__param_1__input_output_suboffset) >= (0),
        "Offset of poseidon/param_1/input_output must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (poseidon__param_1__input_output_suboffset)) - (1)) >= (0),
        "Offset of poseidon/param_1/input_output is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(poseidon__row_ratio, 2)) -
          ((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of poseidon/param_1/input_output is too big.");

    ASSERT_RELEASE(
        (poseidon__param_2__input_output_suboffset) >= (0),
        "Offset of poseidon/param_2/input_output must be nonnegative.");

    ASSERT_RELEASE(
        (((trace_length_) - (poseidon__param_2__input_output_suboffset)) - (1)) >= (0),
        "Offset of poseidon/param_2/input_output is too big.");

    ASSERT_RELEASE(
        (((SafeDiv(poseidon__row_ratio, 2)) -
          ((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio))) -
         (1)) >= (0),
        "Offset of poseidon/param_2/input_output is too big.");
  }

  ctx.AddVirtualColumn(
      "mem_pool/addr", VirtualColumn(
                           /*column=*/mem_pool__addr_column, /*step=*/memory_units_row_ratio,
                           /*row_offset=*/mem_pool__addr_offset));
  ctx.AddVirtualColumn(
      "mem_pool/value", VirtualColumn(
                            /*column=*/mem_pool__value_column, /*step=*/memory_units_row_ratio,
                            /*row_offset=*/mem_pool__value_offset));
  ctx.AddVirtualColumn(
      "range_check16_pool",
      VirtualColumn(
          /*column=*/range_check16_pool_column, /*step=*/range_check_units_row_ratio,
          /*row_offset=*/range_check16_pool_offset));
  ctx.AddVirtualColumn(
      "cpu/decode/mem_inst/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/mem_inst/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/pc",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/instruction",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/opcode_range_check/column",
      VirtualColumn(
          /*column=*/cpu__decode__opcode_range_check__column_column, /*step=*/cpu_component_step,
          /*row_offset=*/cpu__decode__opcode_range_check__column_offset));
  ctx.AddVirtualColumn(
      "cpu/decode/off0",
      VirtualColumn(
          /*column=*/range_check16_pool_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__off0_suboffset) * (range_check_units_row_ratio)) +
              (range_check16_pool_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/off1",
      VirtualColumn(
          /*column=*/range_check16_pool_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__off1_suboffset) * (range_check_units_row_ratio)) +
              (range_check16_pool_offset)));
  ctx.AddVirtualColumn(
      "cpu/decode/off2",
      VirtualColumn(
          /*column=*/range_check16_pool_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__decode__off2_suboffset) * (range_check_units_row_ratio)) +
              (range_check16_pool_offset)));
  ctx.AddVirtualColumn(
      "cpu/registers/ap",
      VirtualColumn(
          /*column=*/cpu__registers__ap_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__registers__ap_offset));
  ctx.AddVirtualColumn(
      "cpu/registers/fp",
      VirtualColumn(
          /*column=*/cpu__registers__fp_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__registers__fp_offset));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_dst/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_dst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_dst/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_dst_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_op0/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_op0_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_op0/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_op0_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_op1/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_op1_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/mem_op1/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/((cpu__operands__mem_op1_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "cpu/operands/ops_mul",
      VirtualColumn(
          /*column=*/cpu__operands__ops_mul_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__operands__ops_mul_offset));
  ctx.AddVirtualColumn(
      "cpu/operands/res",
      VirtualColumn(
          /*column=*/cpu__operands__res_column, /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__operands__res_offset));
  ctx.AddVirtualColumn(
      "cpu/update_registers/update_pc/tmp0",
      VirtualColumn(
          /*column=*/cpu__update_registers__update_pc__tmp0_column,
          /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__update_registers__update_pc__tmp0_offset));
  ctx.AddVirtualColumn(
      "cpu/update_registers/update_pc/tmp1",
      VirtualColumn(
          /*column=*/cpu__update_registers__update_pc__tmp1_column,
          /*step=*/(16) * (cpu_component_step),
          /*row_offset=*/cpu__update_registers__update_pc__tmp1_offset));
  ctx.AddVirtualColumn(
      "memory/sorted/addr",
      VirtualColumn(
          /*column=*/memory__sorted__addr_column, /*step=*/memory_units_row_ratio,
          /*row_offset=*/memory__sorted__addr_offset));
  ctx.AddVirtualColumn(
      "memory/sorted/value",
      VirtualColumn(
          /*column=*/memory__sorted__value_column, /*step=*/memory_units_row_ratio,
          /*row_offset=*/memory__sorted__value_offset));
  ctx.AddVirtualColumn(
      "memory/multi_column_perm/perm/cum_prod0",
      VirtualColumn(
          /*column=*/memory__multi_column_perm__perm__cum_prod0_column - num_columns_first,
          /*step=*/memory_units_row_ratio,
          /*row_offset=*/memory__multi_column_perm__perm__cum_prod0_offset));
  ctx.AddVirtualColumn(
      "orig/public_memory/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/(8) * (memory_units_row_ratio),
          /*row_offset=*/((orig__public_memory_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "orig/public_memory/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/(8) * (memory_units_row_ratio),
          /*row_offset=*/((orig__public_memory_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "range_check16/sorted",
      VirtualColumn(
          /*column=*/range_check16__sorted_column, /*step=*/range_check_units_row_ratio,
          /*row_offset=*/range_check16__sorted_offset));
  ctx.AddVirtualColumn(
      "range_check16/perm/cum_prod0",
      VirtualColumn(
          /*column=*/range_check16__perm__cum_prod0_column - num_columns_first,
          /*step=*/range_check_units_row_ratio,
          /*row_offset=*/range_check16__perm__cum_prod0_offset));
  ctx.AddVirtualColumn(
      "diluted_pool", VirtualColumn(
                          /*column=*/diluted_pool_column, /*step=*/diluted_units_row_ratio,
                          /*row_offset=*/diluted_pool_offset));
  ctx.AddVirtualColumn(
      "diluted_check/permuted_values",
      VirtualColumn(
          /*column=*/diluted_check__permuted_values_column, /*step=*/diluted_units_row_ratio,
          /*row_offset=*/diluted_check__permuted_values_offset));
  ctx.AddVirtualColumn(
      "diluted_check/cumulative_value",
      VirtualColumn(
          /*column=*/diluted_check__cumulative_value_column - num_columns_first,
          /*step=*/diluted_units_row_ratio, /*row_offset=*/diluted_check__cumulative_value_offset));
  ctx.AddVirtualColumn(
      "diluted_check/permutation/cum_prod0",
      VirtualColumn(
          /*column=*/diluted_check__permutation__cum_prod0_column - num_columns_first,
          /*step=*/diluted_units_row_ratio,
          /*row_offset=*/diluted_check__permutation__cum_prod0_offset));
  ctx.AddVirtualColumn(
      "pedersen/input0/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__input0_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "pedersen/input0/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__input0_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "pedersen/input1/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__input1_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "pedersen/input1/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__input1_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "pedersen/output/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "pedersen/output/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/pedersen_builtin_row_ratio,
          /*row_offset=*/((pedersen__output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/partial_sum/x",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__partial_sum__x_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__partial_sum__x_offset));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/partial_sum/y",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__partial_sum__y_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__partial_sum__y_offset));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/slope",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__slope_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__slope_offset));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/selector",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__selector_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__selector_offset));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/bit_unpacking/prod_ones196",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 2),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_offset));
  ctx.AddVirtualColumn(
      "pedersen/hash0/ec_subset_sum/bit_unpacking/prod_ones192",
      VirtualColumn(
          /*column=*/pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 2),
          /*row_offset=*/pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_offset));
  ctx.AddVirtualColumn(
      "range_check_builtin/mem/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/range_check_builtin_row_ratio,
          /*row_offset=*/((range_check_builtin__mem_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "range_check_builtin/mem/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/range_check_builtin_row_ratio,
          /*row_offset=*/((range_check_builtin__mem_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "range_check_builtin/inner_range_check",
      VirtualColumn(
          /*column=*/range_check16_pool_column, /*step=*/SafeDiv(range_check_builtin_row_ratio, 8),
          /*row_offset=*/
              ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio)) +
              (range_check16_pool_offset)));
  ctx.AddVirtualColumn(
      "ecdsa/pubkey/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/((ecdsa__pubkey_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ecdsa/pubkey/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/((ecdsa__pubkey_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ecdsa/message/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/((ecdsa__message_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ecdsa/message/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/((ecdsa__message_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/key_points/x", VirtualColumn(
                                           /*column=*/ecdsa__signature0__key_points__x_column,
                                           /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
                                           /*row_offset=*/ecdsa__signature0__key_points__x_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/key_points/y", VirtualColumn(
                                           /*column=*/ecdsa__signature0__key_points__y_column,
                                           /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
                                           /*row_offset=*/ecdsa__signature0__key_points__y_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/doubling_slope",
      VirtualColumn(
          /*column=*/ecdsa__signature0__doubling_slope_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__doubling_slope_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_generator/partial_sum/x",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_generator__partial_sum__x_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256),
          /*row_offset=*/ecdsa__signature0__exponentiate_generator__partial_sum__x_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_generator/partial_sum/y",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_generator__partial_sum__y_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256),
          /*row_offset=*/ecdsa__signature0__exponentiate_generator__partial_sum__y_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_generator/slope",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_generator__slope_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256),
          /*row_offset=*/ecdsa__signature0__exponentiate_generator__slope_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_generator/selector",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_generator__selector_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256),
          /*row_offset=*/ecdsa__signature0__exponentiate_generator__selector_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_generator/x_diff_inv",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_generator__x_diff_inv_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256),
          /*row_offset=*/ecdsa__signature0__exponentiate_generator__x_diff_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_key/partial_sum/x",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_key__partial_sum__x_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__exponentiate_key__partial_sum__x_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_key/partial_sum/y",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_key__partial_sum__y_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__exponentiate_key__partial_sum__y_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_key/slope",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_key__slope_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__exponentiate_key__slope_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_key/selector",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_key__selector_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__exponentiate_key__selector_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/exponentiate_key/x_diff_inv",
      VirtualColumn(
          /*column=*/ecdsa__signature0__exponentiate_key__x_diff_inv_column,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 512),
          /*row_offset=*/ecdsa__signature0__exponentiate_key__x_diff_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/add_results_slope",
      VirtualColumn(
          /*column=*/ecdsa__signature0__add_results_slope_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__add_results_slope_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/add_results_inv",
      VirtualColumn(
          /*column=*/ecdsa__signature0__add_results_inv_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__add_results_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/extract_r_slope",
      VirtualColumn(
          /*column=*/ecdsa__signature0__extract_r_slope_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__extract_r_slope_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/extract_r_inv",
      VirtualColumn(
          /*column=*/ecdsa__signature0__extract_r_inv_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__extract_r_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/z_inv",
      VirtualColumn(
          /*column=*/ecdsa__signature0__z_inv_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__z_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/r_w_inv", VirtualColumn(
                                      /*column=*/ecdsa__signature0__r_w_inv_column,
                                      /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 2),
                                      /*row_offset=*/ecdsa__signature0__r_w_inv_offset));
  ctx.AddVirtualColumn(
      "ecdsa/signature0/q_x_squared",
      VirtualColumn(
          /*column=*/ecdsa__signature0__q_x_squared_column, /*step=*/ecdsa_builtin_row_ratio,
          /*row_offset=*/ecdsa__signature0__q_x_squared_offset));
  ctx.AddVirtualColumn(
      "bitwise/var_pool/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/SafeDiv(bitwise__row_ratio, 4),
          /*row_offset=*/((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/var_pool/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/SafeDiv(bitwise__row_ratio, 4),
          /*row_offset=*/((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/y/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/bitwise__row_ratio,
                            /*row_offset=*/
                                ((SafeDiv(bitwise__row_ratio, 4)) +
                                 ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/y/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/bitwise__row_ratio,
                             /*row_offset=*/
                                 ((SafeDiv(bitwise__row_ratio, 4)) +
                                  ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_and_y/addr", VirtualColumn(
                                  /*column=*/mem_pool__addr_column, /*step=*/bitwise__row_ratio,
                                  /*row_offset=*/
                                      ((SafeDiv(bitwise__row_ratio, 2)) +
                                       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
                                      (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_and_y/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/
              ((SafeDiv(bitwise__row_ratio, 2)) +
               ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_xor_y/addr", VirtualColumn(
                                  /*column=*/mem_pool__addr_column, /*step=*/bitwise__row_ratio,
                                  /*row_offset=*/
                                      ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
                                       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
                                      (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_xor_y/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/
              ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
               ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_or_y/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__x_or_y_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_or_y/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__x_or_y_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "bitwise/diluted_var_pool",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(bitwise__row_ratio, 64),
          /*row_offset=*/((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(bitwise__row_ratio, 64),
          /*row_offset=*/((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/y", VirtualColumn(
                       /*column=*/diluted_pool_column, /*step=*/SafeDiv(bitwise__row_ratio, 64),
                       /*row_offset=*/
                           ((SafeDiv(bitwise__row_ratio, 4)) +
                            ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
                           (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_and_y",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(bitwise__row_ratio, 64),
          /*row_offset=*/
              ((SafeDiv(bitwise__row_ratio, 2)) +
               ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/x_xor_y",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(bitwise__row_ratio, 64),
          /*row_offset=*/
              ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
               ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/trim_unpacking192",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__trim_unpacking192_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/trim_unpacking193",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__trim_unpacking193_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/trim_unpacking194",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__trim_unpacking194_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "bitwise/trim_unpacking195",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/bitwise__row_ratio,
          /*row_offset=*/((bitwise__trim_unpacking195_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "ec_op/p_x/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__p_x_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/p_x/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__p_x_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/p_y/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__p_y_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/p_y/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__p_y_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/q_x/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__q_x_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/q_x/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__q_x_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/q_y/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__q_y_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/q_y/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__q_y_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/m/addr", VirtualColumn(
                          /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                          /*row_offset=*/((ec_op__m_suboffset) * (memory_units_row_ratio)) +
                              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/m/value", VirtualColumn(
                           /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                           /*row_offset=*/((ec_op__m_suboffset) * (memory_units_row_ratio)) +
                               (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/r_x/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__r_x_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/r_x/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__r_x_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/r_y/addr", VirtualColumn(
                            /*column=*/mem_pool__addr_column, /*step=*/ec_op_builtin_row_ratio,
                            /*row_offset=*/((ec_op__r_y_suboffset) * (memory_units_row_ratio)) +
                                (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "ec_op/r_y/value", VirtualColumn(
                             /*column=*/mem_pool__value_column, /*step=*/ec_op_builtin_row_ratio,
                             /*row_offset=*/((ec_op__r_y_suboffset) * (memory_units_row_ratio)) +
                                 (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "ec_op/doubled_points/x", VirtualColumn(
                                    /*column=*/ec_op__doubled_points__x_column,
                                    /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
                                    /*row_offset=*/ec_op__doubled_points__x_offset));
  ctx.AddVirtualColumn(
      "ec_op/doubled_points/y", VirtualColumn(
                                    /*column=*/ec_op__doubled_points__y_column,
                                    /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
                                    /*row_offset=*/ec_op__doubled_points__y_offset));
  ctx.AddVirtualColumn(
      "ec_op/doubling_slope",
      VirtualColumn(
          /*column=*/ec_op__doubling_slope_column, /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
          /*row_offset=*/ec_op__doubling_slope_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/partial_sum/x",
      VirtualColumn(
          /*column=*/ec_op__ec_subset_sum__partial_sum__x_column,
          /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
          /*row_offset=*/ec_op__ec_subset_sum__partial_sum__x_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/partial_sum/y",
      VirtualColumn(
          /*column=*/ec_op__ec_subset_sum__partial_sum__y_column,
          /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
          /*row_offset=*/ec_op__ec_subset_sum__partial_sum__y_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/slope", VirtualColumn(
                                       /*column=*/ec_op__ec_subset_sum__slope_column,
                                       /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
                                       /*row_offset=*/ec_op__ec_subset_sum__slope_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/selector", VirtualColumn(
                                          /*column=*/ec_op__ec_subset_sum__selector_column,
                                          /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
                                          /*row_offset=*/ec_op__ec_subset_sum__selector_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/x_diff_inv",
      VirtualColumn(
          /*column=*/ec_op__ec_subset_sum__x_diff_inv_column,
          /*step=*/SafeDiv(ec_op_builtin_row_ratio, 256),
          /*row_offset=*/ec_op__ec_subset_sum__x_diff_inv_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/bit_unpacking/prod_ones196",
      VirtualColumn(
          /*column=*/ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column,
          /*step=*/ec_op_builtin_row_ratio,
          /*row_offset=*/ec_op__ec_subset_sum__bit_unpacking__prod_ones196_offset));
  ctx.AddVirtualColumn(
      "ec_op/ec_subset_sum/bit_unpacking/prod_ones192",
      VirtualColumn(
          /*column=*/ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column,
          /*step=*/ec_op_builtin_row_ratio,
          /*row_offset=*/ec_op__ec_subset_sum__bit_unpacking__prod_ones192_offset));
  ctx.AddVirtualColumn(
      "keccak/input_output/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/SafeDiv(keccak__row_ratio, 16),
          /*row_offset=*/((keccak__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "keccak/input_output/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/SafeDiv(keccak__row_ratio, 16),
          /*row_offset=*/((keccak__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/diluted_column0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/state",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/state_begin",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 128),
          /*row_offset=*/((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/state_end",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 128),
          /*row_offset=*/
              ((SafeDiv((3) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parse_to_diluted/reshaped_intermediate",
      VirtualColumn(
          /*column=*/keccak__keccak__parse_to_diluted__reshaped_intermediate_column,
          /*step=*/SafeDiv(keccak__row_ratio, 32768),
          /*row_offset=*/keccak__keccak__parse_to_diluted__reshaped_intermediate_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/parse_to_diluted/final_reshaped_input",
      VirtualColumn(
          /*column=*/keccak__keccak__parse_to_diluted__final_reshaped_input_column,
          /*step=*/SafeDiv(keccak__row_ratio, 32768),
          /*row_offset=*/keccak__keccak__parse_to_diluted__final_reshaped_input_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/parse_to_diluted/cumulative_sum",
      VirtualColumn(
          /*column=*/keccak__keccak__parse_to_diluted__cumulative_sum_column,
          /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/keccak__keccak__parse_to_diluted__cumulative_sum_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/diluted_column1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/chi_iota_aux0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/diluted_column2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/chi_iota_aux2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity0_0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((25) * (keccak__row_ratio), 128)) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity0_1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((25) * (keccak__row_ratio), 128)) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity0_2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((25) * (keccak__row_ratio), 128)) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity0_3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((SafeDiv((3) * (keccak__row_ratio), 512)) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity0_4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((SafeDiv((3) * (keccak__row_ratio), 512)) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity1_0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((SafeDiv((3) * (keccak__row_ratio), 512)) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity1_1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity1_2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity1_3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity1_4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity2_0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity2_1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity2_2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity2_3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/parity2_4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/diluted_column3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/after_theta_rho_pi",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio)) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/rotated_parity0", VirtualColumn(
                                           /*column=*/keccak__keccak__rotated_parity0_column,
                                           /*step=*/SafeDiv(keccak__row_ratio, 4096),
                                           /*row_offset=*/keccak__keccak__rotated_parity0_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/rotated_parity1", VirtualColumn(
                                           /*column=*/keccak__keccak__rotated_parity1_column,
                                           /*step=*/SafeDiv(keccak__row_ratio, 4096),
                                           /*row_offset=*/keccak__keccak__rotated_parity1_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/rotated_parity2", VirtualColumn(
                                           /*column=*/keccak__keccak__rotated_parity2_column,
                                           /*step=*/SafeDiv(keccak__row_ratio, 4096),
                                           /*row_offset=*/keccak__keccak__rotated_parity2_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/rotated_parity3", VirtualColumn(
                                           /*column=*/keccak__keccak__rotated_parity3_column,
                                           /*step=*/SafeDiv(keccak__row_ratio, 4096),
                                           /*row_offset=*/keccak__keccak__rotated_parity3_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/rotated_parity4", VirtualColumn(
                                           /*column=*/keccak__keccak__rotated_parity4_column,
                                           /*step=*/SafeDiv(keccak__row_ratio, 4096),
                                           /*row_offset=*/keccak__keccak__rotated_parity4_offset));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i0_j0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i0_j1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i0_j2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i0_j3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((25) * (keccak__row_ratio), 128)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i0_j4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i1_j0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i1_j1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i1_j2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((SafeDiv((3) * (keccak__row_ratio), 512)) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i1_j3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i1_j4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i2_j0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i2_j1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i2_j2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                       (SafeDiv((3) * (keccak__row_ratio), 512))) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i2_j3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                       (SafeDiv((3) * (keccak__row_ratio), 512))) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i2_j4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                       (SafeDiv((3) * (keccak__row_ratio), 512))) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i3_j0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i3_j1",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i3_j2",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i3_j3",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i3_j4",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j0",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
                       (SafeDiv((3) * (keccak__row_ratio), 512))) +
                      (SafeDiv((3) * (keccak__row_ratio), 512))) +
                     (SafeDiv((3) * (keccak__row_ratio), 512))) +
                    (SafeDiv((3) * (keccak__row_ratio), 512))) +
                   (SafeDiv((3) * (keccak__row_ratio), 512))) +
                  (SafeDiv((3) * (keccak__row_ratio), 512))) +
                 (SafeDiv((3) * (keccak__row_ratio), 512))) +
                (SafeDiv((25) * (keccak__row_ratio), 128))) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j1_start0_stop8",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((3) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j1_start8_stop16",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((7) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j1_start16_stop24",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((11) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j2_start0_stop8",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((15) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j2_start8_stop16",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((19) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j2_start16_stop24",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((23) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j3_start0_stop8",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((27) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j3_start8_stop16",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((31) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j3_start16_stop24",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((35) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j4_start0_stop8",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((39) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j4_start8_stop16",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((43) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "keccak/keccak/theta_aux_i4_j4_start16_stop24",
      VirtualColumn(
          /*column=*/diluted_pool_column, /*step=*/SafeDiv(keccak__row_ratio, 4096),
          /*row_offset=*/
              ((SafeDiv((47) * (keccak__row_ratio), 512)) +
               ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
              (diluted_pool_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_0/input_output/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_0/input_output/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_1/input_output/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_1/input_output/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_2/input_output/addr",
      VirtualColumn(
          /*column=*/mem_pool__addr_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__addr_offset)));
  ctx.AddVirtualColumn(
      "poseidon/param_2/input_output/value",
      VirtualColumn(
          /*column=*/mem_pool__value_column, /*step=*/SafeDiv(poseidon__row_ratio, 2),
          /*row_offset=*/((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio)) +
              (mem_pool__value_offset)));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state0",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state0_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state0_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state1",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state1_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state1_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state2",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state2_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state2_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state0_squared",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state0_squared_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state0_squared_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state1_squared",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state1_squared_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state1_squared_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/full_rounds_state2_squared",
      VirtualColumn(
          /*column=*/poseidon__poseidon__full_rounds_state2_squared_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 8),
          /*row_offset=*/poseidon__poseidon__full_rounds_state2_squared_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/partial_rounds_state0",
      VirtualColumn(
          /*column=*/poseidon__poseidon__partial_rounds_state0_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 64),
          /*row_offset=*/poseidon__poseidon__partial_rounds_state0_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/partial_rounds_state1",
      VirtualColumn(
          /*column=*/poseidon__poseidon__partial_rounds_state1_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 32),
          /*row_offset=*/poseidon__poseidon__partial_rounds_state1_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/partial_rounds_state0_squared",
      VirtualColumn(
          /*column=*/poseidon__poseidon__partial_rounds_state0_squared_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 64),
          /*row_offset=*/poseidon__poseidon__partial_rounds_state0_squared_offset));
  ctx.AddVirtualColumn(
      "poseidon/poseidon/partial_rounds_state1_squared",
      VirtualColumn(
          /*column=*/poseidon__poseidon__partial_rounds_state1_squared_column,
          /*step=*/SafeDiv(poseidon__row_ratio, 32),
          /*row_offset=*/poseidon__poseidon__partial_rounds_state1_squared_offset));

  ctx.AddPeriodicColumn(
      "pedersen/points/x",
      VirtualColumn(
          /*column=*/kPedersenPointsXPeriodicColumn,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "pedersen/points/y",
      VirtualColumn(
          /*column=*/kPedersenPointsYPeriodicColumn,
          /*step=*/SafeDiv(pedersen_builtin_row_ratio, 512), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "ecdsa/generator_points/x",
      VirtualColumn(
          /*column=*/kEcdsaGeneratorPointsXPeriodicColumn,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "ecdsa/generator_points/y",
      VirtualColumn(
          /*column=*/kEcdsaGeneratorPointsYPeriodicColumn,
          /*step=*/SafeDiv(ecdsa_builtin_row_ratio, 256), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key0",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey0PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key1",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey1PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key3",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey3PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key7",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey7PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key15",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey15PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key31",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey31PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "keccak/keccak/keccak_round_key63",
      VirtualColumn(
          /*column=*/kKeccakKeccakKeccakRoundKey63PeriodicColumn,
          /*step=*/SafeDiv(keccak__row_ratio, 4096), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "poseidon/poseidon/full_round_key0",
      VirtualColumn(
          /*column=*/kPoseidonPoseidonFullRoundKey0PeriodicColumn,
          /*step=*/SafeDiv(poseidon__row_ratio, 8), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "poseidon/poseidon/full_round_key1",
      VirtualColumn(
          /*column=*/kPoseidonPoseidonFullRoundKey1PeriodicColumn,
          /*step=*/SafeDiv(poseidon__row_ratio, 8), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "poseidon/poseidon/full_round_key2",
      VirtualColumn(
          /*column=*/kPoseidonPoseidonFullRoundKey2PeriodicColumn,
          /*step=*/SafeDiv(poseidon__row_ratio, 8), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "poseidon/poseidon/partial_round_key0",
      VirtualColumn(
          /*column=*/kPoseidonPoseidonPartialRoundKey0PeriodicColumn,
          /*step=*/SafeDiv(poseidon__row_ratio, 64), /*row_offset=*/0));
  ctx.AddPeriodicColumn(
      "poseidon/poseidon/partial_round_key1",
      VirtualColumn(
          /*column=*/kPoseidonPoseidonPartialRoundKey1PeriodicColumn,
          /*step=*/SafeDiv(poseidon__row_ratio, 32), /*row_offset=*/0));

  ctx.AddObject<std::vector<size_t>>(
      "pedersen/hash0/ec_subset_sum/bit_unpacking/ones_indices", {251, 196, 192});
  ctx.AddObject<BigInt<4>>(
      "pedersen/hash0/ec_subset_sum/bit_unpacking/limit",
      0x800000000000011000000000000000000000000000000000000000000000001_Z);
  ctx.AddObject<std::vector<size_t>>(
      "ec_op/ec_subset_sum/bit_unpacking/ones_indices", {251, 196, 192});
  ctx.AddObject<BigInt<4>>(
      "ec_op/ec_subset_sum/bit_unpacking/limit",
      0x800000000000011000000000000000000000000000000000000000000000001_Z);

  return ctx;
}

template <typename FieldElementT>
std::vector<std::pair<int64_t, uint64_t>> CpuAirDefinition<FieldElementT, 11>::GetMask() const {
  std::vector<std::pair<int64_t, uint64_t>> mask;

  mask.reserve(755);
  mask.emplace_back(
      cpu__decode__opcode_range_check__column_offset,
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (cpu_component_step) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((cpu__decode__off2_suboffset) * (range_check_units_row_ratio)) + (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((cpu__decode__off1_suboffset) * (range_check_units_row_ratio)) + (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((cpu__decode__off0_suboffset) * (range_check_units_row_ratio)) + (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((2) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((2) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((4) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((4) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((3) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((3) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((5) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((5) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((6) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((6) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((9) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((9) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((7) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((7) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((8) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((8) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((12) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((12) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((13) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((13) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((cpu__operands__mem_dst_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(cpu__registers__fp_offset, cpu__registers__fp_column);
  mask.emplace_back(cpu__registers__ap_offset, cpu__registers__ap_column);
  mask.emplace_back(
      ((cpu__operands__mem_op0_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((cpu_component_step) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((cpu__operands__mem_op1_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((cpu__operands__mem_op0_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(cpu__operands__ops_mul_offset, cpu__operands__ops_mul_column);
  mask.emplace_back(
      ((cpu__operands__mem_op1_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(cpu__operands__res_offset, cpu__operands__res_column);
  mask.emplace_back(
      cpu__update_registers__update_pc__tmp0_offset, cpu__update_registers__update_pc__tmp0_column);
  mask.emplace_back(
      ((cpu__operands__mem_dst_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      cpu__update_registers__update_pc__tmp1_offset, cpu__update_registers__update_pc__tmp1_column);
  mask.emplace_back(
      (((16) * (cpu_component_step)) +
       ((cpu__decode__mem_inst_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((16) * (cpu_component_step)) + (cpu__registers__ap_offset), cpu__registers__ap_column);
  mask.emplace_back(
      ((10) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((10) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((11) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((11) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      ((16) * (cpu_component_step)) + (cpu__registers__fp_offset), cpu__registers__fp_column);
  mask.emplace_back(
      ((14) * (cpu_component_step)) + (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(
      (((14) * (cpu_component_step)) + (cpu_component_step)) +
          (cpu__decode__opcode_range_check__column_offset),
      cpu__decode__opcode_range_check__column_column);
  mask.emplace_back(memory__sorted__addr_offset, memory__sorted__addr_column);
  mask.emplace_back(memory__sorted__value_offset, memory__sorted__value_column);
  mask.emplace_back(mem_pool__addr_offset, mem_pool__addr_column);
  mask.emplace_back(mem_pool__value_offset, mem_pool__value_column);
  mask.emplace_back(
      (memory_units_row_ratio) + (memory__sorted__addr_offset), memory__sorted__addr_column);
  mask.emplace_back(
      (memory_units_row_ratio) + (memory__sorted__value_offset), memory__sorted__value_column);
  mask.emplace_back((memory_units_row_ratio) + (mem_pool__addr_offset), mem_pool__addr_column);
  mask.emplace_back((memory_units_row_ratio) + (mem_pool__value_offset), mem_pool__value_column);
  mask.emplace_back(
      ((orig__public_memory_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((orig__public_memory_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(range_check16__sorted_offset, range_check16__sorted_column);
  mask.emplace_back(range_check16_pool_offset, range_check16_pool_column);
  mask.emplace_back(
      (range_check_units_row_ratio) + (range_check16__sorted_offset), range_check16__sorted_column);
  mask.emplace_back(
      (range_check_units_row_ratio) + (range_check16_pool_offset), range_check16_pool_column);
  mask.emplace_back(diluted_check__permuted_values_offset, diluted_check__permuted_values_column);
  mask.emplace_back(diluted_pool_offset, diluted_pool_column);
  mask.emplace_back(
      (diluted_units_row_ratio) + (diluted_check__permuted_values_offset),
      diluted_check__permuted_values_column);
  mask.emplace_back((diluted_units_row_ratio) + (diluted_pool_offset), diluted_pool_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_offset,
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones192_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__selector_offset,
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 512)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((3) * (pedersen_builtin_row_ratio), 8)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_offset,
      pedersen__hash0__ec_subset_sum__bit_unpacking__prod_ones196_column);
  mask.emplace_back(
      (SafeDiv((193) * (pedersen_builtin_row_ratio), 512)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((49) * (pedersen_builtin_row_ratio), 128)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((251) * (pedersen_builtin_row_ratio), 512)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((63) * (pedersen_builtin_row_ratio), 128)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((197) * (pedersen_builtin_row_ratio), 512)) +
          (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__partial_sum__x_offset,
      pedersen__hash0__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__partial_sum__y_offset,
      pedersen__hash0__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 512)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__x_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 512)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__y_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      pedersen__hash0__ec_subset_sum__slope_offset, pedersen__hash0__ec_subset_sum__slope_column);
  mask.emplace_back(
      (SafeDiv((255) * (pedersen_builtin_row_ratio), 512)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__x_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv((255) * (pedersen_builtin_row_ratio), 512)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__y_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 2)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__x_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 2)) +
          (pedersen__hash0__ec_subset_sum__partial_sum__y_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      ((pedersen__input0_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((pedersen_builtin_row_ratio) + ((pedersen__input0_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((pedersen__output_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((pedersen__input0_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      (SafeDiv(pedersen_builtin_row_ratio, 2)) + (pedersen__hash0__ec_subset_sum__selector_offset),
      pedersen__hash0__ec_subset_sum__selector_column);
  mask.emplace_back(
      ((pedersen__input1_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((pedersen__input1_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((pedersen__output_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(pedersen_builtin_row_ratio, 2)) +
       (SafeDiv((255) * (pedersen_builtin_row_ratio), 512))) +
          (pedersen__hash0__ec_subset_sum__partial_sum__x_offset),
      pedersen__hash0__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      ((range_check_builtin__mem_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio)) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv(range_check_builtin_row_ratio, 8)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv(range_check_builtin_row_ratio, 4)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (range_check_builtin_row_ratio), 8)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv(range_check_builtin_row_ratio, 2)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (range_check_builtin_row_ratio), 8)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (range_check_builtin_row_ratio), 4)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (range_check_builtin_row_ratio), 8)) +
       ((range_check_builtin__inner_range_check_suboffset) * (range_check_units_row_ratio))) +
          (range_check16_pool_offset),
      range_check16_pool_column);
  mask.emplace_back(
      ((range_check_builtin_row_ratio) +
       ((range_check_builtin__mem_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((range_check_builtin__mem_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ecdsa__signature0__key_points__x_offset, ecdsa__signature0__key_points__x_column);
  mask.emplace_back(
      ecdsa__signature0__key_points__y_offset, ecdsa__signature0__key_points__y_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 512)) + (ecdsa__signature0__key_points__x_offset),
      ecdsa__signature0__key_points__x_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 512)) + (ecdsa__signature0__key_points__y_offset),
      ecdsa__signature0__key_points__y_column);
  mask.emplace_back(
      ecdsa__signature0__doubling_slope_offset, ecdsa__signature0__doubling_slope_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_generator__selector_offset,
      ecdsa__signature0__exponentiate_generator__selector_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 256)) +
          (ecdsa__signature0__exponentiate_generator__selector_offset),
      ecdsa__signature0__exponentiate_generator__selector_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_generator__partial_sum__x_offset,
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_generator__partial_sum__y_offset,
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 256)) +
          (ecdsa__signature0__exponentiate_generator__partial_sum__x_offset),
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 256)) +
          (ecdsa__signature0__exponentiate_generator__partial_sum__y_offset),
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_generator__slope_offset,
      ecdsa__signature0__exponentiate_generator__slope_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_generator__x_diff_inv_offset,
      ecdsa__signature0__exponentiate_generator__x_diff_inv_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_key__selector_offset,
      ecdsa__signature0__exponentiate_key__selector_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 512)) +
          (ecdsa__signature0__exponentiate_key__selector_offset),
      ecdsa__signature0__exponentiate_key__selector_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_key__partial_sum__x_offset,
      ecdsa__signature0__exponentiate_key__partial_sum__x_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_key__partial_sum__y_offset,
      ecdsa__signature0__exponentiate_key__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 512)) +
          (ecdsa__signature0__exponentiate_key__partial_sum__x_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 512)) +
          (ecdsa__signature0__exponentiate_key__partial_sum__y_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__y_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_key__slope_offset,
      ecdsa__signature0__exponentiate_key__slope_column);
  mask.emplace_back(
      ecdsa__signature0__exponentiate_key__x_diff_inv_offset,
      ecdsa__signature0__exponentiate_key__x_diff_inv_column);
  mask.emplace_back(
      (SafeDiv((255) * (ecdsa_builtin_row_ratio), 256)) +
          (ecdsa__signature0__exponentiate_generator__partial_sum__x_offset),
      ecdsa__signature0__exponentiate_generator__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv((255) * (ecdsa_builtin_row_ratio), 256)) +
          (ecdsa__signature0__exponentiate_generator__partial_sum__y_offset),
      ecdsa__signature0__exponentiate_generator__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv((255) * (ecdsa_builtin_row_ratio), 512)) +
          (ecdsa__signature0__exponentiate_key__partial_sum__x_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv((255) * (ecdsa_builtin_row_ratio), 512)) +
          (ecdsa__signature0__exponentiate_key__partial_sum__y_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 2)) + (ecdsa__signature0__key_points__x_offset),
      ecdsa__signature0__key_points__x_column);
  mask.emplace_back(
      (SafeDiv(ecdsa_builtin_row_ratio, 2)) + (ecdsa__signature0__key_points__y_offset),
      ecdsa__signature0__key_points__y_column);
  mask.emplace_back(
      ecdsa__signature0__add_results_slope_offset, ecdsa__signature0__add_results_slope_column);
  mask.emplace_back(
      ecdsa__signature0__add_results_inv_offset, ecdsa__signature0__add_results_inv_column);
  mask.emplace_back(
      ((SafeDiv(ecdsa_builtin_row_ratio, 2)) + (SafeDiv((255) * (ecdsa_builtin_row_ratio), 512))) +
          (ecdsa__signature0__exponentiate_key__partial_sum__x_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__x_column);
  mask.emplace_back(
      ((SafeDiv(ecdsa_builtin_row_ratio, 2)) + (SafeDiv((255) * (ecdsa_builtin_row_ratio), 512))) +
          (ecdsa__signature0__exponentiate_key__partial_sum__y_offset),
      ecdsa__signature0__exponentiate_key__partial_sum__y_column);
  mask.emplace_back(
      ecdsa__signature0__extract_r_slope_offset, ecdsa__signature0__extract_r_slope_column);
  mask.emplace_back(
      ecdsa__signature0__extract_r_inv_offset, ecdsa__signature0__extract_r_inv_column);
  mask.emplace_back(ecdsa__signature0__z_inv_offset, ecdsa__signature0__z_inv_column);
  mask.emplace_back(ecdsa__signature0__r_w_inv_offset, ecdsa__signature0__r_w_inv_column);
  mask.emplace_back(ecdsa__signature0__q_x_squared_offset, ecdsa__signature0__q_x_squared_column);
  mask.emplace_back(
      ((ecdsa__pubkey_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ecdsa__message_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ecdsa_builtin_row_ratio) + ((ecdsa__pubkey_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ecdsa__message_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((ecdsa__pubkey_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 4)) +
       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((bitwise__x_or_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((bitwise__row_ratio) + ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((bitwise__var_pool_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio)) + (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 32)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 16)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 32)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 8)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((9) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (bitwise__row_ratio), 32)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 16)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((13) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (bitwise__row_ratio), 32)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (bitwise__row_ratio), 64)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((bitwise__x_or_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 2)) +
       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
       ((bitwise__var_pool_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 2)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(bitwise__row_ratio, 4)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (bitwise__row_ratio), 4)) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((bitwise__trim_unpacking192_suboffset) * (diluted_units_row_ratio)) + (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (bitwise__row_ratio), 16)) + (SafeDiv(bitwise__row_ratio, 2))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (bitwise__row_ratio), 16)) + (SafeDiv((3) * (bitwise__row_ratio), 4))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((bitwise__trim_unpacking193_suboffset) * (diluted_units_row_ratio)) + (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((13) * (bitwise__row_ratio), 64)) + (SafeDiv(bitwise__row_ratio, 2))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((13) * (bitwise__row_ratio), 64)) + (SafeDiv((3) * (bitwise__row_ratio), 4))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((bitwise__trim_unpacking194_suboffset) * (diluted_units_row_ratio)) + (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7) * (bitwise__row_ratio), 32)) + (SafeDiv(bitwise__row_ratio, 2))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7) * (bitwise__row_ratio), 32)) + (SafeDiv((3) * (bitwise__row_ratio), 4))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((bitwise__trim_unpacking195_suboffset) * (diluted_units_row_ratio)) + (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((15) * (bitwise__row_ratio), 64)) + (SafeDiv(bitwise__row_ratio, 2))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((15) * (bitwise__row_ratio), 64)) + (SafeDiv((3) * (bitwise__row_ratio), 4))) +
       ((bitwise__diluted_var_pool_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((ec_op__p_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op_builtin_row_ratio) + ((ec_op__p_x_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__p_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__q_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__q_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__m_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__r_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((ec_op__r_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(ec_op__doubling_slope_offset, ec_op__doubling_slope_column);
  mask.emplace_back(ec_op__doubled_points__x_offset, ec_op__doubled_points__x_column);
  mask.emplace_back(ec_op__doubled_points__y_offset, ec_op__doubled_points__y_column);
  mask.emplace_back(
      (SafeDiv(ec_op_builtin_row_ratio, 256)) + (ec_op__doubled_points__x_offset),
      ec_op__doubled_points__x_column);
  mask.emplace_back(
      (SafeDiv(ec_op_builtin_row_ratio, 256)) + (ec_op__doubled_points__y_offset),
      ec_op__doubled_points__y_column);
  mask.emplace_back(
      ((ec_op__q_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((ec_op__q_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ec_op__ec_subset_sum__bit_unpacking__prod_ones192_offset,
      ec_op__ec_subset_sum__bit_unpacking__prod_ones192_column);
  mask.emplace_back(ec_op__ec_subset_sum__selector_offset, ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv(ec_op_builtin_row_ratio, 256)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((3) * (ec_op_builtin_row_ratio), 4)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      ec_op__ec_subset_sum__bit_unpacking__prod_ones196_offset,
      ec_op__ec_subset_sum__bit_unpacking__prod_ones196_column);
  mask.emplace_back(
      (SafeDiv((193) * (ec_op_builtin_row_ratio), 256)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((49) * (ec_op_builtin_row_ratio), 64)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((251) * (ec_op_builtin_row_ratio), 256)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((63) * (ec_op_builtin_row_ratio), 64)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      (SafeDiv((197) * (ec_op_builtin_row_ratio), 256)) + (ec_op__ec_subset_sum__selector_offset),
      ec_op__ec_subset_sum__selector_column);
  mask.emplace_back(
      ec_op__ec_subset_sum__partial_sum__x_offset, ec_op__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      ec_op__ec_subset_sum__partial_sum__y_offset, ec_op__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      (SafeDiv(ec_op_builtin_row_ratio, 256)) + (ec_op__ec_subset_sum__partial_sum__x_offset),
      ec_op__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      (SafeDiv(ec_op_builtin_row_ratio, 256)) + (ec_op__ec_subset_sum__partial_sum__y_offset),
      ec_op__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(ec_op__ec_subset_sum__slope_offset, ec_op__ec_subset_sum__slope_column);
  mask.emplace_back(
      ec_op__ec_subset_sum__x_diff_inv_offset, ec_op__ec_subset_sum__x_diff_inv_column);
  mask.emplace_back(
      ((ec_op__m_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((ec_op__p_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((ec_op__p_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((ec_op__r_x_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((255) * (ec_op_builtin_row_ratio), 256)) +
          (ec_op__ec_subset_sum__partial_sum__x_offset),
      ec_op__ec_subset_sum__partial_sum__x_column);
  mask.emplace_back(
      ((ec_op__r_y_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((255) * (ec_op_builtin_row_ratio), 256)) +
          (ec_op__ec_subset_sum__partial_sum__y_offset),
      ec_op__ec_subset_sum__partial_sum__y_column);
  mask.emplace_back(
      ((keccak__input_output_suboffset) * (memory_units_row_ratio)) + (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 16)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      keccak__keccak__parse_to_diluted__reshaped_intermediate_offset,
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((keccak__input_output_suboffset) * (memory_units_row_ratio)) + (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 32768)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 16)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 16384)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 8)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 16)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 8192)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((5) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 16)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 16384)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 8)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((7) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 16)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4096)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2)) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv(keccak__row_ratio, 32768))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv(keccak__row_ratio, 16384))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 8))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv((3) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv(keccak__row_ratio, 8192))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 4))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv((5) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((5) * (keccak__row_ratio), 16))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv((3) * (keccak__row_ratio), 16384))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((3) * (keccak__row_ratio), 8))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) + (SafeDiv((7) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((7) * (keccak__row_ratio), 16))) +
       ((keccak__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      keccak__keccak__parse_to_diluted__final_reshaped_input_offset,
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (keccak__row_ratio) + (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 1024)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((2) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((3) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 512)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((4) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((5) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((5) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 1024)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((6) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((7) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((7) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 256)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((8) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((9) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((9) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((5) * (keccak__row_ratio), 1024)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((10) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((11) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((11) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 512)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((12) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((13) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((13) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((7) * (keccak__row_ratio), 1024)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((14) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((15) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((15) * (keccak__row_ratio)) +
          (keccak__keccak__parse_to_diluted__reshaped_intermediate_offset),
      keccak__keccak__parse_to_diluted__reshaped_intermediate_column);
  mask.emplace_back(
      (SafeDiv((25) * (keccak__row_ratio), 128)) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      keccak__keccak__parse_to_diluted__cumulative_sum_offset,
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (((2) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 2048)) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((2) * (keccak__row_ratio))) +
       (SafeDiv((3) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (((4) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 64))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 32768)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((4) * (keccak__row_ratio))) +
       (SafeDiv((3) * (keccak__row_ratio), 64))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv(keccak__row_ratio, 32768))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((6) * (keccak__row_ratio)) + (SafeDiv((9) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 16384)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((6) * (keccak__row_ratio))) +
       (SafeDiv((9) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv(keccak__row_ratio, 16384))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((8) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 32))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((8) * (keccak__row_ratio))) +
       (SafeDiv((3) * (keccak__row_ratio), 32))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((3) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((10) * (keccak__row_ratio)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 8192)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((10) * (keccak__row_ratio))) +
       (SafeDiv((15) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv(keccak__row_ratio, 8192))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((12) * (keccak__row_ratio)) + (SafeDiv((9) * (keccak__row_ratio), 64))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv((5) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((12) * (keccak__row_ratio))) +
       (SafeDiv((9) * (keccak__row_ratio), 64))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((5) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((14) * (keccak__row_ratio)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 16384)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2048)) + ((14) * (keccak__row_ratio))) +
       (SafeDiv((21) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((3) * (keccak__row_ratio), 16384))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (SafeDiv((7) * (keccak__row_ratio), 32768)) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((7) * (keccak__row_ratio), 32768))) +
          (keccak__keccak__parse_to_diluted__final_reshaped_input_offset),
      keccak__keccak__parse_to_diluted__final_reshaped_input_column);
  mask.emplace_back(
      (SafeDiv((63) * (keccak__row_ratio), 4)) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 128)) + (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv((63) * (keccak__row_ratio), 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv(keccak__row_ratio, 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((63) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 2048)) + (SafeDiv((63) * (keccak__row_ratio), 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 2048)) + (SafeDiv(keccak__row_ratio, 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4096)) + (SafeDiv((63) * (keccak__row_ratio), 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4096)) + (SafeDiv(keccak__row_ratio, 128))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 2048)) + (SafeDiv(keccak__row_ratio, 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio)) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((15) * (keccak__row_ratio), 2048)) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 2048)) + (SafeDiv(keccak__row_ratio, 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((31) * (keccak__row_ratio), 4096)) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4096)) + (SafeDiv(keccak__row_ratio, 4))) +
          (keccak__keccak__parse_to_diluted__cumulative_sum_offset),
      keccak__keccak__parse_to_diluted__cumulative_sum_column);
  mask.emplace_back(
      ((SafeDiv((25) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 32)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((25) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 8)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((21) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((25) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 32)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((17) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 16)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((13) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((9) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((23) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 32)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((9) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((19) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 16)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(keccak__keccak__rotated_parity0_offset, keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(keccak__keccak__rotated_parity1_offset, keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(keccak__keccak__rotated_parity2_offset, keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(keccak__keccak__rotated_parity3_offset, keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      ((((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 4)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(keccak__keccak__rotated_parity4_offset, keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      ((((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio)) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 4)) + (SafeDiv((5) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv(keccak__row_ratio, 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((63) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 32)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((31) * (keccak__row_ratio), 2)) + (SafeDiv((5) * (keccak__row_ratio), 32))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((((SafeDiv((31) * (keccak__row_ratio), 2)) +
                (SafeDiv((3) * (keccak__row_ratio), 512))) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 2)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((5) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((7) * (keccak__row_ratio)) + (SafeDiv((5) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((7) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((9) * (keccak__row_ratio)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((9) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      ((((9) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((27) * (keccak__row_ratio), 4)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((SafeDiv((27) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((37) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((37) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((37) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 32))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 8)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((9) * (keccak__row_ratio)) + (SafeDiv(keccak__row_ratio, 8))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((9) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((7) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((7) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      ((((7) * (keccak__row_ratio)) + (SafeDiv((5) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((11) * (keccak__row_ratio)) + (SafeDiv(keccak__row_ratio, 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((11) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((5) * (keccak__row_ratio)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((5) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      ((((5) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 2)) + (SafeDiv((11) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((SafeDiv((3) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((29) * (keccak__row_ratio), 2)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((29) * (keccak__row_ratio), 2)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      (((SafeDiv((29) * (keccak__row_ratio), 2)) + (SafeDiv((7) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 512)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 512))) +
        (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv((7) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 256)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 256))) +
        (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((55) * (keccak__row_ratio), 4)) + (SafeDiv((11) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((9) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((9) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv((9) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((21) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((1153) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((1153) * (keccak__row_ratio), 512)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv((1153) * (keccak__row_ratio), 512)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((577) * (keccak__row_ratio), 256)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((577) * (keccak__row_ratio), 256)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv((577) * (keccak__row_ratio), 256)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((5) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((5) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((11) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((11) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      ((((11) * (keccak__row_ratio)) + (SafeDiv((9) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv((7) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((61) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((61) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((61) * (keccak__row_ratio), 4)) + (SafeDiv((5) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((17) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((5) * (keccak__row_ratio), 2)) + (SafeDiv((17) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((5) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((27) * (keccak__row_ratio), 2)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((27) * (keccak__row_ratio), 2)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((27) * (keccak__row_ratio), 2)) + (SafeDiv((11) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((43) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((43) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((21) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((21) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      (((SafeDiv((21) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 32))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((SafeDiv((3) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 32)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((25) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 32))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((((SafeDiv((25) * (keccak__row_ratio), 4)) +
                (SafeDiv((3) * (keccak__row_ratio), 512))) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((39) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((13) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((15) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 512)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 512))) +
        (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((19) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 256)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 256))) +
        (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((39) * (keccak__row_ratio), 4)) + (SafeDiv((23) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((25) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((25) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((25) * (keccak__row_ratio), 4)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((11) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((3201) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((3201) * (keccak__row_ratio), 512)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((3201) * (keccak__row_ratio), 512)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((19) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((1601) * (keccak__row_ratio), 256)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((1601) * (keccak__row_ratio), 256)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((1601) * (keccak__row_ratio), 256)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((23) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv((27) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 512)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 512))) +
        (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv((31) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 256)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 256))) +
        (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((41) * (keccak__row_ratio), 4)) + (SafeDiv((35) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((23) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((23) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((23) * (keccak__row_ratio), 4)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((23) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((27) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((2945) * (keccak__row_ratio), 512)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((2945) * (keccak__row_ratio), 512)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((2945) * (keccak__row_ratio), 512)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((1473) * (keccak__row_ratio), 256)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((1473) * (keccak__row_ratio), 256)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((1473) * (keccak__row_ratio), 256)) + (SafeDiv((15) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((35) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 16)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((45) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((45) * (keccak__row_ratio), 4)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((19) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((19) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((19) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 8))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((9) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((15) * (keccak__row_ratio), 4)) + (SafeDiv((9) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((15) * (keccak__row_ratio), 4)) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((49) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((49) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      (((SafeDiv((49) * (keccak__row_ratio), 4)) + (SafeDiv((17) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((21) * (keccak__row_ratio), 4)) + (SafeDiv((3) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((21) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((43) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((43) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      (((SafeDiv((43) * (keccak__row_ratio), 4)) + (SafeDiv((9) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((25) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((13) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((2) * (keccak__row_ratio)) + (SafeDiv((13) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((((2) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((14) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((14) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      ((((14) * (keccak__row_ratio)) + (SafeDiv((19) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 64)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((9) * (keccak__row_ratio), 2)) + (SafeDiv((7) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((((SafeDiv((9) * (keccak__row_ratio), 2)) +
                (SafeDiv((3) * (keccak__row_ratio), 512))) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((23) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((23) * (keccak__row_ratio), 2)) + (keccak__keccak__rotated_parity1_offset),
      keccak__keccak__rotated_parity1_column);
  mask.emplace_back(
      (((SafeDiv((23) * (keccak__row_ratio), 2)) + (SafeDiv((5) * (keccak__row_ratio), 32))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((39) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 512)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 512))) +
        (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((43) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv(keccak__row_ratio, 256)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 256)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv(keccak__row_ratio, 256))) +
        (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 2)) + (SafeDiv((47) * (keccak__row_ratio), 512))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((31) * (keccak__row_ratio), 2)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((31) * (keccak__row_ratio), 2)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((31) * (keccak__row_ratio), 2)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 16)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((39) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7937) * (keccak__row_ratio), 512)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((7937) * (keccak__row_ratio), 512)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((7937) * (keccak__row_ratio), 512)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 512)) + (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((43) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3969) * (keccak__row_ratio), 256)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((3969) * (keccak__row_ratio), 256)) + (keccak__keccak__rotated_parity2_offset),
      keccak__keccak__rotated_parity2_column);
  mask.emplace_back(
      (((SafeDiv((3969) * (keccak__row_ratio), 256)) + (SafeDiv((21) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((47) * (keccak__row_ratio), 512)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((9) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((61) * (keccak__row_ratio), 4)) + (SafeDiv((9) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((((SafeDiv((61) * (keccak__row_ratio), 4)) +
               (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((3) * (keccak__row_ratio), 4)) + (keccak__keccak__rotated_parity3_offset),
      keccak__keccak__rotated_parity3_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv((11) * (keccak__row_ratio), 64))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((19) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((14) * (keccak__row_ratio)) + (SafeDiv((19) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((((14) * (keccak__row_ratio)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((2) * (keccak__row_ratio)) + (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((2) * (keccak__row_ratio)) + (keccak__keccak__rotated_parity4_offset),
      keccak__keccak__rotated_parity4_column);
  mask.emplace_back(
      ((((2) * (keccak__row_ratio)) + (SafeDiv((23) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
              (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 32)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7) * (keccak__row_ratio), 2)) + (SafeDiv(keccak__row_ratio, 32))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((((((((SafeDiv((7) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((SafeDiv((25) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (SafeDiv((25) * (keccak__row_ratio), 2)) + (keccak__keccak__rotated_parity0_offset),
      keccak__keccak__rotated_parity0_column);
  mask.emplace_back(
      (((SafeDiv((25) * (keccak__row_ratio), 2)) + (SafeDiv((3) * (keccak__row_ratio), 16))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((((((((SafeDiv((3) * (keccak__row_ratio), 512)) +
             (SafeDiv((3) * (keccak__row_ratio), 512))) +
            (SafeDiv((3) * (keccak__row_ratio), 512))) +
           (SafeDiv((3) * (keccak__row_ratio), 512))) +
          (SafeDiv((3) * (keccak__row_ratio), 512))) +
         (SafeDiv((3) * (keccak__row_ratio), 512))) +
        (SafeDiv((25) * (keccak__row_ratio), 128))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4096)) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio)) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio)) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((33) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((97) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((225) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((7) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((7) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((15) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((481) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((15) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((15) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((31) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((993) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((31) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((31) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((63) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((2017) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((63) * (keccak__row_ratio), 4)) + (SafeDiv(keccak__row_ratio, 64))) +
       ((keccak__keccak__diluted_column3_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((63) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((63) * (keccak__row_ratio), 4)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv(keccak__row_ratio, 32)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 32)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv(keccak__row_ratio, 32)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      (((SafeDiv((3) * (keccak__row_ratio), 128)) + (SafeDiv(keccak__row_ratio, 4096))) +
       ((keccak__keccak__diluted_column0_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column1_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((SafeDiv((3) * (keccak__row_ratio), 128)) +
       ((keccak__keccak__diluted_column2_suboffset) * (diluted_units_row_ratio))) +
          (diluted_pool_offset),
      diluted_pool_column);
  mask.emplace_back(
      ((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__addr_offset),
      mem_pool__addr_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state0_squared_offset,
      poseidon__poseidon__full_rounds_state0_squared_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state0_offset, poseidon__poseidon__full_rounds_state0_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state1_squared_offset,
      poseidon__poseidon__full_rounds_state1_squared_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state1_offset, poseidon__poseidon__full_rounds_state1_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state2_squared_offset,
      poseidon__poseidon__full_rounds_state2_squared_column);
  mask.emplace_back(
      poseidon__poseidon__full_rounds_state2_offset, poseidon__poseidon__full_rounds_state2_column);
  mask.emplace_back(
      poseidon__poseidon__partial_rounds_state0_squared_offset,
      poseidon__poseidon__partial_rounds_state0_squared_column);
  mask.emplace_back(
      poseidon__poseidon__partial_rounds_state0_offset,
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      poseidon__poseidon__partial_rounds_state1_squared_offset,
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      poseidon__poseidon__partial_rounds_state1_offset,
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      ((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio)) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 8)) + (poseidon__poseidon__full_rounds_state0_offset),
      poseidon__poseidon__full_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 8)) + (poseidon__poseidon__full_rounds_state1_offset),
      poseidon__poseidon__full_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 8)) + (poseidon__poseidon__full_rounds_state2_offset),
      poseidon__poseidon__full_rounds_state2_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_0__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state0_offset),
      poseidon__poseidon__full_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state0_squared_offset),
      poseidon__poseidon__full_rounds_state0_squared_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state1_offset),
      poseidon__poseidon__full_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state1_squared_offset),
      poseidon__poseidon__full_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state2_offset),
      poseidon__poseidon__full_rounds_state2_column);
  mask.emplace_back(
      (SafeDiv((7) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state2_squared_offset),
      poseidon__poseidon__full_rounds_state2_squared_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_1__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      ((SafeDiv(poseidon__row_ratio, 2)) +
       ((poseidon__param_2__input_output_suboffset) * (memory_units_row_ratio))) +
          (mem_pool__value_offset),
      mem_pool__value_column);
  mask.emplace_back(
      (SafeDiv((61) * (poseidon__row_ratio), 64)) +
          (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 32)) + (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((31) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 16)) + (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((63) * (poseidon__row_ratio), 64)) +
          (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state0_offset),
      poseidon__poseidon__full_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state0_squared_offset),
      poseidon__poseidon__full_rounds_state0_squared_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state1_offset),
      poseidon__poseidon__full_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state1_squared_offset),
      poseidon__poseidon__full_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) + (poseidon__poseidon__full_rounds_state2_offset),
      poseidon__poseidon__full_rounds_state2_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__full_rounds_state2_squared_offset),
      poseidon__poseidon__full_rounds_state2_squared_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 64)) + (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 32)) + (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 64)) +
          (poseidon__poseidon__partial_rounds_state0_squared_offset),
      poseidon__poseidon__partial_rounds_state0_squared_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 64)) +
          (poseidon__poseidon__partial_rounds_state0_offset),
      poseidon__poseidon__partial_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 32)) +
          (poseidon__poseidon__partial_rounds_state0_squared_offset),
      poseidon__poseidon__partial_rounds_state0_squared_column);
  mask.emplace_back(
      (SafeDiv((3) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 32)) +
          (poseidon__poseidon__partial_rounds_state1_squared_offset),
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 16)) +
          (poseidon__poseidon__partial_rounds_state1_squared_offset),
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 2)) + (poseidon__poseidon__full_rounds_state0_offset),
      poseidon__poseidon__full_rounds_state0_column);
  mask.emplace_back(
      (SafeDiv((19) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((19) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state1_squared_offset),
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv((5) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((5) * (poseidon__row_ratio), 8)) +
          (poseidon__poseidon__partial_rounds_state1_squared_offset),
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv((21) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state1_offset),
      poseidon__poseidon__partial_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv((21) * (poseidon__row_ratio), 32)) +
          (poseidon__poseidon__partial_rounds_state1_squared_offset),
      poseidon__poseidon__partial_rounds_state1_squared_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 2)) + (poseidon__poseidon__full_rounds_state1_offset),
      poseidon__poseidon__full_rounds_state1_column);
  mask.emplace_back(
      (SafeDiv(poseidon__row_ratio, 2)) + (poseidon__poseidon__full_rounds_state2_offset),
      poseidon__poseidon__full_rounds_state2_column);
  mask.emplace_back(
      memory__multi_column_perm__perm__cum_prod0_offset,
      memory__multi_column_perm__perm__cum_prod0_column);
  mask.emplace_back(
      (memory_units_row_ratio) + (memory__multi_column_perm__perm__cum_prod0_offset),
      memory__multi_column_perm__perm__cum_prod0_column);
  mask.emplace_back(range_check16__perm__cum_prod0_offset, range_check16__perm__cum_prod0_column);
  mask.emplace_back(
      (range_check_units_row_ratio) + (range_check16__perm__cum_prod0_offset),
      range_check16__perm__cum_prod0_column);
  mask.emplace_back(
      diluted_check__permutation__cum_prod0_offset, diluted_check__permutation__cum_prod0_column);
  mask.emplace_back(
      (diluted_units_row_ratio) + (diluted_check__permutation__cum_prod0_offset),
      diluted_check__permutation__cum_prod0_column);
  mask.emplace_back(diluted_check__cumulative_value_offset, diluted_check__cumulative_value_column);
  mask.emplace_back(
      (diluted_units_row_ratio) + (diluted_check__cumulative_value_offset),
      diluted_check__cumulative_value_column);

  return mask;
}

}  // namespace cpu

}  // namespace starkware
